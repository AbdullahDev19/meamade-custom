{
	"id": 0,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 7,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 10,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 11,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 12,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 13,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3,
								4,
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15
							]
						}
					]
				}
			}
		},
		{
			"id": 16,
			"name": "ApiKeyType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "secret"
					},
					{
						"type": "literal",
						"value": "publishable"
					}
				]
			}
		},
		{
			"id": 17,
			"name": "ApiKeyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 18,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20,
					"name": "redacted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 16,
						"name": "ApiKeyType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23,
					"name": "last_used_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 24,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 25,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 26,
					"name": "revoked_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 27,
					"name": "revoked_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						18,
						19,
						20,
						21,
						22,
						23,
						24,
						25,
						26,
						27
					]
				}
			]
		},
		{
			"id": 28,
			"name": "FilterableApiKeyProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 29,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 30,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 31,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 32,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 16,
						"name": "ApiKeyType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 28,
									"name": "FilterableApiKeyProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 28,
											"name": "FilterableApiKeyProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 34,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 28,
									"name": "FilterableApiKeyProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 28,
											"name": "FilterableApiKeyProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						29,
						30,
						31,
						32,
						33,
						34
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 28,
							"name": "FilterableApiKeyProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5380,
			"name": "ApiKeyTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 35,
			"name": "CreateApiKeyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 37,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 16,
						"name": "ApiKeyType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36,
						37,
						38
					]
				}
			]
		},
		{
			"id": 39,
			"name": "UpsertApiKeyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 40,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 16,
						"name": "ApiKeyType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 43,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40,
						41,
						42,
						43
					]
				}
			]
		},
		{
			"id": 44,
			"name": "UpdateApiKeyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 45,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						45
					]
				}
			]
		},
		{
			"id": 46,
			"name": "RevokeApiKeyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 47,
					"name": "revoked_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 48,
					"name": "revoke_in",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47,
						48
					]
				}
			]
		},
		{
			"id": 49,
			"name": "IApiKeyModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 50,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 51,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new api key"
									}
								]
							},
							"parameters": [
								{
									"id": 52,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35,
											"name": "CreateApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 53,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "ApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 54,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 55,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35,
										"name": "CreateApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 56,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17,
										"name": "ApiKeyDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 58,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing API keys, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created API keys."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  example - code\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 59,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each API key."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 39,
											"name": "UpsertApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 60,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "ApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 61,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing API key, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created API key."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 62,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the API key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 39,
										"name": "UpsertApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 63,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17,
										"name": "ApiKeyDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 65,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing API key."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated API key."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 66,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The API key's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 67,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details to update in the API key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 44,
										"name": "UpdateApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 68,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17,
										"name": "ApiKeyDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 69,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing API keys."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated API keys."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 70,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to specify which API keys should be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 28,
										"name": "FilterableApiKeyProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 71,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details to update in the API keys."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 44,
										"name": "UpdateApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 72,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "ApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 73,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 74,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete an api key"
									}
								]
							},
							"parameters": [
								{
									"id": 75,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 76,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 77,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 78,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 79,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 81,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve an api key"
									}
								]
							},
							"parameters": [
								{
									"id": 82,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 83,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "ApiKeyDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 84,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17,
										"name": "ApiKeyDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 86,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List api keys"
									}
								]
							},
							"parameters": [
								{
									"id": 87,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 28,
										"name": "FilterableApiKeyProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 88,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "ApiKeyDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 89,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "ApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 90,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 91,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List and count api keys"
									}
								]
							},
							"parameters": [
								{
									"id": 92,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 28,
										"name": "FilterableApiKeyProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 93,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "ApiKeyDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 94,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17,
													"name": "ApiKeyDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 95,
					"name": "revoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 96,
							"name": "revoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Revokes an api key"
									}
								]
							},
							"parameters": [
								{
									"id": 97,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28,
										"name": "FilterableApiKeyProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 98,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 46,
										"name": "RevokeApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 99,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "ApiKeyDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 100,
							"name": "revoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Revokes an api key"
									}
								]
							},
							"parameters": [
								{
									"id": 101,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 102,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 46,
										"name": "RevokeApiKeyDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 103,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17,
										"name": "ApiKeyDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 104,
					"name": "authenticate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 105,
							"name": "authenticate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check the validity of an api key"
									}
								]
							},
							"parameters": [
								{
									"id": 106,
									"name": "token",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 107,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"target": 17,
												"name": "ApiKeyDTO",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						50,
						57,
						64,
						73,
						80,
						85,
						90,
						95,
						104
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3169,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 167,
			"name": "AuthUserDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The auth user details."
					}
				]
			},
			"children": [
				{
					"id": 168,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 169,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 170,
					"name": "entity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated providers entity's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 171,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The scope of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 172,
					"name": "provider_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 173,
					"name": "user_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 174,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The app metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						168,
						169,
						170,
						171,
						172,
						173,
						174
					]
				}
			]
		},
		{
			"id": 175,
			"name": "CreateAuthUserDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The auth user to be created."
					}
				]
			},
			"children": [
				{
					"id": 176,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 177,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 178,
					"name": "entity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated entity's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 179,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The scope of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 180,
					"name": "provider_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 181,
					"name": "user_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 182,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The app metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						176,
						177,
						178,
						179,
						180,
						181,
						182
					]
				}
			]
		},
		{
			"id": 183,
			"name": "UpdateAuthUserDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the auth user."
					}
				]
			},
			"children": [
				{
					"id": 184,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the auth user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 185,
					"name": "provider_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 186,
					"name": "user_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 187,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The app metadata of the auth user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						184,
						185,
						186,
						187
					]
				}
			]
		},
		{
			"id": 188,
			"name": "FilterableAuthUserProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved auth user."
					}
				]
			},
			"children": [
				{
					"id": 189,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the auth user by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 190,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the auth auth user by the associated provider(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 191,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 188,
									"name": "FilterableAuthUserProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 188,
											"name": "FilterableAuthUserProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 192,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 188,
									"name": "FilterableAuthUserProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 188,
											"name": "FilterableAuthUserProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						189,
						190,
						191,
						192
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 188,
							"name": "FilterableAuthUserProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 193,
			"name": "AuthenticationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the authentication response."
					}
				]
			},
			"children": [
				{
					"id": 194,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the authentication was successful."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 195,
					"name": "authUser",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The authenticated user's details. The details shape\ndepends on the used provider ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 196,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error message, if an error occurs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 197,
					"name": "location",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Redirect location. Location takes precedence over success."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						194,
						195,
						196,
						197
					]
				}
			]
		},
		{
			"id": 198,
			"name": "AuthModuleProviderConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Provider configuration for the Medusa auth module."
					}
				]
			},
			"children": [
				{
					"id": 199,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provider name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 200,
					"name": "scopes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Scope configurations for the provider"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 201,
								"name": "AuthProviderScope",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						199,
						200
					]
				}
			]
		},
		{
			"id": 201,
			"name": "AuthProviderScope",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration of a single provider scope"
					}
				]
			}
		},
		{
			"id": 202,
			"name": "AuthenticationInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input for authentication and callback validation methods."
					}
				]
			},
			"children": [
				{
					"id": 203,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "url of incoming authentication request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 204,
					"name": "headers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Headers of incoming authentication request."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 205,
					"name": "query",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Query params of incoming authentication request."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 206,
					"name": "body",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Body of incoming authentication request."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 207,
					"name": "authScope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Scope for authentication request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 208,
					"name": "protocol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Protocol of incoming authentication request (For example, "
							},
							{
								"kind": "code",
								"text": "`https`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						203,
						204,
						205,
						206,
						207,
						208
					]
				}
			]
		},
		{
			"id": 209,
			"name": "AuthTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 118,
			"name": "IAuthModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the authentication module."
					}
				]
			},
			"children": [
				{
					"id": 119,
					"name": "authenticate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 120,
							"name": "authenticate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is the first invoked method of the authentication flow. It handles the incoming authentication request."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authentication's result."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 121,
									"name": "provider",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The provider to use for authentication."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 122,
									"name": "providerData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The authentication data necessary to pass to the provider"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 202,
										"name": "AuthenticationInput",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 193,
										"name": "AuthenticationResponse",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "validateCallback",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 124,
							"name": "validateCallback",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method handles the callback from an authentication provider when an authentication has been initialized and the user is redirected."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authentication's result."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 125,
									"name": "provider",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The provider to use for callback validation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 126,
									"name": "providerData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The authentication data necessary to pass to the provider"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 202,
										"name": "AuthenticationInput",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 193,
										"name": "AuthenticationResponse",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 127,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 128,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the user by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved user."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 129,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 130,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the auth user is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 167,
												"name": "AuthUserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 131,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 167,
										"name": "AuthUserDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 133,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of users based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of users."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 134,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 188,
										"name": "FilterableAuthUserProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 135,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the auth user is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 167,
												"name": "AuthUserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 136,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 167,
											"name": "AuthUserDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 137,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 138,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of user along with the total count of available users satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of users along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 139,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 188,
										"name": "FilterableAuthUserProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 140,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the auth user is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 167,
												"name": "AuthUserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 141,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 167,
													"name": "AuthUserDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 142,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 143,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates users"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created users."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 144,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The auth user to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 175,
											"name": "CreateAuthUserDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 145,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 167,
											"name": "AuthUserDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 146,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a user"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created user."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 147,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The auth user to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 175,
										"name": "CreateAuthUserDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 148,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 167,
										"name": "AuthUserDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 150,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing users."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated users."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 151,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the auth user."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 183,
											"name": "UpdateAuthUserDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 152,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 167,
											"name": "AuthUserDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 153,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing user."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated user."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 154,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the auth user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 183,
										"name": "UpdateAuthUserDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 155,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 167,
										"name": "AuthUserDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 156,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 157,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes users by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the users are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 158,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of IDs of users to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 159,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						119,
						123,
						127,
						132,
						137,
						142,
						149,
						156
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3169,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 210,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 211,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 212,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 213,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 214,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 215,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 214,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 216,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 217,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 218,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 219,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 220,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 221,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 222,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 223,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								212,
								216,
								221
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						211
					]
				}
			]
		},
		{
			"id": 224,
			"name": "CartTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 225,
					"name": "AdjustmentLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 226,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 227,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 228,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 229,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 230,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 231,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 232,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 233,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 234,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								226,
								227,
								228,
								229,
								230,
								231,
								232,
								233,
								234
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 235,
							"name": "ShippingMethodAdjustmentDTO"
						},
						{
							"type": "reference",
							"target": 247,
							"name": "LineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 235,
					"name": "ShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 238,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 226,
								"name": "AdjustmentLineDTO.id"
							}
						},
						{
							"id": 239,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 227,
								"name": "AdjustmentLineDTO.code"
							}
						},
						{
							"id": 240,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 228,
								"name": "AdjustmentLineDTO.amount"
							}
						},
						{
							"id": 241,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 229,
								"name": "AdjustmentLineDTO.cart_id"
							}
						},
						{
							"id": 242,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 230,
								"name": "AdjustmentLineDTO.description"
							}
						},
						{
							"id": 243,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 231,
								"name": "AdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 244,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 232,
								"name": "AdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 245,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 233,
								"name": "AdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 246,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 234,
								"name": "AdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 236,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 306,
								"name": "CartShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 237,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								238,
								239,
								240,
								241,
								242,
								243,
								244,
								245,
								246,
								236,
								237
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 225,
							"name": "AdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 247,
					"name": "LineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 250,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 226,
								"name": "AdjustmentLineDTO.id"
							}
						},
						{
							"id": 251,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 227,
								"name": "AdjustmentLineDTO.code"
							}
						},
						{
							"id": 252,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 228,
								"name": "AdjustmentLineDTO.amount"
							}
						},
						{
							"id": 253,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 229,
								"name": "AdjustmentLineDTO.cart_id"
							}
						},
						{
							"id": 254,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 230,
								"name": "AdjustmentLineDTO.description"
							}
						},
						{
							"id": 255,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 231,
								"name": "AdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 256,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 232,
								"name": "AdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 257,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 233,
								"name": "AdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 258,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 234,
								"name": "AdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 248,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 340,
								"name": "CartLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 249,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								250,
								251,
								252,
								253,
								254,
								255,
								256,
								257,
								258,
								248,
								249
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 225,
							"name": "AdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 259,
					"name": "TaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 260,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 261,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 262,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 263,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 264,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 265,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 266,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 267,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								260,
								261,
								262,
								263,
								264,
								265,
								266,
								267
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 268,
							"name": "ShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 279,
							"name": "LineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 268,
					"name": "ShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 271,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 260,
								"name": "TaxLineDTO.id"
							}
						},
						{
							"id": 272,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 261,
								"name": "TaxLineDTO.description"
							}
						},
						{
							"id": 273,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 262,
								"name": "TaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 274,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 263,
								"name": "TaxLineDTO.code"
							}
						},
						{
							"id": 275,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 264,
								"name": "TaxLineDTO.rate"
							}
						},
						{
							"id": 276,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 265,
								"name": "TaxLineDTO.provider_id"
							}
						},
						{
							"id": 277,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 266,
								"name": "TaxLineDTO.created_at"
							}
						},
						{
							"id": 278,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 267,
								"name": "TaxLineDTO.updated_at"
							}
						},
						{
							"id": 269,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 306,
								"name": "CartShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 270,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								271,
								272,
								273,
								274,
								275,
								276,
								277,
								278,
								269,
								270
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 259,
							"name": "TaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 279,
					"name": "LineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 282,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 260,
								"name": "TaxLineDTO.id"
							}
						},
						{
							"id": 283,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 261,
								"name": "TaxLineDTO.description"
							}
						},
						{
							"id": 284,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 262,
								"name": "TaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 285,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 263,
								"name": "TaxLineDTO.code"
							}
						},
						{
							"id": 286,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 264,
								"name": "TaxLineDTO.rate"
							}
						},
						{
							"id": 287,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 265,
								"name": "TaxLineDTO.provider_id"
							}
						},
						{
							"id": 288,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 266,
								"name": "TaxLineDTO.created_at"
							}
						},
						{
							"id": 289,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 267,
								"name": "TaxLineDTO.updated_at"
							}
						},
						{
							"id": 280,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 340,
								"name": "CartLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 281,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								282,
								283,
								284,
								285,
								286,
								287,
								288,
								289,
								280,
								281
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 259,
							"name": "TaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 290,
					"name": "CartAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 291,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 292,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 293,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 294,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 295,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone number of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 296,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 297,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 298,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The second address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 299,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 300,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 301,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province/state of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 302,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 303,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 304,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 305,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								291,
								292,
								293,
								294,
								295,
								296,
								297,
								298,
								299,
								300,
								301,
								302,
								303,
								304,
								305
							]
						}
					]
				},
				{
					"id": 306,
					"name": "CartShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 307,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 308,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 309,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 310,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 311,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 312,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the shipping method price is tax inclusive or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 313,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option the method was created from"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 314,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional data needed for fulfillment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 315,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 316,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 268,
									"name": "ShippingMethodTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 317,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 235,
									"name": "ShippingMethodAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 318,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 319,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 320,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 321,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 322,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 323,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 324,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 325,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 326,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 327,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								307,
								308,
								309,
								310,
								311,
								312,
								313,
								314,
								315,
								316,
								317,
								318,
								319,
								320,
								321,
								322,
								323,
								324,
								325,
								326,
								327
							]
						}
					]
				},
				{
					"id": 328,
					"name": "CartLineItemTotalsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 329,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 330,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 331,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 332,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 333,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 334,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 335,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 336,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 337,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 338,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 339,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								329,
								330,
								331,
								332,
								333,
								334,
								335,
								336,
								337,
								338,
								339
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 340,
							"name": "CartLineItemDTO"
						}
					]
				},
				{
					"id": 340,
					"name": "CartLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 371,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 329,
								"name": "CartLineItemTotalsDTO.original_total"
							}
						},
						{
							"id": 372,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 330,
								"name": "CartLineItemTotalsDTO.original_subtotal"
							}
						},
						{
							"id": 373,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 331,
								"name": "CartLineItemTotalsDTO.original_tax_total"
							}
						},
						{
							"id": 374,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 332,
								"name": "CartLineItemTotalsDTO.item_total"
							}
						},
						{
							"id": 375,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 333,
								"name": "CartLineItemTotalsDTO.item_subtotal"
							}
						},
						{
							"id": 376,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 334,
								"name": "CartLineItemTotalsDTO.item_tax_total"
							}
						},
						{
							"id": 377,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 335,
								"name": "CartLineItemTotalsDTO.total"
							}
						},
						{
							"id": 378,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 336,
								"name": "CartLineItemTotalsDTO.subtotal"
							}
						},
						{
							"id": 379,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 337,
								"name": "CartLineItemTotalsDTO.tax_total"
							}
						},
						{
							"id": 380,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 338,
								"name": "CartLineItemTotalsDTO.discount_total"
							}
						},
						{
							"id": 381,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 339,
								"name": "CartLineItemTotalsDTO.discount_tax_total"
							}
						},
						{
							"id": 341,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 342,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 343,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The subtitle of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 344,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The url of the line item thumbnail."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 345,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The line item quantity"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 346,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product ID of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 347,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product title of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 348,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product description of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 349,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product subtitle of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 350,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product type of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 351,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 352,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product handle of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 353,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The variant ID of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 354,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The variant sku of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 355,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The variant barcode of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 356,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The variant title of the line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 357,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The variant option values of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 358,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the line item requires shipping or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 359,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the line item is discountable or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 360,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the line item price is tax inclusive or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 361,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original price of the item before an adjustment or a sale."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 362,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price of the item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 363,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 279,
									"name": "LineItemTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 364,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 247,
									"name": "LineItemAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 365,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated cart."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 382,
								"name": "CartDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 366,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 367,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 368,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the line item was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 369,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the line item was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 370,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the line item was deleted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								371,
								372,
								373,
								374,
								375,
								376,
								377,
								378,
								379,
								380,
								381,
								341,
								342,
								343,
								344,
								345,
								346,
								347,
								348,
								349,
								350,
								351,
								352,
								353,
								354,
								355,
								356,
								357,
								358,
								359,
								360,
								361,
								362,
								363,
								364,
								365,
								366,
								367,
								368,
								369,
								370
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 328,
							"name": "CartLineItemTotalsDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 382,
					"name": "CartDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 384,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the region the cart belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 385,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer on the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 386,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel the cart belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 387,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 388,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency of the cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 389,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 290,
								"name": "CartAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 390,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated billing address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 290,
								"name": "CartAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 391,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line items."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 340,
									"name": "CartLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 392,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping methods"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 306,
									"name": "CartShippingMethodDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 393,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 394,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the cart was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 395,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the cart was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 396,
							"name": "original_item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 397,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 398,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 399,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 400,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 401,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 402,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 403,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 404,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 405,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 406,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 407,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 408,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 409,
							"name": "raw_discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 410,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 411,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 412,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 413,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 414,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 415,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 416,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 417,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 418,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								383,
								384,
								385,
								386,
								387,
								388,
								389,
								390,
								391,
								392,
								393,
								394,
								395,
								396,
								397,
								398,
								399,
								400,
								401,
								402,
								403,
								404,
								405,
								406,
								407,
								408,
								409,
								410,
								411,
								412,
								413,
								414,
								415,
								416,
								417,
								418
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 1185,
							"name": "CartWorkflowDTO"
						}
					]
				},
				{
					"id": 419,
					"name": "FilterableCartProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 420,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 421,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 422,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 423,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 424,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 425,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 426,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 419,
											"name": "FilterableCartProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 419,
													"name": "FilterableCartProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 427,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 419,
											"name": "FilterableCartProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 419,
													"name": "FilterableCartProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								420,
								421,
								422,
								423,
								424,
								425,
								426,
								427
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 419,
									"name": "FilterableCartProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 428,
					"name": "FilterableAddressProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 429,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 430,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 428,
											"name": "FilterableAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 428,
													"name": "FilterableAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 431,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 428,
											"name": "FilterableAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 428,
													"name": "FilterableAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								429,
								430,
								431
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 428,
									"name": "FilterableAddressProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 432,
					"name": "FilterableLineItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 433,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 434,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 435,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 436,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 437,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 438,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 432,
											"name": "FilterableLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 432,
													"name": "FilterableLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 439,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 432,
											"name": "FilterableLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 432,
													"name": "FilterableLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								433,
								434,
								435,
								436,
								437,
								438,
								439
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 432,
									"name": "FilterableLineItemProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 440,
					"name": "FilterableLineItemAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 441,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 442,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 443,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 444,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 445,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 432,
								"name": "FilterableLineItemProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 446,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 440,
											"name": "FilterableLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 440,
													"name": "FilterableLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 447,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 440,
											"name": "FilterableLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 440,
													"name": "FilterableLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								441,
								442,
								443,
								444,
								445,
								446,
								447
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 440,
									"name": "FilterableLineItemAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 448,
					"name": "FilterableShippingMethodProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 449,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 450,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 451,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 452,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 453,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 448,
											"name": "FilterableShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 448,
													"name": "FilterableShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 454,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 448,
											"name": "FilterableShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 448,
													"name": "FilterableShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								449,
								450,
								451,
								452,
								453,
								454
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 448,
									"name": "FilterableShippingMethodProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 455,
					"name": "FilterableShippingMethodAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 456,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 457,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 458,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 459,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 460,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 448,
								"name": "FilterableShippingMethodProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 461,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 455,
											"name": "FilterableShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 455,
													"name": "FilterableShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 462,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 455,
											"name": "FilterableShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 455,
													"name": "FilterableShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								456,
								457,
								458,
								459,
								460,
								461,
								462
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 455,
									"name": "FilterableShippingMethodAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 463,
					"name": "FilterableLineItemTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 464,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 465,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 466,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 467,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 468,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 469,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 470,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 432,
								"name": "FilterableLineItemProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 471,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 463,
											"name": "FilterableLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 463,
													"name": "FilterableLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 472,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 463,
											"name": "FilterableLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 463,
													"name": "FilterableLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								464,
								465,
								466,
								467,
								468,
								469,
								470,
								471,
								472
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 463,
									"name": "FilterableLineItemTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 473,
					"name": "FilterableShippingMethodTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 474,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 475,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 476,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 477,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 478,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 479,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 480,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 448,
								"name": "FilterableShippingMethodProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 481,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 473,
											"name": "FilterableShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 473,
													"name": "FilterableShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 482,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 473,
											"name": "FilterableShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 473,
													"name": "FilterableShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								474,
								475,
								476,
								477,
								478,
								479,
								480,
								481,
								482
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 473,
									"name": "FilterableShippingMethodTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 483,
					"name": "legacy_CartDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: Remove this in favor of CartDTO, when module is released"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use CartDTO instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 484,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 485,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 486,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 487,
									"name": "billing_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 488,
									"name": "shipping_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 489,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 490,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 491,
									"name": "payment_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 492,
									"name": "completed_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 493,
									"name": "payment_authorized_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 494,
									"name": "idempotency_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 495,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 496,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 497,
									"name": "sales_channel_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 498,
									"name": "shipping_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 499,
									"name": "discount_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 500,
									"name": "raw_discount_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 501,
									"name": "item_tax_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 502,
									"name": "shipping_tax_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 503,
									"name": "tax_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 504,
									"name": "refunded_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 505,
									"name": "total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 506,
									"name": "subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 507,
									"name": "refundable_amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 508,
									"name": "gift_card_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 509,
									"name": "gift_card_tax_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										485,
										486,
										487,
										488,
										489,
										490,
										491,
										492,
										493,
										494,
										495,
										496,
										497,
										498,
										499,
										500,
										501,
										502,
										503,
										504,
										505,
										506,
										507,
										508,
										509
									]
								}
							]
						}
					}
				},
				{
					"id": 510,
					"name": "UpsertAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 511,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 512,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 513,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 514,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 515,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 516,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 517,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 518,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 519,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 520,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 521,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 522,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								511,
								512,
								513,
								514,
								515,
								516,
								517,
								518,
								519,
								520,
								521,
								522
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 523,
							"name": "UpdateAddressDTO"
						},
						{
							"type": "reference",
							"target": 537,
							"name": "CreateAddressDTO"
						}
					]
				},
				{
					"id": 523,
					"name": "UpdateAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 525,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 511,
								"name": "UpsertAddressDTO.customer_id"
							}
						},
						{
							"id": 526,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 512,
								"name": "UpsertAddressDTO.company"
							}
						},
						{
							"id": 527,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 513,
								"name": "UpsertAddressDTO.first_name"
							}
						},
						{
							"id": 528,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 514,
								"name": "UpsertAddressDTO.last_name"
							}
						},
						{
							"id": 529,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 515,
								"name": "UpsertAddressDTO.address_1"
							}
						},
						{
							"id": 530,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 516,
								"name": "UpsertAddressDTO.address_2"
							}
						},
						{
							"id": 531,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 517,
								"name": "UpsertAddressDTO.city"
							}
						},
						{
							"id": 532,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 518,
								"name": "UpsertAddressDTO.country_code"
							}
						},
						{
							"id": 533,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 519,
								"name": "UpsertAddressDTO.province"
							}
						},
						{
							"id": 534,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 520,
								"name": "UpsertAddressDTO.postal_code"
							}
						},
						{
							"id": 535,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 521,
								"name": "UpsertAddressDTO.phone"
							}
						},
						{
							"id": 536,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 522,
								"name": "UpsertAddressDTO.metadata"
							}
						},
						{
							"id": 524,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								525,
								526,
								527,
								528,
								529,
								530,
								531,
								532,
								533,
								534,
								535,
								536,
								524
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 510,
							"name": "UpsertAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 537,
					"name": "CreateAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 538,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 511,
								"name": "UpsertAddressDTO.customer_id"
							}
						},
						{
							"id": 539,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 512,
								"name": "UpsertAddressDTO.company"
							}
						},
						{
							"id": 540,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 513,
								"name": "UpsertAddressDTO.first_name"
							}
						},
						{
							"id": 541,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 514,
								"name": "UpsertAddressDTO.last_name"
							}
						},
						{
							"id": 542,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 515,
								"name": "UpsertAddressDTO.address_1"
							}
						},
						{
							"id": 543,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 516,
								"name": "UpsertAddressDTO.address_2"
							}
						},
						{
							"id": 544,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 517,
								"name": "UpsertAddressDTO.city"
							}
						},
						{
							"id": 545,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 518,
								"name": "UpsertAddressDTO.country_code"
							}
						},
						{
							"id": 546,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 519,
								"name": "UpsertAddressDTO.province"
							}
						},
						{
							"id": 547,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 520,
								"name": "UpsertAddressDTO.postal_code"
							}
						},
						{
							"id": 548,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 521,
								"name": "UpsertAddressDTO.phone"
							}
						},
						{
							"id": 549,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 522,
								"name": "UpsertAddressDTO.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								538,
								539,
								540,
								541,
								542,
								543,
								544,
								545,
								546,
								547,
								548,
								549
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 510,
							"name": "UpsertAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 550,
					"name": "CreateCartDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CART START"
							}
						]
					},
					"children": [
						{
							"id": 551,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 552,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 553,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 554,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 555,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 556,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 557,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 558,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 559,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 560,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 561,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 660,
									"name": "CreateLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								551,
								552,
								553,
								554,
								555,
								556,
								557,
								558,
								559,
								560,
								561
							]
						}
					]
				},
				{
					"id": 562,
					"name": "UpdateCartDataDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 563,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 564,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 565,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 566,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 567,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 568,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 569,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 570,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 523,
										"name": "UpdateAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 571,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 523,
										"name": "UpdateAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 572,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								563,
								564,
								565,
								566,
								567,
								568,
								569,
								570,
								571,
								572
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 573,
							"name": "UpdateCartDTO"
						}
					]
				},
				{
					"id": 573,
					"name": "UpdateCartDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 575,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 563,
								"name": "UpdateCartDataDTO.region_id"
							}
						},
						{
							"id": 576,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 564,
								"name": "UpdateCartDataDTO.customer_id"
							}
						},
						{
							"id": 577,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 565,
								"name": "UpdateCartDataDTO.sales_channel_id"
							}
						},
						{
							"id": 578,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 566,
								"name": "UpdateCartDataDTO.email"
							}
						},
						{
							"id": 579,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 567,
								"name": "UpdateCartDataDTO.currency_code"
							}
						},
						{
							"id": 580,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 568,
								"name": "UpdateCartDataDTO.shipping_address_id"
							}
						},
						{
							"id": 581,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 569,
								"name": "UpdateCartDataDTO.billing_address_id"
							}
						},
						{
							"id": 582,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 523,
										"name": "UpdateAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 570,
								"name": "UpdateCartDataDTO.billing_address"
							}
						},
						{
							"id": 583,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 523,
										"name": "UpdateAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 537,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 571,
								"name": "UpdateCartDataDTO.shipping_address"
							}
						},
						{
							"id": 584,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 572,
								"name": "UpdateCartDataDTO.metadata"
							}
						},
						{
							"id": 574,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								575,
								576,
								577,
								578,
								579,
								580,
								581,
								582,
								583,
								584,
								574
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 562,
							"name": "UpdateCartDataDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 585,
					"name": "CreateAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 586,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 587,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 588,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 589,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 590,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								586,
								587,
								588,
								589,
								590
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 598,
							"name": "CreateLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 591,
					"name": "UpdateAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 592,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 593,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 594,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 595,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 596,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 597,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								592,
								593,
								594,
								595,
								596,
								597
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 605,
							"name": "UpdateLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 598,
					"name": "CreateLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 600,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 586,
								"name": "CreateAdjustmentDTO.code"
							}
						},
						{
							"id": 601,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 587,
								"name": "CreateAdjustmentDTO.amount"
							}
						},
						{
							"id": 602,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 588,
								"name": "CreateAdjustmentDTO.description"
							}
						},
						{
							"id": 603,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 589,
								"name": "CreateAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 604,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 590,
								"name": "CreateAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 599,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								600,
								601,
								602,
								603,
								604,
								599
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 585,
							"name": "CreateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 605,
					"name": "UpdateLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 607,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 592,
								"name": "UpdateAdjustmentDTO.id"
							}
						},
						{
							"id": 608,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 593,
								"name": "UpdateAdjustmentDTO.code"
							}
						},
						{
							"id": 609,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 594,
								"name": "UpdateAdjustmentDTO.amount"
							}
						},
						{
							"id": 610,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 595,
								"name": "UpdateAdjustmentDTO.description"
							}
						},
						{
							"id": 611,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 596,
								"name": "UpdateAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 612,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 597,
								"name": "UpdateAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 606,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								607,
								608,
								609,
								610,
								611,
								612,
								606
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 591,
							"name": "UpdateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 613,
					"name": "UpsertLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 614,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 615,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 616,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 617,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 618,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 619,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 620,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								614,
								615,
								616,
								617,
								618,
								619,
								620
							]
						}
					]
				},
				{
					"id": 621,
					"name": "CreateTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 622,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 623,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 624,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 625,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 626,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								622,
								623,
								624,
								625,
								626
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 634,
							"name": "CreateShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 647,
							"name": "CreateLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 627,
					"name": "UpdateTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 628,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 629,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 630,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 631,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 632,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 633,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								628,
								629,
								630,
								631,
								632,
								633
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 640,
							"name": "UpdateShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 653,
							"name": "UpdateLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 634,
					"name": "CreateShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 635,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 622,
								"name": "CreateTaxLineDTO.description"
							}
						},
						{
							"id": 636,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 623,
								"name": "CreateTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 637,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 624,
								"name": "CreateTaxLineDTO.code"
							}
						},
						{
							"id": 638,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 625,
								"name": "CreateTaxLineDTO.rate"
							}
						},
						{
							"id": 639,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 626,
								"name": "CreateTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								635,
								636,
								637,
								638,
								639
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 621,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 640,
					"name": "UpdateShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 641,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 628,
								"name": "UpdateTaxLineDTO.id"
							}
						},
						{
							"id": 642,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 629,
								"name": "UpdateTaxLineDTO.description"
							}
						},
						{
							"id": 643,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 630,
								"name": "UpdateTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 644,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 631,
								"name": "UpdateTaxLineDTO.code"
							}
						},
						{
							"id": 645,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 632,
								"name": "UpdateTaxLineDTO.rate"
							}
						},
						{
							"id": 646,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 633,
								"name": "UpdateTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								641,
								642,
								643,
								644,
								645,
								646
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 627,
							"name": "UpdateTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 647,
					"name": "CreateLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 648,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 622,
								"name": "CreateTaxLineDTO.description"
							}
						},
						{
							"id": 649,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 623,
								"name": "CreateTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 650,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 624,
								"name": "CreateTaxLineDTO.code"
							}
						},
						{
							"id": 651,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 625,
								"name": "CreateTaxLineDTO.rate"
							}
						},
						{
							"id": 652,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 626,
								"name": "CreateTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								648,
								649,
								650,
								651,
								652
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 621,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 653,
					"name": "UpdateLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 654,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 628,
								"name": "UpdateTaxLineDTO.id"
							}
						},
						{
							"id": 655,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 629,
								"name": "UpdateTaxLineDTO.description"
							}
						},
						{
							"id": 656,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 630,
								"name": "UpdateTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 657,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 631,
								"name": "UpdateTaxLineDTO.code"
							}
						},
						{
							"id": 658,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 632,
								"name": "UpdateTaxLineDTO.rate"
							}
						},
						{
							"id": 659,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 633,
								"name": "UpdateTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								654,
								655,
								656,
								657,
								658,
								659
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 627,
							"name": "UpdateTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 660,
					"name": "CreateLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 661,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 662,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 663,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 664,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 665,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 666,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 667,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 668,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 669,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 670,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 671,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 672,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 673,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 674,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 675,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 676,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 677,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 678,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 679,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 680,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 681,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 682,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 683,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 621,
									"name": "CreateTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 684,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 585,
									"name": "CreateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								661,
								662,
								663,
								664,
								665,
								666,
								667,
								668,
								669,
								670,
								671,
								672,
								673,
								674,
								675,
								676,
								677,
								678,
								679,
								680,
								681,
								682,
								683,
								684
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 685,
							"name": "CreateLineItemForCartDTO"
						}
					]
				},
				{
					"id": 685,
					"name": "CreateLineItemForCartDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 687,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 661,
								"name": "CreateLineItemDTO.title"
							}
						},
						{
							"id": 688,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 662,
								"name": "CreateLineItemDTO.subtitle"
							}
						},
						{
							"id": 689,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 663,
								"name": "CreateLineItemDTO.thumbnail"
							}
						},
						{
							"id": 690,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 665,
								"name": "CreateLineItemDTO.quantity"
							}
						},
						{
							"id": 691,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 666,
								"name": "CreateLineItemDTO.product_id"
							}
						},
						{
							"id": 692,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 667,
								"name": "CreateLineItemDTO.product_title"
							}
						},
						{
							"id": 693,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 668,
								"name": "CreateLineItemDTO.product_description"
							}
						},
						{
							"id": 694,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 669,
								"name": "CreateLineItemDTO.product_subtitle"
							}
						},
						{
							"id": 695,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 670,
								"name": "CreateLineItemDTO.product_type"
							}
						},
						{
							"id": 696,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 671,
								"name": "CreateLineItemDTO.product_collection"
							}
						},
						{
							"id": 697,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 672,
								"name": "CreateLineItemDTO.product_handle"
							}
						},
						{
							"id": 698,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 673,
								"name": "CreateLineItemDTO.variant_id"
							}
						},
						{
							"id": 699,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 674,
								"name": "CreateLineItemDTO.variant_sku"
							}
						},
						{
							"id": 700,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 675,
								"name": "CreateLineItemDTO.variant_barcode"
							}
						},
						{
							"id": 701,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 676,
								"name": "CreateLineItemDTO.variant_title"
							}
						},
						{
							"id": 702,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 677,
								"name": "CreateLineItemDTO.variant_option_values"
							}
						},
						{
							"id": 703,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 678,
								"name": "CreateLineItemDTO.requires_shipping"
							}
						},
						{
							"id": 704,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 679,
								"name": "CreateLineItemDTO.is_discountable"
							}
						},
						{
							"id": 705,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 680,
								"name": "CreateLineItemDTO.is_tax_inclusive"
							}
						},
						{
							"id": 706,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 681,
								"name": "CreateLineItemDTO.compare_at_unit_price"
							}
						},
						{
							"id": 707,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 682,
								"name": "CreateLineItemDTO.unit_price"
							}
						},
						{
							"id": 708,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 621,
									"name": "CreateTaxLineDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 683,
								"name": "CreateLineItemDTO.tax_lines"
							}
						},
						{
							"id": 709,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 585,
									"name": "CreateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 684,
								"name": "CreateLineItemDTO.adjustments"
							}
						},
						{
							"id": 686,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": 664,
								"name": "CreateLineItemDTO.cart_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								687,
								688,
								689,
								690,
								691,
								692,
								693,
								694,
								695,
								696,
								697,
								698,
								699,
								700,
								701,
								702,
								703,
								704,
								705,
								706,
								707,
								708,
								709,
								686
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 660,
							"name": "CreateLineItemDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 710,
					"name": "UpdateLineItemWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 711,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 340,
										"name": "CartLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 712,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 716,
										"name": "UpdateLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								711,
								712
							]
						}
					]
				},
				{
					"id": 713,
					"name": "UpdateCartWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 714,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 382,
										"name": "CartDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 715,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 562,
								"name": "UpdateCartDataDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								714,
								715
							]
						}
					]
				},
				{
					"id": 716,
					"name": "UpdateLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 727,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.subtitle"
							}
						},
						{
							"id": 728,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.thumbnail"
							}
						},
						{
							"id": 724,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.cart_id"
							}
						},
						{
							"id": 726,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_id"
							}
						},
						{
							"id": 729,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_title"
							}
						},
						{
							"id": 730,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_description"
							}
						},
						{
							"id": 731,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_subtitle"
							}
						},
						{
							"id": 732,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_type"
							}
						},
						{
							"id": 733,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_collection"
							}
						},
						{
							"id": 734,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_handle"
							}
						},
						{
							"id": 725,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_id"
							}
						},
						{
							"id": 735,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_sku"
							}
						},
						{
							"id": 736,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_barcode"
							}
						},
						{
							"id": 737,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_title"
							}
						},
						{
							"id": 738,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_option_values"
							}
						},
						{
							"id": 739,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.requires_shipping"
							}
						},
						{
							"id": 740,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_discountable"
							}
						},
						{
							"id": 741,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_tax_inclusive"
							}
						},
						{
							"id": 742,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.compare_at_unit_price"
							}
						},
						{
							"id": 717,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 718,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 719,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 720,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 721,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 722,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 621,
											"name": "CreateTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 627,
											"name": "UpdateTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 723,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 585,
											"name": "CreateAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 591,
											"name": "UpdateAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								727,
								728,
								724,
								726,
								729,
								730,
								731,
								732,
								733,
								734,
								725,
								735,
								736,
								737,
								738,
								739,
								740,
								741,
								742,
								717,
								718,
								719,
								720,
								721,
								722,
								723
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 660,
									"name": "CreateLineItemDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "tax_lines"
										},
										{
											"type": "literal",
											"value": "adjustments"
										},
										{
											"type": "literal",
											"value": "title"
										},
										{
											"type": "literal",
											"value": "quantity"
										},
										{
											"type": "literal",
											"value": "unit_price"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 743,
					"name": "CreateShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SHIPPING METHODS START"
							}
						]
					},
					"children": [
						{
							"id": 744,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 745,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 746,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 747,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 748,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 621,
									"name": "CreateTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 749,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 585,
									"name": "CreateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								744,
								745,
								746,
								747,
								748,
								749
							]
						}
					]
				},
				{
					"id": 750,
					"name": "CreateShippingMethodForSingleCartDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 751,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 752,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 753,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 754,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 621,
									"name": "CreateTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 755,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 585,
									"name": "CreateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								751,
								752,
								753,
								754,
								755
							]
						}
					]
				},
				{
					"id": 756,
					"name": "UpdateShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 757,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 758,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 759,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 760,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 761,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 621,
											"name": "CreateTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 627,
											"name": "UpdateTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 762,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 585,
											"name": "CreateAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 591,
											"name": "UpdateAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								757,
								758,
								759,
								760,
								761,
								762
							]
						}
					]
				},
				{
					"id": 763,
					"name": "CreateShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 764,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 765,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 766,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 767,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 768,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 769,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								764,
								765,
								766,
								767,
								768,
								769
							]
						}
					]
				},
				{
					"id": 770,
					"name": "UpdateShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 771,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 772,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 773,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 774,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 775,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 776,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								771,
								772,
								773,
								774,
								775,
								776
							]
						}
					]
				},
				{
					"id": 777,
					"name": "ICartModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 778,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 779,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 780,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 781,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 382,
														"name": "CartDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 782,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 382,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 783,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 784,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 785,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 419,
												"name": "FilterableCartProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 786,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 382,
														"name": "CartDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 787,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 382,
													"name": "CartDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 788,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 789,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 790,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 419,
												"name": "FilterableCartProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 791,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 382,
														"name": "CartDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 792,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 382,
															"name": "CartDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 793,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 794,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 795,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 550,
													"name": "CreateCartDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 796,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 382,
													"name": "CartDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 797,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 550,
												"name": "CreateCartDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 799,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 382,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 800,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 801,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 802,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 573,
													"name": "UpdateCartDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 382,
													"name": "CartDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 803,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 804,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 805,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 562,
												"name": "UpdateCartDataDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 806,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 382,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 807,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 808,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 382,
														"name": "CartDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 809,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 562,
												"name": "UpdateCartDataDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 810,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 382,
													"name": "CartDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 811,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 812,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 813,
											"name": "cartIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 814,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 815,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 816,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 817,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 818,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 819,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 820,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 821,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 822,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 823,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 824,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 825,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 826,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 428,
												"name": "FilterableAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 827,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 290,
														"name": "CartAddressDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 828,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 290,
													"name": "CartAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 829,
							"name": "createAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 830,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 831,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 537,
													"name": "CreateAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 832,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 290,
													"name": "CartAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 833,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 834,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 537,
												"name": "CreateAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 835,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 290,
												"name": "CartAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 836,
							"name": "updateAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 837,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 838,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 523,
													"name": "UpdateAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 839,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 290,
													"name": "CartAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 840,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 841,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 523,
												"name": "UpdateAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 842,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 290,
												"name": "CartAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 843,
							"name": "deleteAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 844,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 845,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 846,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 847,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 848,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 849,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 850,
							"name": "retrieveLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 851,
									"name": "retrieveLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 852,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 853,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 340,
														"name": "CartLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 854,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 340,
												"name": "CartLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 855,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 856,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 857,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 432,
												"name": "FilterableLineItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 858,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 340,
														"name": "CartLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 859,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 860,
							"name": "addLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 861,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 862,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 685,
												"name": "CreateLineItemForCartDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 863,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 864,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 685,
													"name": "CreateLineItemForCartDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 865,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 866,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 867,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 660,
													"name": "CreateLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 868,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 869,
							"name": "updateLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 870,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 871,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 710,
													"name": "UpdateLineItemWithSelectorDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 872,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 873,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 340,
														"name": "CartLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 874,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 716,
														"name": "UpdateLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 875,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 340,
													"name": "CartLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 876,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 877,
											"name": "lineId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 878,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 716,
														"name": "UpdateLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 879,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 340,
												"name": "CartLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 880,
							"name": "listShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 881,
									"name": "listShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 882,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 448,
												"name": "FilterableShippingMethodProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 883,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 306,
														"name": "CartShippingMethodDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 884,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 306,
													"name": "CartShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 885,
							"name": "addShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 886,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 887,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 743,
												"name": "CreateShippingMethodDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 306,
												"name": "CartShippingMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 888,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 889,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 743,
													"name": "CreateShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 306,
													"name": "CartShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 890,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 891,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 892,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 750,
													"name": "CreateShippingMethodForSingleCartDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 893,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 306,
													"name": "CartShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 894,
							"name": "listLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 895,
									"name": "listLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 896,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 440,
												"name": "FilterableLineItemAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 897,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 247,
														"name": "LineItemAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 898,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 247,
													"name": "LineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 899,
							"name": "addLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 900,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 901,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 598,
													"name": "CreateLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 247,
													"name": "LineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 902,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 903,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 598,
												"name": "CreateLineItemAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 247,
													"name": "LineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 904,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 905,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 906,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 598,
													"name": "CreateLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 247,
													"name": "LineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 907,
							"name": "setLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 908,
									"name": "setLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 909,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 910,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 613,
													"name": "UpsertLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 911,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 247,
													"name": "LineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 912,
							"name": "listShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 913,
									"name": "listShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 914,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 455,
												"name": "FilterableShippingMethodAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 915,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 235,
														"name": "ShippingMethodAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 916,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 235,
													"name": "ShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 917,
							"name": "addShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 918,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 919,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 763,
													"name": "CreateShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 235,
													"name": "ShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 920,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 921,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 763,
												"name": "CreateShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 235,
												"name": "ShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 922,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 923,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 924,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 763,
													"name": "CreateShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 925,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 235,
													"name": "ShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 926,
							"name": "setShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 927,
									"name": "setShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 928,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 929,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 763,
															"name": "CreateShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 770,
															"name": "UpdateShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 930,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 235,
													"name": "ShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 931,
							"name": "listLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 932,
									"name": "listLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 933,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 463,
												"name": "FilterableLineItemTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 934,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 279,
														"name": "LineItemTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 935,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 279,
													"name": "LineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 936,
							"name": "addLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 937,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 938,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 647,
													"name": "CreateLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 279,
													"name": "LineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 939,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 940,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 647,
												"name": "CreateLineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 279,
												"name": "LineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 941,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 942,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 943,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 647,
														"name": "CreateLineItemTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 647,
															"name": "CreateLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 944,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 279,
													"name": "LineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 945,
							"name": "setLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 946,
									"name": "setLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 947,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 948,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 647,
															"name": "CreateLineItemTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 653,
															"name": "UpdateLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 949,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 279,
													"name": "LineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 950,
							"name": "listShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 951,
									"name": "listShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 952,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 473,
												"name": "FilterableShippingMethodTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 953,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 268,
														"name": "ShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 954,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 268,
													"name": "ShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 955,
							"name": "addShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 956,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 957,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 634,
													"name": "CreateShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 268,
													"name": "ShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 958,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 959,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 634,
												"name": "CreateShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 268,
												"name": "ShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 960,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 961,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 962,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 634,
														"name": "CreateShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 634,
															"name": "CreateShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 963,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 268,
													"name": "ShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 964,
							"name": "setShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 965,
									"name": "setShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 966,
											"name": "cartId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 967,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 634,
															"name": "CreateShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 640,
															"name": "UpdateShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 968,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 268,
													"name": "ShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 969,
							"name": "deleteLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 970,
									"name": "deleteLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 971,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 972,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 973,
									"name": "deleteLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 974,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 975,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 976,
							"name": "deleteShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 977,
									"name": "deleteShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 978,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 979,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 980,
									"name": "deleteShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 981,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 982,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 983,
							"name": "deleteLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 984,
									"name": "deleteLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 985,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 986,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 987,
									"name": "deleteLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 988,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 989,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 990,
							"name": "deleteShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 991,
									"name": "deleteShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 992,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 993,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 994,
									"name": "deleteShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 995,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 996,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 997,
							"name": "deleteLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 998,
									"name": "deleteLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 999,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1000,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1001,
									"name": "deleteLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1002,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1003,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1004,
							"name": "deleteShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1005,
									"name": "deleteShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1006,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1007,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1008,
									"name": "deleteShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1009,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1010,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1011,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1012,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1013,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1014,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1015,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1013,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1016,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1013,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1017,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1018,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1019,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1020,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1021,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1019,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1022,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1019,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1023,
							"name": "softDeleteAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1024,
									"name": "softDeleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1025,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1026,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1027,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1025,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1028,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1025,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1029,
							"name": "restoreAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1030,
									"name": "restoreAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1031,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1032,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1033,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1031,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1034,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1031,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1035,
							"name": "softDeleteLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1036,
									"name": "softDeleteLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1037,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1038,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1039,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1037,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1040,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1037,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1041,
							"name": "restoreLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1042,
									"name": "restoreLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1043,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1044,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1045,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1043,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1046,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1043,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1047,
							"name": "softDeleteShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1048,
									"name": "softDeleteShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1049,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1050,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1051,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1049,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1052,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1049,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1053,
							"name": "restoreShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1054,
									"name": "restoreShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1055,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1056,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1057,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1055,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1058,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1055,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1059,
							"name": "softDeleteLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1060,
									"name": "softDeleteLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1061,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1062,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1063,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1061,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1064,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1061,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1065,
							"name": "restoreLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1066,
									"name": "restoreLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1067,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1068,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1069,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1067,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1070,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1067,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1071,
							"name": "softDeleteShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1072,
									"name": "softDeleteShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1073,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1074,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1075,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1073,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1076,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1073,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1077,
							"name": "restoreShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1078,
									"name": "restoreShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1079,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1080,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1081,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1079,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1082,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1079,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1083,
							"name": "softDeleteLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1084,
									"name": "softDeleteLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1085,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1086,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1087,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1085,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1088,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1085,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1089,
							"name": "restoreLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1090,
									"name": "restoreLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1091,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1092,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1093,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1091,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1094,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1091,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1095,
							"name": "softDeleteShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1096,
									"name": "softDeleteShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1097,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1098,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1099,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1097,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1100,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1097,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1101,
							"name": "restoreShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1102,
									"name": "restoreShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1103,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1104,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1105,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1103,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1106,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1103,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								778,
								783,
								788,
								793,
								800,
								811,
								824,
								829,
								836,
								843,
								850,
								855,
								860,
								869,
								880,
								885,
								894,
								899,
								907,
								912,
								917,
								926,
								931,
								936,
								945,
								950,
								955,
								964,
								969,
								976,
								983,
								990,
								997,
								1004,
								1011,
								1017,
								1023,
								1029,
								1035,
								1041,
								1047,
								1053,
								1059,
								1065,
								1071,
								1077,
								1083,
								1089,
								1095,
								1101
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1114,
					"name": "CreateCartCreateLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1115,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1116,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1117,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1118,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1119,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1120,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1121,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1122,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1123,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1124,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1125,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1126,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1127,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1128,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1129,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1130,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1131,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1132,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1133,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1134,
							"name": "is_giftcard",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1135,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1136,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1137,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1115,
								1116,
								1117,
								1118,
								1119,
								1120,
								1121,
								1122,
								1123,
								1124,
								1125,
								1126,
								1127,
								1128,
								1129,
								1130,
								1131,
								1132,
								1133,
								1134,
								1135,
								1136,
								1137
							]
						}
					]
				},
				{
					"id": 1138,
					"name": "UpdateLineItemInCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1139,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 382,
								"name": "CartDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1140,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 340,
								"name": "CartLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1141,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 716,
										"name": "UpdateLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1139,
								1140,
								1141
							]
						}
					]
				},
				{
					"id": 1142,
					"name": "CreateCartAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1143,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1144,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1145,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1146,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1147,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1148,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1149,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1150,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1151,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1152,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1153,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1143,
								1144,
								1145,
								1146,
								1147,
								1148,
								1149,
								1150,
								1151,
								1152,
								1153
							]
						}
					]
				},
				{
					"id": 1154,
					"name": "CreateCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1155,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1156,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1157,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1158,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1159,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1160,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1161,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1162,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1142,
										"name": "CreateCartAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1163,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1142,
										"name": "CreateCartAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1164,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1165,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1114,
									"name": "CreateCartCreateLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1166,
							"name": "promo_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1155,
								1156,
								1157,
								1158,
								1159,
								1160,
								1161,
								1162,
								1163,
								1164,
								1165,
								1166
							]
						}
					]
				},
				{
					"id": 1167,
					"name": "AddToCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1168,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1114,
									"name": "CreateCartCreateLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1169,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1185,
								"name": "CartWorkflowDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1168,
								1169
							]
						}
					]
				},
				{
					"id": 1170,
					"name": "UpdateCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1171,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1172,
							"name": "promo_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1173,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1174,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1175,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1176,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1177,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1178,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1171,
								1172,
								1173,
								1174,
								1175,
								1176,
								1177,
								1178
							]
						}
					]
				},
				{
					"id": 1179,
					"name": "CreatePaymentCollectionForCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1180,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1181,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1182,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1183,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1184,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1180,
								1181,
								1182,
								1183,
								1184
							]
						}
					]
				},
				{
					"id": 1185,
					"name": "CartWorkflowDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1189,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 383,
								"name": "CartDTO.id"
							}
						},
						{
							"id": 1190,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the region the cart belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 384,
								"name": "CartDTO.region_id"
							}
						},
						{
							"id": 1191,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer on the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 385,
								"name": "CartDTO.customer_id"
							}
						},
						{
							"id": 1192,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel the cart belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 386,
								"name": "CartDTO.sales_channel_id"
							}
						},
						{
							"id": 1193,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the cart."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 387,
								"name": "CartDTO.email"
							}
						},
						{
							"id": 1194,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency of the cart"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 388,
								"name": "CartDTO.currency_code"
							}
						},
						{
							"id": 1195,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 290,
								"name": "CartAddressDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 389,
								"name": "CartDTO.shipping_address"
							}
						},
						{
							"id": 1196,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated billing address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 290,
								"name": "CartAddressDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 390,
								"name": "CartDTO.billing_address"
							}
						},
						{
							"id": 1197,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line items."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 340,
									"name": "CartLineItemDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 391,
								"name": "CartDTO.items"
							}
						},
						{
							"id": 1198,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping methods"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 306,
									"name": "CartShippingMethodDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 392,
								"name": "CartDTO.shipping_methods"
							}
						},
						{
							"id": 1199,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 393,
								"name": "CartDTO.metadata"
							}
						},
						{
							"id": 1200,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the cart was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 394,
								"name": "CartDTO.created_at"
							}
						},
						{
							"id": 1201,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the cart was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 395,
								"name": "CartDTO.updated_at"
							}
						},
						{
							"id": 1202,
							"name": "original_item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 396,
								"name": "CartDTO.original_item_total"
							}
						},
						{
							"id": 1203,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 397,
								"name": "CartDTO.original_item_subtotal"
							}
						},
						{
							"id": 1204,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 398,
								"name": "CartDTO.original_item_tax_total"
							}
						},
						{
							"id": 1205,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 399,
								"name": "CartDTO.item_total"
							}
						},
						{
							"id": 1206,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 400,
								"name": "CartDTO.item_subtotal"
							}
						},
						{
							"id": 1207,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 401,
								"name": "CartDTO.item_tax_total"
							}
						},
						{
							"id": 1208,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 402,
								"name": "CartDTO.original_total"
							}
						},
						{
							"id": 1209,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 403,
								"name": "CartDTO.original_subtotal"
							}
						},
						{
							"id": 1210,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 404,
								"name": "CartDTO.original_tax_total"
							}
						},
						{
							"id": 1211,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 405,
								"name": "CartDTO.total"
							}
						},
						{
							"id": 1212,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 406,
								"name": "CartDTO.subtotal"
							}
						},
						{
							"id": 1213,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 407,
								"name": "CartDTO.tax_total"
							}
						},
						{
							"id": 1214,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 408,
								"name": "CartDTO.discount_total"
							}
						},
						{
							"id": 1215,
							"name": "raw_discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 409,
								"name": "CartDTO.raw_discount_total"
							}
						},
						{
							"id": 1216,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 410,
								"name": "CartDTO.discount_tax_total"
							}
						},
						{
							"id": 1217,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 411,
								"name": "CartDTO.gift_card_total"
							}
						},
						{
							"id": 1218,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 412,
								"name": "CartDTO.gift_card_tax_total"
							}
						},
						{
							"id": 1219,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 413,
								"name": "CartDTO.shipping_total"
							}
						},
						{
							"id": 1220,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 414,
								"name": "CartDTO.shipping_subtotal"
							}
						},
						{
							"id": 1221,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 415,
								"name": "CartDTO.shipping_tax_total"
							}
						},
						{
							"id": 1222,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 416,
								"name": "CartDTO.original_shipping_total"
							}
						},
						{
							"id": 1223,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 417,
								"name": "CartDTO.original_shipping_subtotal"
							}
						},
						{
							"id": 1224,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 418,
								"name": "CartDTO.original_shipping_tax_total"
							}
						},
						{
							"id": 1186,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1539,
								"name": "CustomerDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1187,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/product/common.ts",
									"qualifiedName": "ProductDTO"
								},
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1188,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6381,
								"name": "RegionDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1189,
								1190,
								1191,
								1192,
								1193,
								1194,
								1195,
								1196,
								1197,
								1198,
								1199,
								1200,
								1201,
								1202,
								1203,
								1204,
								1205,
								1206,
								1207,
								1208,
								1209,
								1210,
								1211,
								1212,
								1213,
								1214,
								1215,
								1216,
								1217,
								1218,
								1219,
								1220,
								1221,
								1222,
								1223,
								1224,
								1186,
								1187,
								1188
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 382,
							"name": "CartDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1225,
					"name": "ListShippingOptionsForCartWorkflowInputDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1226,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1227,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1228,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1229,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1230,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1231,
											"name": "city",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1232,
											"name": "country_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1233,
											"name": "province",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1231,
												1232,
												1233
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1226,
								1227,
								1228,
								1229
							]
						}
					]
				},
				{
					"id": 1234,
					"name": "PricedShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1235,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1236,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2199,
								"name": "ShippingOptionDTO.id"
							}
						},
						{
							"id": 1237,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2200,
								"name": "ShippingOptionDTO.name"
							}
						},
						{
							"id": 1238,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2197,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2201,
								"name": "ShippingOptionDTO.price_type"
							}
						},
						{
							"id": 1239,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2202,
								"name": "ShippingOptionDTO.service_zone_id"
							}
						},
						{
							"id": 1240,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2203,
								"name": "ShippingOptionDTO.shipping_profile_id"
							}
						},
						{
							"id": 1241,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2204,
								"name": "ShippingOptionDTO.provider_id"
							}
						},
						{
							"id": 1242,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2205,
								"name": "ShippingOptionDTO.shipping_option_type_id"
							}
						},
						{
							"id": 1243,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2206,
								"name": "ShippingOptionDTO.data"
							}
						},
						{
							"id": 1244,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2207,
								"name": "ShippingOptionDTO.metadata"
							}
						},
						{
							"id": 1245,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2263,
								"name": "ServiceZoneDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2208,
								"name": "ShippingOptionDTO.service_zone"
							}
						},
						{
							"id": 1246,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2162,
								"name": "ShippingProfileDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2209,
								"name": "ShippingOptionDTO.shipping_profile"
							}
						},
						{
							"id": 1247,
							"name": "fulfillment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2301,
								"name": "FulfillmentProviderDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2210,
								"name": "ShippingOptionDTO.fulfillment_provider"
							}
						},
						{
							"id": 1248,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2246,
								"name": "ShippingOptionTypeDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2211,
								"name": "ShippingOptionDTO.type"
							}
						},
						{
							"id": 1249,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2178,
									"name": "ShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2212,
								"name": "ShippingOptionDTO.rules"
							}
						},
						{
							"id": 1250,
							"name": "fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2309,
									"name": "FulfillmentDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2213,
								"name": "ShippingOptionDTO.fulfillments"
							}
						},
						{
							"id": 1251,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2214,
								"name": "ShippingOptionDTO.created_at"
							}
						},
						{
							"id": 1252,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2215,
								"name": "ShippingOptionDTO.updated_at"
							}
						},
						{
							"id": 1253,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2216,
								"name": "ShippingOptionDTO.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1235,
								1236,
								1237,
								1238,
								1239,
								1240,
								1241,
								1242,
								1243,
								1244,
								1245,
								1246,
								1247,
								1248,
								1249,
								1250,
								1251,
								1252,
								1253
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2198,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						225,
						235,
						247,
						259,
						268,
						279,
						290,
						306,
						328,
						340,
						382,
						419,
						428,
						432,
						440,
						448,
						455,
						463,
						473,
						510,
						523,
						537,
						550,
						562,
						573,
						585,
						591,
						598,
						605,
						613,
						621,
						627,
						634,
						640,
						647,
						653,
						660,
						685,
						710,
						713,
						716,
						743,
						750,
						756,
						763,
						770,
						777,
						1114,
						1138,
						1142,
						1154,
						1167,
						1170,
						1179,
						1185,
						1225,
						1234
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						483
					]
				}
			]
		},
		{
			"id": 6554,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 6555,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6556,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6557,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6558,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6559,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`cookie_secret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6560,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6555,
						6556,
						6557,
						6558,
						6559,
						6560
					]
				}
			]
		},
		{
			"id": 1254,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 1255,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 1256,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1257,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 1256,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 1256,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 1257,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 1256,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 1261,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 1262,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1263,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 1264,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1262,
								1263,
								1264
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 1265,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 1265,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 1267,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1262,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 1268,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1263,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 1269,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1264,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 1266,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1267,
								1268,
								1269,
								1266
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1261,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1272,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 1273,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 1283,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 1274,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1275,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1276,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1277,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1278,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignature": {
										"id": 1279,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 1280,
												"name": "K",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "ASC"
												},
												{
													"type": "literal",
													"value": "DESC"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 1281,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1282,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1273,
								1274,
								1275,
								1276,
								1277,
								1281,
								1282
							]
						}
					],
					"typeParameters": [
						{
							"id": 1283,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 1321,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 1322,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1323,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1324,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1325,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1326,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Field to sort items in the list by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1322,
								1323,
								1324,
								1325,
								1326
							]
						}
					]
				},
				{
					"id": 1327,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields included in the response if it's paginated."
							}
						]
					},
					"children": [
						{
							"id": 1328,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The limit applied on the retrieved items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1329,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items skipped before retrieving the list of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1330,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total count of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1328,
								1329,
								1330
							]
						}
					]
				},
				{
					"id": 1331,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields returned in the response of a DELETE request."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1332,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1333,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1334,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1335,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1333,
										1334,
										1335
									]
								}
							]
						}
					}
				},
				{
					"id": 1336,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 1337,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 6379,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 1338,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 1339,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 1340,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 1341,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 1342,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1339,
								1340,
								1341,
								1342
							]
						}
					]
				},
				{
					"id": 1343,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 1344,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1345,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1346,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1347,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1348,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1349,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1350,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1344,
								1345,
								1346,
								1347,
								1348,
								1349,
								1350
							]
						}
					]
				},
				{
					"id": 1351,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 1352,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1353,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1354,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1355,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1352,
								1353,
								1354,
								1355
							]
						}
					]
				},
				{
					"id": 1356,
					"name": "AddressPayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating/updating an address."
							}
						]
					},
					"children": [
						{
							"id": 1357,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1358,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1359,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1360,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1361,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1362,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1363,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1364,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1365,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1366,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1367,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1357,
								1358,
								1359,
								1360,
								1361,
								1362,
								1363,
								1364,
								1365,
								1366,
								1367
							]
						}
					]
				},
				{
					"id": 1368,
					"name": "AddressCreatePayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating an address."
							}
						]
					},
					"children": [
						{
							"id": 1369,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1370,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1371,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1372,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1373,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1374,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1375,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1376,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1377,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1378,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1379,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1369,
								1370,
								1371,
								1372,
								1373,
								1374,
								1375,
								1376,
								1377,
								1378,
								1379
							]
						}
					]
				},
				{
					"id": 1380,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how data is retrieved."
							}
						]
					},
					"children": [
						{
							"id": 1381,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1382,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1381,
								1382
							]
						}
					]
				},
				{
					"id": 1383,
					"name": "FindPaginationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how a list of data is paginated."
							}
						]
					},
					"children": [
						{
							"id": 1384,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1385,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1384,
								1385
							]
						}
					]
				},
				{
					"id": 1388,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 1389,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 1389,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 1388,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 1388,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 1389,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1390,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 1391,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 1391,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 1390,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 1390,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 1391,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 1392,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 1393,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1394,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1395,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1396,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1393,
								1394,
								1395,
								1396
							]
						}
					]
				},
				{
					"id": 1397,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 1398,
							"name": "store_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`store_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:8000`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: process.env.STORE_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: \"/vercel\\\\.app$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1399,
							"name": "admin_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`admin_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:7001`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: process.env.ADMIN_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1400,
							"name": "auth_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1401,
							"name": "cookie_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create cookie tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    cookie_secret: process.env.COOKIE_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1402,
							"name": "jwt_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create authentication tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jwt_secret: process.env.JWT_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1403,
							"name": "database_database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`database_url`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_database: process.env.DATABASE_DATABASE ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1404,
							"name": "database_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_url: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1405,
							"name": "database_schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_schema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1406,
							"name": "database_logging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_logging: [\n      \"query\", \"error\",\n    ],\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 1408,
							"name": "database_extra",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_extra:\n      process.env.NODE_ENV !== \"development\"\n        ? { ssl: { rejectUnauthorized: false } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1409,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1410,
													"name": "ssl",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configure support for TLS/SSL connection"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1411,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1412,
																	"name": "rejectUnauthorized",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																			}
																		]
																	},
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1412
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1410
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1413,
							"name": "redis_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_url: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1414,
							"name": "redis_prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_prefix: process.env.REDIS_PREFIX ||\n      \"medusa:\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1415,
							"name": "redis_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_options: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 1416,
							"name": "session_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    session_options: {\n      name: process.env.SESSION_NAME ||\n        \"custom\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6554,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1417,
							"name": "http_compression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
									},
									{
										"kind": "code",
										"text": "`\"x-no-compression\": true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    http_compression: {\n      enabled: true,\n      level: 6,\n      memLevel: 8,\n      threshold: 1024,\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1392,
								"name": "HttpCompressionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1418,
							"name": "jobs_batch_size",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jobs_batch_size: 100\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1398,
								1399,
								1400,
								1401,
								1402,
								1403,
								1404,
								1405,
								1406,
								1408,
								1413,
								1414,
								1415,
								1416,
								1417,
								1418
							]
						}
					]
				},
				{
					"id": 1419,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 1420,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": ": (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "plugins",
								"target": 1421,
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 1425,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 1426,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig,\n  plugins,\n  modules,\n  featureFlags,\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 1420,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1397,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1421,
							"name": "plugins",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "On your Medusa backend, you can use [Plugins](https://docs.medusajs.com/development/plugins/overview) to add custom features or integrate third-party services.\nFor example, installing a plugin to use Stripe as a payment processor.\n\nAside from installing the plugin with NPM, you need to pass the plugin you installed into the "
									},
									{
										"kind": "code",
										"text": "`plugins`"
									},
									{
										"kind": "text",
										"text": " array defined in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe items in the array can either be:\n\n- A string, which is the name of the plugin to add. You can pass a plugin as a string if it doesn’t require any configurations.\n- An object having the following properties:\n    - "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": The name of the plugin.\n    - "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": An object that includes the plugin’s options. These options vary for each plugin, and you should refer to the plugin’s documentation for available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  plugins: [\n    `medusa-my-plugin-1`,\n    {\n      resolve: `medusa-my-plugin`,\n      options: {\n        apiKey: process.env.MY_API_KEY ||\n          `test`,\n      },\n    },\n    // ...\n  ],\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 1422,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1423,
														"name": "resolve",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 1424,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "unknown"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1423,
															1424
														]
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1425,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the type of module. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled;\n2. Or a string value indicating the name of the module to be used for the module type. This can be used if the module does not require any options;\n3. Or an object having the following properties, but typically you would mainly use the "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " properties only:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the name of the module.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": an object indicating the options to pass to the module. These options vary for each module, and you should refer to the module’s documentation for details on them.\n    3. "
									},
									{
										"kind": "code",
										"text": "`resources`"
									},
									{
										"kind": "text",
										"text": ": a string indicating whether the module shares the dependency container with the Medusa core. Its value can either be "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`isolated`"
									},
									{
										"kind": "text",
										"text": ". Refer to the [Modules documentation](https://docs.medusajs.com/development/modules/create#module-scope) for more details.\n    4. "
									},
									{
										"kind": "code",
										"text": "`alias`"
									},
									{
										"kind": "text",
										"text": ": a string indicating a unique alias to register the module under. Other modules can’t use the same alias.\n    5. "
									},
									{
										"kind": "code",
										"text": "`main`"
									},
									{
										"kind": "text",
										"text": ": a boolean value indicating whether this module is the main registered module. This is useful when an alias is used."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  modules: {\n    eventBus: {\n      resolve: \"@medusajs/event-bus-local\",\n    },\n    cacheService: {\n      resolve: \"@medusajs/cache-redis\",\n      options: {\n        redisUrl: process.env.CACHE_REDIS_URL,\n        ttl: 30,\n      },\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 3025,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 3035,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1426,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf you want to use the environment variables method, learn more about it in the [Feature Flags documentation](https://docs.medusajs.com/development/feature-flags/toggle#method-one-using-environment-variables).\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/master/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  featureFlags: {\n    product_categories: true,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to [run migrations](https://docs.medusajs.com/development/entities/migrations/overview#migrate-command) as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1420,
								1421,
								1425,
								1426
							]
						}
					]
				},
				{
					"id": 1427,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to \nprovide dependency injection functionalities."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1428,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 1438,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1439,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1440,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 1441,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 1442,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 1443,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1442,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										1440
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						1261,
						1265,
						1272,
						1321,
						1327,
						1336,
						1337,
						1338,
						1343,
						1351,
						1356,
						1368,
						1380,
						1383,
						1392,
						1397,
						1419
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						1255,
						1331,
						1388,
						1390,
						1427,
						1438
					]
				}
			]
		},
		{
			"id": 5488,
			"name": "CurrencyTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 5489,
					"name": "CurrencyDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A currency's data."
							}
						]
					},
					"children": [
						{
							"id": 5490,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ISO 3 code of the currency."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5491,
							"name": "symbol",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The symbol of the currency."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5492,
							"name": "symbol_native",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The symbol of the currecy in its native form. This is typically the symbol used when displaying a price."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5493,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the currency."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5490,
								5491,
								5492,
								5493
							]
						}
					]
				},
				{
					"id": 5494,
					"name": "FilterableCurrencyProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 5495,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The codes to filter the currencies by."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5496,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5494,
											"name": "FilterableCurrencyProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5494,
													"name": "FilterableCurrencyProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 5497,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5494,
											"name": "FilterableCurrencyProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5494,
													"name": "FilterableCurrencyProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5495,
								5496,
								5497
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 5494,
									"name": "FilterableCurrencyProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 5498,
					"name": "ICurrencyModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the currency module."
							}
						]
					},
					"children": [
						{
							"id": 5499,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5500,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a currency by its code and and optionally based on the provided configurations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved currency."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a currency by its code:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrency (code: string) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const currency = await currencyModule.retrieve(\n    code\n  )\n\n  // do something with the currency or return it\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify attributes that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrency (code: string) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const currency = await currencyModule.retrieve(\n    code,\n    {\n      select: [\"symbol_native\"]\n    }\n  )\n\n  // do something with the currency or return it\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5501,
											"name": "code",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The code of the currency to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5502,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the currency is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5489,
														"name": "CurrencyDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5503,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5489,
												"name": "CurrencyDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5504,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5505,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of currencies based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of currencies."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of currencies using their codes:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[]) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const currencies = await currencyModule.list(\n    {\n      code: codes\n    },\n  )\n\n  // do something with the currencies or return them\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify attributes that should be retrieved within the money amounts:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[]) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const currencies = await currencyModule.list(\n    {\n      code: codes\n    },\n    {\n      select: [\"symbol_native\"]\n    }\n  )\n\n  // do something with the currencies or return them\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[], skip: number, take: number) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const currencies = await currencyModule.list(\n    {\n      code: codes\n    },\n    {\n      select: [\"symbol_native\"],\n      skip,\n      take\n    }\n  )\n\n  // do something with the currencies or return them\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5506,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved currencies."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5494,
												"name": "FilterableCurrencyProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5507,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the currencies are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5489,
														"name": "CurrencyDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5508,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5489,
													"name": "CurrencyDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5509,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5510,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of currencies along with the total count of available currencies satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of currencies along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of currencies using their codes:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[]) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const [currencies, count] = await currencyModule.listAndCount(\n    {\n      code: codes\n    },\n  )\n\n  // do something with the currencies or return them\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify attributes that should be retrieved within the money amounts:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[]) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const [currencies, count] = await currencyModule.listAndCount(\n    {\n      code: codes\n    },\n    {\n      select: [\"symbol_native\"]\n    }\n  )\n\n  // do something with the currencies or return them\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeCurrencyModule,\n} from \"@medusajs/currency\"\n\nasync function retrieveCurrencies (codes: string[], skip: number, take: number) {\n  const currencyModule = await initializeCurrencyModule()\n\n  const [currencies, count] = await currencyModule.listAndCount(\n    {\n      code: codes\n    },\n    {\n      select: [\"symbol_native\"],\n      skip,\n      take\n    }\n  )\n\n  // do something with the currencies or return them\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5511,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved currencies."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5494,
												"name": "FilterableCurrencyProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5512,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the currencies are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5489,
														"name": "CurrencyDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5513,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 5489,
															"name": "CurrencyDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								5499,
								5504,
								5509
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5489,
						5494,
						5498
					]
				}
			]
		},
		{
			"id": 1444,
			"name": "CustomerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 1445,
					"name": "CustomerAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer address details."
							}
						]
					},
					"children": [
						{
							"id": 1446,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1447,
							"name": "address_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address name of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1448,
							"name": "is_default_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the customer address is default shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1449,
							"name": "is_default_billing",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the customer address is default billing."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1450,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated customer's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1451,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1452,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1453,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1454,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 1 of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1455,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 2 of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1456,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1457,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1458,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1459,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1460,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1461,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1462,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created at of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1463,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The updated at of the customer address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1446,
								1447,
								1448,
								1449,
								1450,
								1451,
								1452,
								1453,
								1454,
								1455,
								1456,
								1457,
								1458,
								1459,
								1460,
								1461,
								1462,
								1463
							]
						}
					]
				},
				{
					"id": 1464,
					"name": "FilterableCustomerAddressProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved customer address."
							}
						]
					},
					"children": [
						{
							"id": 1465,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter the customer address by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1466,
							"name": "address_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1467,
							"name": "is_default_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by whether they're the default for shipping."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1468,
							"name": "is_default_billing",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by whether they're the default for billing."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1469,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by the associated customer's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1470,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by the associated customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1506,
										"name": "FilterableCustomerProps",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1471,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by company."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1472,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by first name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1473,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by last name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1474,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by first address line."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1475,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by second address line."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1476,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by city."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1477,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by country code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1478,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by province."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1479,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by postal code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1480,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by phone number."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1481,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1482,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by created date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1483,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter addresses by updated date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1484,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1464,
											"name": "FilterableCustomerAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1464,
													"name": "FilterableCustomerAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 1485,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1464,
											"name": "FilterableCustomerAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1464,
													"name": "FilterableCustomerAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1465,
								1466,
								1467,
								1468,
								1469,
								1470,
								1471,
								1472,
								1473,
								1474,
								1475,
								1476,
								1477,
								1478,
								1479,
								1480,
								1481,
								1482,
								1483,
								1484,
								1485
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1464,
									"name": "FilterableCustomerAddressProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1486,
					"name": "FilterableCustomerGroupProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved customer group."
							}
						]
					},
					"children": [
						{
							"id": 1487,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter the customer group by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1488,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter customer groups by name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1489,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter customer groups by associated customers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1506,
										"name": "FilterableCustomerProps",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1490,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter customer groups by their "
									},
									{
										"kind": "code",
										"text": "`created_by`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1491,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter customer groups by created date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1492,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter customer groups by updated date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1493,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1486,
											"name": "FilterableCustomerGroupProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1486,
													"name": "FilterableCustomerGroupProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 1494,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1486,
											"name": "FilterableCustomerGroupProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1486,
													"name": "FilterableCustomerGroupProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1487,
								1488,
								1489,
								1490,
								1491,
								1492,
								1493,
								1494
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1486,
									"name": "FilterableCustomerGroupProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1495,
					"name": "FilterableCustomerGroupCustomerProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved customer group's customers."
							}
						]
					},
					"children": [
						{
							"id": 1496,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter the customer group's customer relation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1497,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1498,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer group ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1499,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer IDs or filterable customer attributes."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1506,
										"name": "FilterableCustomerProps",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1500,
							"name": "group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer group IDs or filterable group attributes."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1486,
										"name": "FilterableCustomerGroupProps",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1501,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the group's "
									},
									{
										"kind": "code",
										"text": "`created_by`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1502,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by created date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1503,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by updated date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1504,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1495,
											"name": "FilterableCustomerGroupCustomerProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1495,
													"name": "FilterableCustomerGroupCustomerProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 1505,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1495,
											"name": "FilterableCustomerGroupCustomerProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1495,
													"name": "FilterableCustomerGroupCustomerProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1496,
								1497,
								1498,
								1499,
								1500,
								1501,
								1502,
								1503,
								1504,
								1505
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1495,
									"name": "FilterableCustomerGroupCustomerProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1506,
					"name": "FilterableCustomerProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved customer."
							}
						]
					},
					"children": [
						{
							"id": 1507,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter the customer by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1508,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by email."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1509,
							"name": "groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by associated customer group."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1486,
										"name": "FilterableCustomerGroupProps",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1510,
							"name": "default_billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the associated default billing address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1511,
							"name": "default_shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the associated default shipping address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1512,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by company name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1513,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by first name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1514,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by last name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1515,
							"name": "has_account",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by whether the customer has an account."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1516,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the "
									},
									{
										"kind": "code",
										"text": "`created_by`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1517,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by created date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1518,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by updated date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1519,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1506,
											"name": "FilterableCustomerProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1506,
													"name": "FilterableCustomerProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 1520,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1506,
											"name": "FilterableCustomerProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1506,
													"name": "FilterableCustomerProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1507,
								1508,
								1509,
								1510,
								1511,
								1512,
								1513,
								1514,
								1515,
								1516,
								1517,
								1518,
								1519,
								1520
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1506,
									"name": "FilterableCustomerProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1521,
					"name": "CustomerGroupDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer group details."
							}
						]
					},
					"children": [
						{
							"id": 1522,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1523,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1524,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers of the customer group."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Partial"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 1539,
											"name": "CustomerDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "Partial",
									"package": "typescript"
								}
							}
						},
						{
							"id": 1525,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1526,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Who created the customer group."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1527,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the customer group."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1528,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the customer group."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1529,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the customer group."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1522,
								1523,
								1524,
								1525,
								1526,
								1527,
								1528,
								1529
							]
						}
					]
				},
				{
					"id": 1530,
					"name": "CustomerGroupCustomerDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a group's customer."
							}
						]
					},
					"children": [
						{
							"id": 1531,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the relation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1532,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1533,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1534,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1539,
										"name": "CustomerDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1535,
							"name": "group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The group's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1521,
										"name": "CustomerGroupDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1536,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Who the relation was created by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1537,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the customer group customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1538,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the customer group customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1531,
								1532,
								1533,
								1534,
								1535,
								1536,
								1537,
								1538
							]
						}
					]
				},
				{
					"id": 1539,
					"name": "CustomerDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer details."
							}
						]
					},
					"children": [
						{
							"id": 1540,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1541,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1542,
							"name": "default_billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated default billing address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1543,
							"name": "default_shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated default shipping address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1544,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1545,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1546,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1547,
							"name": "addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The addresses of the customer."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1445,
									"name": "CustomerAddressDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1548,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1549,
							"name": "groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The groups of the customer."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1550,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1551,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the group."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1551
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 1552,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1553,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Who created the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1554,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1555,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1556,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1540,
								1541,
								1542,
								1543,
								1544,
								1545,
								1546,
								1547,
								1548,
								1549,
								1552,
								1553,
								1554,
								1555,
								1556
							]
						}
					]
				},
				{
					"id": 1557,
					"name": "GroupCustomerPair",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a customer and customer group pair."
							}
						]
					},
					"children": [
						{
							"id": 1558,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1559,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1558,
								1559
							]
						}
					]
				},
				{
					"id": 1560,
					"name": "legacy_CustomerDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The legacy customer details."
							}
						]
					},
					"children": [
						{
							"id": 1561,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1562,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1563,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated billing address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1564,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1565,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1566,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1567,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The billing address of the customer."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1568,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping address of the customer."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1569,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1570,
							"name": "has_account",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the customer has account."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1571,
							"name": "groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The groups of the customer."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1572,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1573,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the customer group."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1573
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 1574,
							"name": "orders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The orders of the customer."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1575,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1576,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the order."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1576
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 1577,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1578,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1579,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1580,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the legacy_ customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1561,
								1562,
								1563,
								1564,
								1565,
								1566,
								1567,
								1568,
								1569,
								1570,
								1571,
								1574,
								1577,
								1578,
								1579,
								1580
							]
						}
					]
				},
				{
					"id": 1766,
					"name": "CreateCustomerAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer address to be created."
							}
						]
					},
					"children": [
						{
							"id": 1767,
							"name": "address_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1768,
							"name": "is_default_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the address is default shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1769,
							"name": "is_default_billing",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the address is the default for billing."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1770,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated customer's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1771,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1772,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1773,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1774,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 1."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1775,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 2."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1776,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1777,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1778,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1779,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1780,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1781,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1767,
								1768,
								1769,
								1770,
								1771,
								1772,
								1773,
								1774,
								1775,
								1776,
								1777,
								1778,
								1779,
								1780,
								1781
							]
						}
					]
				},
				{
					"id": 1782,
					"name": "UpdateCustomerAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the customer's address."
							}
						]
					},
					"children": [
						{
							"id": 1783,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1784,
							"name": "address_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1785,
							"name": "is_default_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the address is the default for shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1786,
							"name": "is_default_billing",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the address is the default for billing."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1787,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated customer's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1788,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1789,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1790,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1791,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 1."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1792,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 2."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1793,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1794,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1795,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1796,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1797,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1798,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1783,
								1784,
								1785,
								1786,
								1787,
								1788,
								1789,
								1790,
								1791,
								1792,
								1793,
								1794,
								1795,
								1796,
								1797,
								1798
							]
						}
					]
				},
				{
					"id": 1799,
					"name": "CreateCustomerDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer to be created."
							}
						]
					},
					"children": [
						{
							"id": 1800,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company name of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1801,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1802,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1803,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1804,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1805,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Who created the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1806,
							"name": "addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The addresses of the customer."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 1766,
											"name": "CreateCustomerAddressDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "customer_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 1807,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1800,
								1801,
								1802,
								1803,
								1804,
								1805,
								1806,
								1807
							]
						}
					]
				},
				{
					"id": 1808,
					"name": "UpdateCustomerDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the customer."
							}
						]
					},
					"children": [
						{
							"id": 1809,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1810,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1811,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1812,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1813,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1814,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1815,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1809,
								1810,
								1811,
								1812,
								1813,
								1814,
								1815
							]
						}
					]
				},
				{
					"id": 1816,
					"name": "CustomerUpdatableFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updatable fields of a customer."
							}
						]
					},
					"children": [
						{
							"id": 1817,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1818,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1819,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1820,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1821,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the customer."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1822,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1817,
								1818,
								1819,
								1820,
								1821,
								1822
							]
						}
					]
				},
				{
					"id": 1823,
					"name": "CreateCustomerGroupDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer group to be created."
							}
						]
					},
					"children": [
						{
							"id": 1824,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1825,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1826,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Who the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1824,
								1825,
								1826
							]
						}
					]
				},
				{
					"id": 1827,
					"name": "CustomerGroupUpdatableFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updatable fields of a customer group."
							}
						]
					},
					"children": [
						{
							"id": 1828,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1829,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1828,
								1829
							]
						}
					]
				},
				{
					"id": 1830,
					"name": "UpdateCustomerGroupDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the customer group."
							}
						]
					},
					"children": [
						{
							"id": 1831,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1832,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the customer group."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1833,
							"name": "customer_ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of associated customers."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1834,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1831,
								1832,
								1833,
								1834
							]
						}
					]
				},
				{
					"id": 1581,
					"name": "ICustomerModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the customer module."
							}
						]
					},
					"children": [
						{
							"id": 1582,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1583,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved customer."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a {type name} by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1584,
											"name": "customerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1585,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1539,
														"name": "CustomerDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1586,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1539,
												"name": "CustomerDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1587,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1588,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates customers"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1589,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customers to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1799,
													"name": "CreateCustomerDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 1590,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1539,
													"name": "CustomerDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1591,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates customer"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customer."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1592,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1799,
												"name": "CreateCustomerDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1593,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1539,
												"name": "CustomerDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1594,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1595,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customer."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1596,
											"name": "customerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1597,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1816,
												"name": "CustomerUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1598,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1539,
												"name": "CustomerDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1599,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customers."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1600,
											"name": "customerIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of customer ID's to update."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1601,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customers."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1816,
												"name": "CustomerUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1602,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1539,
													"name": "CustomerDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1603,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customers. Updated customers are selected based on the filters provided in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1604,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which customers should be updated."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1506,
												"name": "FilterableCustomerProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1605,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customers."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1816,
												"name": "CustomerUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1606,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1539,
													"name": "CustomerDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1607,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1608,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customer is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1609,
											"name": "customerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1610,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1611,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes customers by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customers are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1612,
											"name": "customerIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customers to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1613,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1614,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes customers matching the specified filters in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customers are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1615,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which customers should be deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1506,
												"name": "FilterableCustomerProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1616,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1617,
							"name": "createCustomerGroup",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1618,
									"name": "createCustomerGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates customer groups."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customer groups."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1619,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the customer groups to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1823,
													"name": "CreateCustomerGroupDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 1620,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1521,
													"name": "CustomerGroupDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1621,
									"name": "createCustomerGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer group."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customer group."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1622,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the customer group to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1823,
												"name": "CreateCustomerGroupDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1623,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1521,
												"name": "CustomerGroupDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1624,
							"name": "retrieveCustomerGroup",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1625,
									"name": "retrieveCustomerGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer group by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved customer group(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a {type name} by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1626,
											"name": "groupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1627,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer group is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1521,
														"name": "CustomerGroupDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1628,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1521,
												"name": "CustomerGroupDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1629,
							"name": "updateCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1630,
									"name": "updateCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customer group."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer group."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1631,
											"name": "groupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1632,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1827,
												"name": "CustomerGroupUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1633,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1521,
												"name": "CustomerGroupDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1634,
									"name": "updateCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customer groups."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1635,
											"name": "groupIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of customer groups IDs to update."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1636,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customer groups."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1827,
												"name": "CustomerGroupUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1637,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1521,
													"name": "CustomerGroupDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1638,
									"name": "updateCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing customer groups. Updated groups are selected based on the filters provided in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1639,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which groups should be updated."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1486,
												"name": "FilterableCustomerGroupProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1640,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the customer groups."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1827,
												"name": "CustomerGroupUpdatableFields",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1641,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1521,
													"name": "CustomerGroupDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1642,
							"name": "deleteCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1643,
									"name": "deleteCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer group by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customer group is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1644,
											"name": "groupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1645,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1646,
									"name": "deleteCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes customer groups by their ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customer groups are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1647,
											"name": "groupIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customer groups to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1648,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1649,
									"name": "deleteCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes customer groups matching the specified filters in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customer groups are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1650,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which groups should be deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1486,
												"name": "FilterableCustomerGroupProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1651,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1652,
							"name": "addCustomerToGroup",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1653,
									"name": "addCustomerToGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds customers to a group."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The ID of the relation between the customer and the group."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1654,
											"name": "groupCustomerPair",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the customer and the group it should be added to."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1557,
												"name": "GroupCustomerPair",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1655,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1656,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1657,
															"name": "id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The ID of the relation between the customer and the group."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1657
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1658,
									"name": "addCustomerToGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds customers to groups."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of IDs of the relations created between the customers and the groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1659,
											"name": "groupCustomerPairs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of customer-group pairs, where each item in the list indicates the customer and what\ngroup it should be added to."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1557,
													"name": "GroupCustomerPair",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 1660,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1661,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1662,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The ID of the relation between the customer and the group."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1662
																]
															}
														]
													}
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1663,
							"name": "removeCustomerFromGroup",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1664,
									"name": "removeCustomerFromGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a customer from a group."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customer is removed from the group successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1665,
											"name": "groupCustomerPair",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the customer and which group to remove it from."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1557,
												"name": "GroupCustomerPair",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1666,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1667,
									"name": "removeCustomerFromGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes customers from groups."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customers are removed from the groups successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1668,
											"name": "groupCustomerPairs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of customer-group pairs, where each item in the list indicates the customer and what\ngroup it should be removed from."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1557,
													"name": "GroupCustomerPair",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 1669,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1670,
							"name": "addAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1671,
									"name": "addAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds addresses to a customer."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customer addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1672,
											"name": "addresses",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer addresses to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1766,
													"name": "CreateCustomerAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 1673,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1445,
													"name": "CustomerAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1674,
									"name": "addAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an address to a customer"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created customer address."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1675,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1766,
												"name": "CreateCustomerAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1676,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1445,
												"name": "CustomerAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1677,
							"name": "updateAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1678,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing address by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1679,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1680,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1782,
												"name": "UpdateCustomerAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1681,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1445,
												"name": "CustomerAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1682,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing addresses."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1683,
											"name": "addressIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of addresses to update."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1684,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in each customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1782,
												"name": "UpdateCustomerAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1685,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1445,
													"name": "CustomerAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1686,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates addresses matching the specified filters in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated customer addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1687,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which addresses should be updated."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1464,
												"name": "FilterableCustomerAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1688,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in each customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1782,
												"name": "UpdateCustomerAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1689,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1445,
													"name": "CustomerAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1690,
							"name": "deleteAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1691,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an address by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the address is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1692,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1693,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1694,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes addresses by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the addresses are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1695,
											"name": "addressIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of addresses to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1696,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1697,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes addresses matching the specified filters in the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " parameter."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the addresses are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1698,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which addresses should be deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1464,
												"name": "FilterableCustomerAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1699,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1700,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1701,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of addresses based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1702,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1464,
												"name": "FilterableCustomerAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1703,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer address is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1445,
														"name": "CustomerAddressDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1704,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1445,
													"name": "CustomerAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1705,
							"name": "listAndCountAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1706,
									"name": "listAndCountAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of addresses along with the total count of available addresses satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of addresses along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1707,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1464,
												"name": "FilterableCustomerAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1708,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer address is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1445,
														"name": "CustomerAddressDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1709,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1445,
															"name": "CustomerAddressDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1710,
							"name": "listCustomerGroupCustomers",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1711,
									"name": "listCustomerGroupCustomers",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer group's customers based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customer group's customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1712,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer group customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1495,
												"name": "FilterableCustomerGroupCustomerProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1713,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer group customer is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer group customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1530,
														"name": "CustomerGroupCustomerDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1714,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1530,
													"name": "CustomerGroupCustomerDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1715,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1716,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customers based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1717,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1506,
												"name": "FilterableCustomerProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1718,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1539,
														"name": "CustomerDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1719,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1539,
													"name": "CustomerDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1720,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1721,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customers along with the total count of available customers satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customers along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1722,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1506,
												"name": "FilterableCustomerProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1723,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1539,
														"name": "CustomerDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1724,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1539,
															"name": "CustomerDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1725,
							"name": "listCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1726,
									"name": "listCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer groups based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1727,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1486,
												"name": "FilterableCustomerGroupProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1728,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer group is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1521,
														"name": "CustomerGroupDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1729,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1521,
													"name": "CustomerGroupDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1730,
							"name": "listAndCountCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1731,
									"name": "listAndCountCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer groups along with the total count of available customer groups satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customer groups along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1732,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1486,
												"name": "FilterableCustomerGroupProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1733,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the customer group is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1521,
														"name": "CustomerGroupDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1734,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1521,
															"name": "CustomerGroupDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1735,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1736,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes customers by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the customers are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 1737,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1738,
											"name": "customerIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customers to soft delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1739,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1737,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1740,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1737,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1741,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1742,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted customers by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the customer entity's relations,\nand its value is an array of strings, each being the ID of the record associated with the customer through this relation,\nsuch as the IDs of associated addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 1743,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1744,
											"name": "customerIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customers to restore."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1745,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the customers. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the customer's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`addresses`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1743,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1746,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1743,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1747,
							"name": "softDeleteCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1748,
									"name": "softDeleteCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes customer groups by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves whe the customer groups are soft-deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 1749,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1750,
											"name": "groupIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customer groups to soft delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1751,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1749,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1752,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1749,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1753,
							"name": "restoreCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1754,
									"name": "restoreCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted customer groups by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated customer.\nThe object's keys are the ID attribute names of the customer group entity's relations,\nand its value is an array of strings, each being the ID of the record associated with the customer through this relation,\nsuch as the IDs of associated customer."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 1755,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1756,
											"name": "groupIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of customer groups to restore."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1757,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the customer group. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the customer group's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1755,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1758,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1755,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								1582,
								1587,
								1594,
								1607,
								1617,
								1624,
								1629,
								1642,
								1652,
								1663,
								1670,
								1677,
								1690,
								1700,
								1705,
								1710,
								1715,
								1720,
								1725,
								1730,
								1735,
								1741,
								1747,
								1753
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						1445,
						1464,
						1486,
						1495,
						1506,
						1521,
						1530,
						1539,
						1557,
						1560,
						1766,
						1782,
						1799,
						1808,
						1816,
						1823,
						1827,
						1830,
						1581
					]
				}
			]
		},
		{
			"id": 1835,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 2005,
					"name": "EntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 2006,
					"name": "SoftDeletableEntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 2005,
								"name": "EntityDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1864,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 1865,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1867,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1867,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 1866,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1867,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1867,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1865,
								1866
							]
						}
					],
					"typeParameters": [
						{
							"id": 1867,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 28,
							"name": "FilterableApiKeyProps"
						},
						{
							"type": "reference",
							"target": 188,
							"name": "FilterableAuthUserProps"
						},
						{
							"type": "reference",
							"target": 419,
							"name": "FilterableCartProps"
						},
						{
							"type": "reference",
							"target": 428,
							"name": "FilterableAddressProps"
						},
						{
							"type": "reference",
							"target": 432,
							"name": "FilterableLineItemProps"
						},
						{
							"type": "reference",
							"target": 440,
							"name": "FilterableLineItemAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 448,
							"name": "FilterableShippingMethodProps"
						},
						{
							"type": "reference",
							"target": 455,
							"name": "FilterableShippingMethodAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 463,
							"name": "FilterableLineItemTaxLineProps"
						},
						{
							"type": "reference",
							"target": 473,
							"name": "FilterableShippingMethodTaxLineProps"
						},
						{
							"type": "reference",
							"target": 1464,
							"name": "FilterableCustomerAddressProps"
						},
						{
							"type": "reference",
							"target": 1486,
							"name": "FilterableCustomerGroupProps"
						},
						{
							"type": "reference",
							"target": 1495,
							"name": "FilterableCustomerGroupCustomerProps"
						},
						{
							"type": "reference",
							"target": 1506,
							"name": "FilterableCustomerProps"
						},
						{
							"type": "reference",
							"target": 2155,
							"name": "FilterableFulfillmentSetProps"
						},
						{
							"type": "reference",
							"target": 2171,
							"name": "FilterableShippingProfileProps"
						},
						{
							"type": "reference",
							"target": 2190,
							"name": "FilterableShippingOptionRuleProps"
						},
						{
							"type": "reference",
							"target": 2217,
							"name": "FilterableShippingOptionProps"
						},
						{
							"type": "reference",
							"target": 2256,
							"name": "FilterableShippingOptionTypeProps"
						},
						{
							"type": "reference",
							"target": 2273,
							"name": "FilterableServiceZoneProps"
						},
						{
							"type": "reference",
							"target": 2293,
							"name": "FilterableGeoZoneProps"
						},
						{
							"type": "reference",
							"target": 2328,
							"name": "FilterableFulfillmentProps"
						},
						{
							"type": "reference",
							"target": 3534,
							"name": "FilterableOrderProps"
						},
						{
							"type": "reference",
							"target": 3543,
							"name": "FilterableOrderAddressProps"
						},
						{
							"type": "reference",
							"target": 3547,
							"name": "FilterableOrderLineItemProps"
						},
						{
							"type": "reference",
							"target": 3555,
							"name": "FilterableOrderLineItemAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 3563,
							"name": "FilterableOrderShippingMethodProps"
						},
						{
							"type": "reference",
							"target": 3570,
							"name": "FilterableOrderShippingMethodAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 3578,
							"name": "FilterableOrderLineItemTaxLineProps"
						},
						{
							"type": "reference",
							"target": 3588,
							"name": "FilterableOrderShippingMethodTaxLineProps"
						},
						{
							"type": "reference",
							"target": 3598,
							"name": "FilterableOrderChangeProps"
						},
						{
							"type": "reference",
							"target": 3608,
							"name": "FilterableOrderChangeActionProps"
						},
						{
							"type": "reference",
							"target": 3615,
							"name": "FilterableOrderTransactionProps"
						},
						{
							"type": "reference",
							"target": 4309,
							"name": "FilterableApplicationMethodProps"
						},
						{
							"type": "reference",
							"target": 4325,
							"name": "FilterableCampaignProps"
						},
						{
							"type": "reference",
							"target": 4336,
							"name": "FilterableCampaignBudgetProps"
						},
						{
							"type": "reference",
							"target": 4408,
							"name": "FilterablePromotionProps"
						},
						{
							"type": "reference",
							"target": 4436,
							"name": "FilterablePromotionRuleProps"
						},
						{
							"type": "reference",
							"target": 4449,
							"name": "FilterablePromotionRuleValueProps"
						},
						{
							"type": "reference",
							"target": 4672,
							"name": "FilterableSalesChannelProps"
						},
						{
							"type": "reference",
							"target": 4819,
							"name": "FilterableTaxRateProps"
						},
						{
							"type": "reference",
							"target": 4840,
							"name": "FilterableTaxRegionProps"
						},
						{
							"type": "reference",
							"target": 4861,
							"name": "FilterableTaxRateRuleProps"
						},
						{
							"type": "reference",
							"target": 5130,
							"name": "FilterableUserProps"
						},
						{
							"type": "reference",
							"target": 5147,
							"name": "FilterableInviteProps"
						},
						{
							"type": "reference",
							"target": 5393,
							"name": "FilterableStoreProps"
						},
						{
							"type": "reference",
							"target": 5494,
							"name": "FilterableCurrencyProps"
						},
						{
							"type": "reference",
							"target": 5673,
							"name": "FilterablePaymentCollectionProps"
						},
						{
							"type": "reference",
							"target": 5680,
							"name": "FilterablePaymentSessionProps"
						},
						{
							"type": "reference",
							"target": 5692,
							"name": "FilterableCaptureProps"
						},
						{
							"type": "reference",
							"target": 5702,
							"name": "FilterableRefundProps"
						},
						{
							"type": "reference",
							"target": 5733,
							"name": "FilterablePaymentProps"
						},
						{
							"type": "reference",
							"target": 5772,
							"name": "FilterablePaymentProviderProps"
						},
						{
							"type": "reference",
							"target": 6080,
							"name": "FilterableMoneyAmountProps"
						},
						{
							"type": "reference",
							"target": 6140,
							"name": "FilterablePriceListProps"
						},
						{
							"type": "reference",
							"target": 6148,
							"name": "FilterablePriceListRuleProps"
						},
						{
							"type": "reference",
							"target": 6155,
							"name": "FilterablePriceListRuleValueProps"
						},
						{
							"type": "reference",
							"target": 6229,
							"name": "FilterablePriceRuleProps"
						},
						{
							"type": "reference",
							"target": 6305,
							"name": "FilterablePriceSetProps"
						},
						{
							"type": "reference",
							"target": 6332,
							"name": "FilterablePriceSetMoneyAmountProps"
						},
						{
							"type": "reference",
							"target": 6350,
							"name": "FilterablePriceSetRuleTypeProps"
						},
						{
							"type": "reference",
							"target": 6373,
							"name": "FilterableRuleTypeProps"
						},
						{
							"type": "reference",
							"target": 6397,
							"name": "FilterableRegionProps"
						},
						{
							"type": "reference",
							"target": 6406,
							"name": "FilterableRegionCountryProps"
						}
					]
				},
				{
					"id": 1868,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 1869,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1870,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 6566,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1876,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6566,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1876,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 1871,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1872,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1873,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1874,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1875,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 6568,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 6568,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1869,
								1870,
								1871,
								1872,
								1873,
								1874,
								1875
							]
						}
					],
					"typeParameters": [
						{
							"id": 1876,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 1877,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 1878,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 1879,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 1887,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 1842,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 1887,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 1880,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignature": {
																"id": 1881,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"parameters": [
																	{
																		"id": 1882,
																		"name": "x",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																],
																"type": {
																	"type": "inferred",
																	"name": "V"
																}
															}
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Partial"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": -1,
																				"name": "V",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "Partial",
																		"package": "typescript"
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "bigint"
																		},
																		{
																			"type": "intrinsic",
																			"name": "boolean"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"type": "reference",
																			"target": 1842,
																			"typeArguments": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"name": "OperatorMap",
																			"package": "@medusajs/types"
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Partial"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": -1,
																					"name": "V",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "Partial",
																			"package": "typescript"
																		}
																	},
																	"extendsType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "U extends { [x: number]: infer V; } ? V extends object ? { [Key in keyof Partial<V>]?: (Partial<V>[Key] extends string | number | bigint | boolean | symbol | Date ? Partial<...>[Key] | OperatorMap<...> : Partial<...>[Key] extends infer U ? U extends { ...; } ? V extends object ? ... : never : never : never) | undefi..."
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 1864,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 1887,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 1842,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 1887,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 1883,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignature": {
																		"id": 1884,
																		"name": "__index",
																		"variant": "signature",
																		"kind": 8192,
																		"flags": {},
																		"parameters": [
																			{
																				"id": 1885,
																				"name": "x",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		],
																		"type": {
																			"type": "inferred",
																			"name": "V"
																		}
																	}
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Partial"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": -1,
																						"name": "V",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Partial",
																				"package": "typescript"
																			}
																		},
																		"extendsType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "bigint"
																				},
																				{
																					"type": "intrinsic",
																					"name": "boolean"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		},
																		"trueType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"type": "reference",
																					"target": 1842,
																					"typeArguments": [
																						{
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "intrinsic",
																								"name": "any"
																							},
																							"objectType": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"name": "OperatorMap",
																					"package": "@medusajs/types"
																				}
																			]
																		},
																		"falseType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																						"qualifiedName": "Key"
																					},
																					"name": "Key",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"objectType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Partial"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": -1,
																							"name": "V",
																							"refersToTypeParameter": true
																						}
																					],
																					"name": "Partial",
																					"package": "typescript"
																				}
																			},
																			"extendsType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"trueType": {
																				"type": "unknown",
																				"name": "U extends { [x: number]: infer V; } ? V extends object ? { [Key in keyof Partial<V>]?: (Partial<V>[Key] extends string | number | bigint | boolean | symbol | Date ? Partial<...>[Key] | OperatorMap<...> : Partial<...>[Key] extends infer U ? U extends { ...; } ? V extends object ? ... : never : never : never) | undefi..."
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 1886,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1868,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1887,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1879,
								1886
							]
						}
					],
					"typeParameters": [
						{
							"id": 1887,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1888,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 1932,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1933,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1934,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 1935,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1936,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 1937,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 1938,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 1934,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 1939,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1940,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1941,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1942,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 1934,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 1943,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1941,
																1942,
																1943
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6575,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6574,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 1944,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1945,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1946,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1946,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6587,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6586,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 1947,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1948,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1949,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1949,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6590,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6589,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 1950,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1951,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1952,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1953,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1954,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1952,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6593,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6592,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 1889,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1890,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1891,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1878,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1955,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1892,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1955,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1893,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1894,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1895,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1878,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1955,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1896,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1955,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1897,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1898,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1899,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 1900,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1955,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1901,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1902,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1903,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1904,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1905,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 1906,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1905,
																	1906
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 1907,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1955,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1908,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1909,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1910,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 1955,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 1842,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 1955,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1911,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignature": {
																				"id": 1912,
																				"name": "__index",
																				"variant": "signature",
																				"kind": 8192,
																				"flags": {},
																				"parameters": [
																					{
																						"id": 1913,
																						"name": "x",
																						"variant": "param",
																						"kind": 32768,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					}
																				],
																				"type": {
																					"type": "inferred",
																					"name": "V"
																				}
																			}
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																							"qualifiedName": "Key"
																						},
																						"name": "Key",
																						"package": "@medusajs/types",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Partial"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": -1,
																								"name": "V",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "Partial",
																						"package": "typescript"
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						},
																						{
																							"type": "intrinsic",
																							"name": "bigint"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						},
																						{
																							"type": "intrinsic",
																							"name": "symbol"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "intrinsic",
																								"name": "any"
																							},
																							"objectType": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						},
																						{
																							"type": "reference",
																							"target": 1842,
																							"typeArguments": [
																								{
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "intrinsic",
																										"name": "any"
																									},
																									"objectType": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								}
																							],
																							"name": "OperatorMap",
																							"package": "@medusajs/types"
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																								"qualifiedName": "Key"
																							},
																							"name": "Key",
																							"package": "@medusajs/types",
																							"refersToTypeParameter": true
																						},
																						"objectType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Partial"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": -1,
																									"name": "V",
																									"refersToTypeParameter": true
																								}
																							],
																							"name": "Partial",
																							"package": "typescript"
																						}
																					},
																					"extendsType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																							"qualifiedName": "U"
																						},
																						"name": "U",
																						"package": "@medusajs/types",
																						"refersToTypeParameter": true
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "U extends { [x: number]: infer V; } ? V extends object ? { [Key in keyof Partial<V>]?: (Partial<V>[Key] extends string | number | bigint | boolean | symbol | Date ? Partial<...>[Key] | OperatorMap<...> : Partial<...>[Key] extends infer U ? U extends { ...; } ? V extends object ? ... : never : never : never) | undefi..."
																					},
																					"falseType": {
																						"type": "intrinsic",
																						"name": "never"
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 1864,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 1955,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 1842,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 1955,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 1914,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignature": {
																						"id": 1915,
																						"name": "__index",
																						"variant": "signature",
																						"kind": 8192,
																						"flags": {},
																						"parameters": [
																							{
																								"id": 1916,
																								"name": "x",
																								"variant": "param",
																								"kind": 32768,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"type": {
																							"type": "inferred",
																							"name": "V"
																						}
																					}
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																									"qualifiedName": "Key"
																								},
																								"name": "Key",
																								"package": "@medusajs/types",
																								"refersToTypeParameter": true
																							},
																							"objectType": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Partial"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": -1,
																										"name": "V",
																										"refersToTypeParameter": true
																									}
																								],
																								"name": "Partial",
																								"package": "typescript"
																							}
																						},
																						"extendsType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								},
																								{
																									"type": "intrinsic",
																									"name": "bigint"
																								},
																								{
																									"type": "intrinsic",
																									"name": "boolean"
																								},
																								{
																									"type": "intrinsic",
																									"name": "symbol"
																								},
																								{
																									"type": "reference",
																									"target": {
																										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																										"qualifiedName": "Date"
																									},
																									"name": "Date",
																									"package": "typescript"
																								}
																							]
																						},
																						"trueType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "intrinsic",
																										"name": "any"
																									},
																									"objectType": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								},
																								{
																									"type": "reference",
																									"target": 1842,
																									"typeArguments": [
																										{
																											"type": "indexedAccess",
																											"indexType": {
																												"type": "intrinsic",
																												"name": "any"
																											},
																											"objectType": {
																												"type": "intrinsic",
																												"name": "any"
																											}
																										}
																									],
																									"name": "OperatorMap",
																									"package": "@medusajs/types"
																								}
																							]
																						},
																						"falseType": {
																							"type": "conditional",
																							"checkType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"target": {
																										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																										"qualifiedName": "Key"
																									},
																									"name": "Key",
																									"package": "@medusajs/types",
																									"refersToTypeParameter": true
																								},
																								"objectType": {
																									"type": "reference",
																									"target": {
																										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																										"qualifiedName": "Partial"
																									},
																									"typeArguments": [
																										{
																											"type": "reference",
																											"target": -1,
																											"name": "V",
																											"refersToTypeParameter": true
																										}
																									],
																									"name": "Partial",
																									"package": "typescript"
																								}
																							},
																							"extendsType": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																									"qualifiedName": "U"
																								},
																								"name": "U",
																								"package": "@medusajs/types",
																								"refersToTypeParameter": true
																							},
																							"trueType": {
																								"type": "unknown",
																								"name": "U extends { [x: number]: infer V; } ? V extends object ? { [Key in keyof Partial<V>]?: (Partial<V>[Key] extends string | number | bigint | boolean | symbol | Date ? Partial<...>[Key] | OperatorMap<...> : Partial<...>[Key] extends infer U ? U extends { ...; } ? V extends object ? ... : never : never : never) | undefi..."
																							},
																							"falseType": {
																								"type": "intrinsic",
																								"name": "never"
																							}
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 1917,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1918,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1919,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1920,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1921,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 1922,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1955,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1923,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1924,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1925,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1926,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 1927,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1955,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1928,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1929,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1930,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 1931,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1955,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								1932,
								1944,
								1947,
								1950,
								1889,
								1893,
								1897,
								1901,
								1908,
								1918,
								1923,
								1928
							]
						}
					],
					"typeParameters": [
						{
							"id": 1955,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6573,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1955,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1956,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 1975,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1976,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1977,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 1978,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1979,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 1980,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 1981,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 1934,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 1982,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1983,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1984,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1985,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 1934,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 1986,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1984,
																1985,
																1986
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6575,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6574,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 1987,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1988,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1989,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1946,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6587,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6586,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 1990,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1991,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1992,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1949,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6590,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6589,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 1993,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1994,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 1995,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1996,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1997,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1952,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 6593,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 6592,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 1957,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1958,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1959,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1878,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1998,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1960,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1337,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1961,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1998,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1962,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1963,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1964,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1878,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1998,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1965,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1337,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1966,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1998,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1967,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1968,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1969,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1970,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1998,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "TreeRepositoryService.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1971,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1972,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1973,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1974,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								1975,
								1987,
								1990,
								1993,
								1957,
								1962,
								1967,
								1971
							]
						}
					],
					"typeParameters": [
						{
							"id": 1998,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6573,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1998,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 1999,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 2000,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2001,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2000
							]
						}
					],
					"typeParameters": [
						{
							"id": 2001,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2002,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 2003,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2004,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2003
							]
						}
					],
					"typeParameters": [
						{
							"id": 2004,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1842,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 1863,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1843,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1844,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6562,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1863,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 1845,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6562,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1863,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 1846,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 6564,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1863,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6564,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1863,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 1847,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6564,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1848,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6564,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1863,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 1849,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6564,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1863,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 1850,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6562,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1851,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6564,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1852,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6564,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1853,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6564,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1854,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6564,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1863,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 1855,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1856,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1857,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1858,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1859,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1860,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1861,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1862,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1844,
										1845,
										1846,
										1847,
										1848,
										1849,
										1850,
										1851,
										1852,
										1853,
										1854,
										1855,
										1856,
										1857,
										1858,
										1859,
										1860,
										1861,
										1862
									]
								}
							]
						}
					}
				},
				{
					"id": 1836,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 1840,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1841,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 1841,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 1840,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 1840,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 1840,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 1842,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 1840,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 1840,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 1837,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 1838,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 1839,
															"name": "x",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "inferred",
														"name": "V"
													}
												}
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 1836,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 1841,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 6561,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						1864,
						1868,
						1878,
						1888,
						1956,
						1999,
						2002
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2005,
						2006,
						1842,
						1836
					]
				}
			]
		},
		{
			"id": 6573,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 6574,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6575,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6576,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 6577,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6578,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 6579,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 6580,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1934,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 6581,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6582,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6583,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6584,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1934,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 6585,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6583,
														6584,
														6585
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6586,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6587,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6588,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1946,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 6589,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6590,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6591,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1949,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 6592,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6593,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6594,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 6595,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 6596,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1952,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6574,
						6586,
						6589,
						6592
					]
				}
			],
			"typeParameters": [
				{
					"id": 6597,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1888,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 1956,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 6568,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6572,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6569,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignature": {
						"id": 6570,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 6571,
								"name": "k",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"target": 6572,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			}
		},
		{
			"id": 6562,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6563,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6563,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6563,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 6617,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 1836,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6563,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 6621,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6563,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 6564,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6565,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6565,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6565,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 6565,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 6617,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6618,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6619,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 6620,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										6619
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6635,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6636,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6636,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 6636,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 6636,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 6625,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6634,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6634,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 6626,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 6627,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									6627
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 6635,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6634,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 6628,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6629,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6629
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6635,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6634,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 6630,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6631,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6631
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 6635,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6634,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 6632,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6633,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6633
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 6635,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 6623,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6624,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6624,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 6564,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6624,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6625,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6624,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 6621,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6622,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6623,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6622,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6623,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6622,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6623,
							"typeArguments": [
								{
									"type": "reference",
									"target": 6622,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 6561,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 6566,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6567,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 6567,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 6566,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 6567,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 6567,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 6567,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 2007,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 2008,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2013,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2009,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2010,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2011,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2013,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2012,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2014,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2015,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2016,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2016
									]
								}
							]
						}
					}
				},
				{
					"id": 2017,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2018,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2019,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2020,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2008,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2019,
										2020
									]
								}
							]
						}
					}
				},
				{
					"id": 2021,
					"name": "EventHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2026,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2022,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2023,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2024,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2026,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2025,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2027,
					"name": "EmitData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2032,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2028,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2029,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2030,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2032,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2031,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2029,
										2030,
										2031
									]
								}
							]
						}
					}
				},
				{
					"id": 2033,
					"name": "MessageBody",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2042,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2034,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2035,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2036,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2037,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2038,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2039,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2040,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2037,
														2038,
														2039,
														2040
													]
												}
											]
										}
									}
								},
								{
									"id": 2041,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2042,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2035,
										2041
									]
								}
							]
						}
					}
				},
				{
					"id": 2043,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2048,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2044,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2045,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2046,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2033,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2048,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "MessageBody",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2047,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2045,
										2046,
										2047
									]
								}
							]
						}
					}
				},
				{
					"id": 2049,
					"name": "MessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 2059,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2050,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2051,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2052,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2053,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2054,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2055,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2056,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2057,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2054,
														2055,
														2056,
														2057
													]
												}
											]
										}
									}
								},
								{
									"id": 2058,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2059,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2059,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2051,
										2052,
										2058
									]
								}
							]
						}
					}
				},
				{
					"id": 2086,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2087,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2088,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2089,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2090,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2091,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2089,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2092,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2093,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2094,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2095,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2027,
													"typeArguments": [
														{
															"type": "reference",
															"target": 2094,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2096,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2097,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2098,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2043,
													"typeArguments": [
														{
															"type": "reference",
															"target": 2097,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2099,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2100,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2101,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2102,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2008,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2103,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2014,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 2104,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2105,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2106,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2107,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2008,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2108,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2014,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2087,
								2099,
								2104
							]
						}
					]
				},
				{
					"id": 2060,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2061,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2062,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2063,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2064,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2008,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2065,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2014,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 2066,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2067,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2068,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2069,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2008,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2070,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2014,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 2071,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2072,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2073,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2074,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2075,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2073,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2076,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2077,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2078,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2079,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2027,
													"typeArguments": [
														{
															"type": "reference",
															"target": 2078,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2080,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2081,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2082,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2043,
													"typeArguments": [
														{
															"type": "reference",
															"target": 2081,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2083,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2084,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2085,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 5117,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 5116,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2061,
								2066,
								2071,
								2083
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 5115,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						2086,
						2060
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2008,
						2014,
						2017,
						2021,
						2027,
						2033,
						2043,
						2049
					]
				}
			]
		},
		{
			"id": 2109,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 2110,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2111,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2113,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2114,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 2115,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2116,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2117,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2118,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2111,
								2115
							]
						}
					]
				},
				{
					"id": 2118,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 2119,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 2120,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 2121,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											2120,
											2121
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 2122,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2123,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2124,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2125,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2126,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2127,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2124,
										2125,
										2126,
										2127
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						2110
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2118,
						2122
					]
				}
			]
		},
		{
			"id": 5521,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 5522,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5523,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5522,
						5523
					]
				}
			]
		},
		{
			"id": 5524,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 5525,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 5526,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 5527,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5528,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5525,
						5526,
						5527,
						5528
					]
				}
			]
		},
		{
			"id": 5529,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 5530,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5531,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5530,
						5531
					]
				}
			]
		},
		{
			"id": 5532,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 5533,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5533
					]
				}
			]
		},
		{
			"id": 5534,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 5535,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5536,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5537,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5535,
						5536,
						5537
					]
				}
			]
		},
		{
			"id": 2128,
			"name": "FulfillmentTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 2129,
					"name": "FulfillmentAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2130,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2131,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2132,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2133,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2134,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2135,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2136,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2137,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2138,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2139,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2140,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2141,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2142,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2143,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2144,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2145,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2130,
								2131,
								2132,
								2133,
								2134,
								2135,
								2136,
								2137,
								2138,
								2139,
								2140,
								2141,
								2142,
								2143,
								2144,
								2145
							]
						}
					]
				},
				{
					"id": 2341,
					"name": "FulfillmentItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2342,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2343,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2344,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2345,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2346,
							"name": "barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2347,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2348,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2349,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2350,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2309,
								"name": "FulfillmentDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2351,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2352,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2353,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2342,
								2343,
								2344,
								2345,
								2346,
								2347,
								2348,
								2349,
								2350,
								2351,
								2352,
								2353
							]
						}
					]
				},
				{
					"id": 2354,
					"name": "FulfillmentLabelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2355,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2356,
							"name": "tracking_number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2357,
							"name": "tracking_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2358,
							"name": "label_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2359,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2360,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2309,
								"name": "FulfillmentDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2361,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2362,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2363,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2355,
								2356,
								2357,
								2358,
								2359,
								2360,
								2361,
								2362,
								2363
							]
						}
					]
				},
				{
					"id": 2301,
					"name": "FulfillmentProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2302,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2303,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2304,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2305,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2198,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2306,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2307,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2308,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2302,
								2303,
								2304,
								2305,
								2306,
								2307,
								2308
							]
						}
					]
				},
				{
					"id": 2146,
					"name": "FulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2147,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2148,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2149,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2150,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2151,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2263,
									"name": "ServiceZoneDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2152,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2153,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2154,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2147,
								2148,
								2149,
								2150,
								2151,
								2152,
								2153,
								2154
							]
						}
					]
				},
				{
					"id": 2155,
					"name": "FilterableFulfillmentSetProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2160,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2155,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2155,
													"name": "FilterableFulfillmentSetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2161,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2155,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2155,
													"name": "FilterableFulfillmentSetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2156,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2157,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2158,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2159,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2273,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2160,
								2161,
								2156,
								2157,
								2158,
								2159
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2155,
									"name": "FilterableFulfillmentSetProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2309,
					"name": "FulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2310,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2311,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2312,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2313,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2314,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2315,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2316,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2317,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2318,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2319,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2320,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 2198,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2321,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2301,
								"name": "FulfillmentProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2322,
							"name": "delivery_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2129,
								"name": "FulfillmentAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2323,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2341,
									"name": "FulfillmentItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2324,
							"name": "labels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2354,
									"name": "FulfillmentLabelDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2325,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2326,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2327,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2310,
								2311,
								2312,
								2313,
								2314,
								2315,
								2316,
								2317,
								2318,
								2319,
								2320,
								2321,
								2322,
								2323,
								2324,
								2325,
								2326,
								2327
							]
						}
					]
				},
				{
					"id": 2328,
					"name": "FilterableFulfillmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2339,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2328,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2328,
													"name": "FilterableFulfillmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2340,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2328,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2328,
													"name": "FilterableFulfillmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2329,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2330,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2331,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2332,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2333,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2334,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2335,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2336,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2337,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2338,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2339,
								2340,
								2329,
								2330,
								2331,
								2332,
								2333,
								2334,
								2335,
								2336,
								2337,
								2338
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2328,
									"name": "FilterableFulfillmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2281,
					"name": "GeoZoneType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "country"
							},
							{
								"type": "literal",
								"value": "province"
							},
							{
								"type": "literal",
								"value": "city"
							},
							{
								"type": "literal",
								"value": "zip"
							}
						]
					}
				},
				{
					"id": 2282,
					"name": "GeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2283,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2284,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2281,
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2285,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2286,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2287,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2288,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2289,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2290,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2291,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2292,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2283,
								2284,
								2285,
								2286,
								2287,
								2288,
								2289,
								2290,
								2291,
								2292
							]
						}
					]
				},
				{
					"id": 2293,
					"name": "FilterableGeoZoneProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2299,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2293,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2293,
													"name": "FilterableGeoZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2300,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2293,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2293,
													"name": "FilterableGeoZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2294,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2295,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2281,
										"name": "GeoZoneType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2281,
											"name": "GeoZoneType",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 2296,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2297,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2298,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2299,
								2300,
								2294,
								2295,
								2296,
								2297,
								2298
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2293,
									"name": "FilterableGeoZoneProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2263,
					"name": "ServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2264,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2265,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2266,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2267,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2146,
									"name": "FulfillmentSetDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2268,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2282,
									"name": "GeoZoneDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2269,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2198,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2270,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2271,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2272,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2264,
								2265,
								2266,
								2267,
								2268,
								2269,
								2270,
								2271,
								2272
							]
						}
					]
				},
				{
					"id": 2273,
					"name": "FilterableServiceZoneProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2279,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2273,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2273,
													"name": "FilterableServiceZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2280,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2273,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2273,
													"name": "FilterableServiceZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2274,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2275,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2276,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2293,
								"name": "FilterableGeoZoneProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2277,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2155,
								"name": "FilterableFulfillmentSetProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2278,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2279,
								2280,
								2274,
								2275,
								2276,
								2277,
								2278
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2273,
									"name": "FilterableServiceZoneProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2178,
					"name": "ShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2179,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2180,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2181,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2182,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2183,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2184,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2184
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2185,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2186,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2198,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2187,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2188,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2189,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2179,
								2180,
								2181,
								2182,
								2185,
								2186,
								2187,
								2188,
								2189
							]
						}
					]
				},
				{
					"id": 2190,
					"name": "FilterableShippingOptionRuleProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2195,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2190,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2190,
													"name": "FilterableShippingOptionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2196,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2190,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2190,
													"name": "FilterableShippingOptionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2191,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2192,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2193,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2194,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2195,
								2196,
								2191,
								2192,
								2193,
								2194
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2190,
									"name": "FilterableShippingOptionRuleProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2246,
					"name": "ShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2247,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2248,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2249,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2250,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2251,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2252,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2198,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2253,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2254,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2255,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2247,
								2248,
								2249,
								2250,
								2251,
								2252,
								2253,
								2254,
								2255
							]
						}
					]
				},
				{
					"id": 2256,
					"name": "FilterableShippingOptionTypeProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2261,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2256,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2256,
													"name": "FilterableShippingOptionTypeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2262,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2256,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2256,
													"name": "FilterableShippingOptionTypeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2257,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2258,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2259,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2260,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2261,
								2262,
								2257,
								2258,
								2259,
								2260
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2256,
									"name": "FilterableShippingOptionTypeProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2197,
					"name": "ShippingOptionPriceType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "calculated"
							},
							{
								"type": "literal",
								"value": "flat"
							}
						]
					}
				},
				{
					"id": 2198,
					"name": "ShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2199,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2200,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2201,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2197,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2202,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2203,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2204,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2205,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2206,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2207,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2208,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2263,
								"name": "ServiceZoneDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2209,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2162,
								"name": "ShippingProfileDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2210,
							"name": "fulfillment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2301,
								"name": "FulfillmentProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2211,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2246,
								"name": "ShippingOptionTypeDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2212,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2178,
									"name": "ShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2213,
							"name": "fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2309,
									"name": "FulfillmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2214,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2215,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2216,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2199,
								2200,
								2201,
								2202,
								2203,
								2204,
								2205,
								2206,
								2207,
								2208,
								2209,
								2210,
								2211,
								2212,
								2213,
								2214,
								2215,
								2216
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 1234,
							"name": "PricedShippingOptionDTO"
						}
					]
				},
				{
					"id": 2217,
					"name": "FilterableShippingOptionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2225,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2217,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2217,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2226,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2217,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2217,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2218,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2219,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2220,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2221,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2197,
										"name": "ShippingOptionPriceType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2197,
											"name": "ShippingOptionPriceType",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2222,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2273,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2223,
							"name": "shipping_option_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2256,
								"name": "FilterableShippingOptionTypeProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2224,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2190,
								"name": "FilterableShippingOptionRuleProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2225,
								2226,
								2218,
								2219,
								2220,
								2221,
								2222,
								2223,
								2224
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2217,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 2227,
							"name": "FilterableShippingOptionForContextProps"
						}
					]
				},
				{
					"id": 2227,
					"name": "FilterableShippingOptionForContextProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2244,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2217,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2217,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2225,
								"name": "FilterableShippingOptionProps.$and"
							}
						},
						{
							"id": 2245,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2217,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2217,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2226,
								"name": "FilterableShippingOptionProps.$or"
							}
						},
						{
							"id": 2237,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2218,
								"name": "FilterableShippingOptionProps.id"
							}
						},
						{
							"id": 2238,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2219,
								"name": "FilterableShippingOptionProps.name"
							}
						},
						{
							"id": 2239,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2220,
								"name": "FilterableShippingOptionProps.shipping_profile_id"
							}
						},
						{
							"id": 2240,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2197,
										"name": "ShippingOptionPriceType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2197,
											"name": "ShippingOptionPriceType",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2221,
								"name": "FilterableShippingOptionProps.price_type"
							}
						},
						{
							"id": 2241,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2273,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2222,
								"name": "FilterableShippingOptionProps.service_zone"
							}
						},
						{
							"id": 2242,
							"name": "shipping_option_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2256,
								"name": "FilterableShippingOptionTypeProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2223,
								"name": "FilterableShippingOptionProps.shipping_option_type"
							}
						},
						{
							"id": 2243,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2190,
								"name": "FilterableShippingOptionRuleProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2224,
								"name": "FilterableShippingOptionProps.rules"
							}
						},
						{
							"id": 2228,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2229,
							"name": "fulfillment_set_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2230,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address is a shortcut to filter through geo_zones\nand build opinionated validation and filtering around the geo_zones.\nFor custom filtering you can go through the service_zone.geo_zones directly."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2231,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2232,
											"name": "country_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2233,
											"name": "province_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2234,
											"name": "city",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2235,
											"name": "postal_expression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2232,
												2233,
												2234,
												2235
											]
										}
									]
								}
							}
						},
						{
							"id": 2236,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2244,
								2245,
								2237,
								2238,
								2239,
								2240,
								2241,
								2242,
								2243,
								2228,
								2229,
								2230,
								2236
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2217,
							"name": "FilterableShippingOptionProps",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2162,
					"name": "ShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2163,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2164,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2165,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2166,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2167,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2198,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 2168,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2169,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2170,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2163,
								2164,
								2165,
								2166,
								2167,
								2168,
								2169,
								2170
							]
						}
					]
				},
				{
					"id": 2171,
					"name": "FilterableShippingProfileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 2176,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2171,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2171,
													"name": "FilterableShippingProfileProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 2177,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 2171,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2171,
													"name": "FilterableShippingProfileProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 2172,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2173,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2174,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 2175,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2217,
								"name": "FilterableShippingOptionProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2176,
								2177,
								2172,
								2173,
								2174,
								2175
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2171,
									"name": "FilterableShippingProfileProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2525,
					"name": "CreateFulfillmentAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2526,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2527,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2528,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2529,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2530,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2531,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2532,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2533,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2534,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2535,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2536,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2537,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2526,
								2527,
								2528,
								2529,
								2530,
								2531,
								2532,
								2533,
								2534,
								2535,
								2536,
								2537
							]
						}
					]
				},
				{
					"id": 2543,
					"name": "CreateFulfillmentItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2544,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2545,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2546,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2547,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2548,
							"name": "barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2549,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2550,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2544,
								2545,
								2546,
								2547,
								2548,
								2549,
								2550
							]
						}
					]
				},
				{
					"id": 2538,
					"name": "CreateFulfillmentLabelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2539,
							"name": "tracking_number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2540,
							"name": "tracking_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2541,
							"name": "label_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2542,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2539,
								2540,
								2541,
								2542
							]
						}
					]
				},
				{
					"id": 2492,
					"name": "CreateFulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2493,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2494,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2495,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 2459,
											"name": "CreateServiceZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_set_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2493,
								2494,
								2495
							]
						}
					]
				},
				{
					"id": 2496,
					"name": "UpdateFulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2497,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2498,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2499,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2500,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2459,
													"name": "CreateServiceZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "fulfillment_set_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 2501,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 2502,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															2502
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2497,
								2498,
								2499,
								2500
							]
						}
					]
				},
				{
					"id": 2503,
					"name": "CreateFulfillmentOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 2504,
					"name": "CreateFulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2505,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2506,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2507,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2508,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2509,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2510,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2511,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2512,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2513,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2514,
							"name": "delivery_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2525,
										"name": "CreateFulfillmentAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "fulfillment_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 2515,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 2543,
											"name": "CreateFulfillmentItemDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 2516,
							"name": "labels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 2538,
											"name": "CreateFulfillmentLabelDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 2517,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2503,
								"name": "CreateFulfillmentOrderDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2505,
								2506,
								2507,
								2508,
								2509,
								2510,
								2511,
								2512,
								2513,
								2514,
								2515,
								2516,
								2517
							]
						}
					]
				},
				{
					"id": 2518,
					"name": "UpdateFulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2519,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2520,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2521,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2522,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2523,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2524,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2519,
								2520,
								2521,
								2522,
								2523,
								2524
							]
						}
					]
				},
				{
					"id": 2395,
					"name": "CreateCountryGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2397,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6600,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2398,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6601,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2399,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6602,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2396,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "country"
							},
							"overwrites": {
								"type": "reference",
								"target": 6599,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2397,
								2398,
								2399,
								2396
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6598,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2400,
					"name": "CreateProvinceGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2403,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6600,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2404,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6601,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2405,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6602,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2401,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "province"
							},
							"overwrites": {
								"type": "reference",
								"target": 6599,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2402,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2403,
								2404,
								2405,
								2401,
								2402
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6598,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2406,
					"name": "CreateCityGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2410,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6600,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2411,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6601,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2412,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6602,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2407,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "city"
							},
							"overwrites": {
								"type": "reference",
								"target": 6599,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2408,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2409,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2410,
								2411,
								2412,
								2407,
								2408,
								2409
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6598,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2413,
					"name": "CreateZipGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2418,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6600,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2419,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6601,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2420,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6602,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2414,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "zip"
							},
							"overwrites": {
								"type": "reference",
								"target": 6599,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2415,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2416,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2417,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2418,
								2419,
								2420,
								2414,
								2415,
								2416,
								2417
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6598,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2421,
					"name": "CreateGeoZoneDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 2395,
								"name": "CreateCountryGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2400,
								"name": "CreateProvinceGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2406,
								"name": "CreateCityGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2413,
								"name": "CreateZipGeoZoneDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 2422,
					"name": "UpdateGeoZoneBaseDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2424,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2281,
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.type"
							}
						},
						{
							"id": 2425,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.service_zone_id"
							}
						},
						{
							"id": 2426,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.country_code"
							}
						},
						{
							"id": 2427,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 2423,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2424,
								2425,
								2426,
								2427,
								2423
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 6598,
									"name": "CreateGeoZoneBaseDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 2428,
							"name": "UpdateCountryGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 2434,
							"name": "UpdateProvinceGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 2441,
							"name": "UpdateCityGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 2449,
							"name": "UpdateZipGeoZoneDTO"
						}
					]
				},
				{
					"id": 2428,
					"name": "UpdateCountryGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2431,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2425,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2432,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2426,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2433,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2427,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2430,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2423,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 2429,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "country"
							},
							"overwrites": {
								"type": "reference",
								"target": 2424,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2431,
								2432,
								2433,
								2430,
								2429
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2422,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2434,
					"name": "UpdateProvinceGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2438,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2425,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2439,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2426,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2440,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2427,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2437,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2423,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 2435,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "province"
							},
							"overwrites": {
								"type": "reference",
								"target": 2424,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2436,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2438,
								2439,
								2440,
								2437,
								2435,
								2436
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2422,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2441,
					"name": "UpdateCityGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2446,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2425,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2447,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2426,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2448,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2427,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2445,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2423,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 2442,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "city"
							},
							"overwrites": {
								"type": "reference",
								"target": 2424,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2443,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2444,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2446,
								2447,
								2448,
								2445,
								2442,
								2443,
								2444
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2422,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2449,
					"name": "UpdateZipGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2455,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2425,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 2456,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2426,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 2457,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2427,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 2454,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2423,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 2450,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "zip"
							},
							"overwrites": {
								"type": "reference",
								"target": 2424,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 2451,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2452,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2453,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2455,
								2456,
								2457,
								2454,
								2450,
								2451,
								2452,
								2453
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 2422,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2458,
					"name": "UpdateGeoZoneDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 2428,
								"name": "UpdateCountryGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2434,
								"name": "UpdateProvinceGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2441,
								"name": "UpdateCityGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 2449,
								"name": "UpdateZipGeoZoneDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 2459,
					"name": "CreateServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2460,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2461,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2462,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2395,
													"name": "CreateCountryGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2400,
													"name": "CreateProvinceGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2406,
													"name": "CreateCityGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2413,
													"name": "CreateZipGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2460,
								2461,
								2462
							]
						}
					]
				},
				{
					"id": 2463,
					"name": "UpdateServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2464,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2465,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2466,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2395,
													"name": "CreateCountryGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2400,
													"name": "CreateProvinceGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2406,
													"name": "CreateCityGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2413,
													"name": "CreateZipGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 2467,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 2468,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															2468
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2464,
								2465,
								2466
							]
						}
					]
				},
				{
					"id": 2383,
					"name": "ShippingOptionRuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 2384,
					"name": "CreateShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2385,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2386,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2383,
								"name": "ShippingOptionRuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2387,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2388,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2385,
								2386,
								2387,
								2388
							]
						}
					]
				},
				{
					"id": 2389,
					"name": "UpdateShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2391,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.attribute"
							}
						},
						{
							"id": 2392,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2383,
								"name": "ShippingOptionRuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.operator"
							}
						},
						{
							"id": 2393,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.value"
							}
						},
						{
							"id": 2394,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.shipping_option_id"
							}
						},
						{
							"id": 2390,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2391,
								2392,
								2393,
								2394,
								2390
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2384,
									"name": "CreateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2372,
					"name": "CreateShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2373,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2374,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2375,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2376,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2373,
								2374,
								2375,
								2376
							]
						}
					]
				},
				{
					"id": 2377,
					"name": "UpdateShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2379,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.label"
							}
						},
						{
							"id": 2380,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 2381,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.code"
							}
						},
						{
							"id": 2382,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.shipping_option_id"
							}
						},
						{
							"id": 2378,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2379,
								2380,
								2381,
								2382,
								2378
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2372,
									"name": "CreateShippingOptionTypeDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2469,
					"name": "CreateShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2470,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2471,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2197,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2472,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2473,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2474,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2475,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2372,
										"name": "CreateShippingOptionTypeDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "shipping_option_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 2476,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2477,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 2384,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "shipping_option_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2470,
								2471,
								2472,
								2473,
								2474,
								2475,
								2476,
								2477
							]
						}
					]
				},
				{
					"id": 2478,
					"name": "UpdateShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2479,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2480,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2481,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 2197,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 2482,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2483,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2484,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2485,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2372,
												"name": "CreateShippingOptionTypeDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "shipping_option_id"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2486,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2487,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2487
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2488,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2489,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2384,
													"name": "CreateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "shipping_option_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 2490,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 2491,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															2491
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2479,
								2480,
								2481,
								2482,
								2483,
								2484,
								2485,
								2488,
								2489
							]
						}
					]
				},
				{
					"id": 2364,
					"name": "CreateShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2365,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2366,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2367,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2365,
								2366,
								2367
							]
						}
					]
				},
				{
					"id": 2368,
					"name": "UpdateShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2369,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.name"
							}
						},
						{
							"id": 2370,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.type"
							}
						},
						{
							"id": 2371,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2369,
								2370,
								2371
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2364,
									"name": "CreateShippingProfileDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2551,
					"name": "IFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 2597,
					"name": "IFulfillmentModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2598,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2599,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 2600,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2601,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2146,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2602,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2146,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2603,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2604,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List fulfillment sets"
											}
										]
									},
									"parameters": [
										{
											"id": 2605,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2155,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2606,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2146,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2607,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2146,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2608,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2609,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count fulfillment sets"
											}
										]
									},
									"parameters": [
										{
											"id": 2610,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2155,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2611,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2146,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2612,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2146,
															"name": "FulfillmentSetDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2613,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2614,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 2615,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2492,
													"name": "CreateFulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2616,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2146,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2617,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2618,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2492,
												"name": "CreateFulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2619,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2146,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2620,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2621,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 2622,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2496,
													"name": "UpdateFulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2623,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2146,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2624,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2625,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2496,
												"name": "UpdateFulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2626,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2146,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2627,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2628,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 2629,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2630,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2631,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2632,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2633,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2634,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2635,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete fulfillment sets"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2636,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2637,
											"name": "fulfillmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2638,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2636,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2639,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2640,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2641,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore fulfillment sets"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2642,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2643,
											"name": "fulfillmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2644,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2642,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2645,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2646,
							"name": "retrieveServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2647,
									"name": "retrieveServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2648,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2649,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2263,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2650,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2263,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2651,
							"name": "listServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2652,
									"name": "listServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List service zones"
											}
										]
									},
									"parameters": [
										{
											"id": 2653,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2273,
												"name": "FilterableServiceZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2654,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2263,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2655,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2263,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2656,
							"name": "listAndCountServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2657,
									"name": "listAndCountServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count service zones"
											}
										]
									},
									"parameters": [
										{
											"id": 2658,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2273,
												"name": "FilterableServiceZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2659,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2263,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2660,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2263,
															"name": "ServiceZoneDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2661,
							"name": "createServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2662,
									"name": "createServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2663,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2459,
													"name": "CreateServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2664,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2263,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2665,
									"name": "createServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2666,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2459,
												"name": "CreateServiceZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2667,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2263,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2668,
							"name": "updateServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2669,
									"name": "updateServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2670,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2463,
													"name": "UpdateServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2671,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2263,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2672,
									"name": "updateServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2673,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2463,
												"name": "UpdateServiceZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2674,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2263,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2675,
							"name": "deleteServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2676,
									"name": "deleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2677,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2678,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2679,
									"name": "deleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2680,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2681,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2682,
							"name": "softDeleteServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2683,
									"name": "softDeleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete service zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2684,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2685,
											"name": "serviceZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2686,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2684,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2687,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2688,
							"name": "restoreServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2689,
									"name": "restoreServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore service zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2690,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2691,
											"name": "serviceZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2692,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2690,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2693,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2694,
							"name": "retrieveGeoZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2695,
									"name": "retrieveGeoZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2696,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2697,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2282,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2698,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2282,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2699,
							"name": "listGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2700,
									"name": "listGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List geo zones"
											}
										]
									},
									"parameters": [
										{
											"id": 2701,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2293,
												"name": "FilterableGeoZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2702,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2282,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2703,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2282,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2704,
							"name": "listAndCountGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2705,
									"name": "listAndCountGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count geo zones"
											}
										]
									},
									"parameters": [
										{
											"id": 2706,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2293,
												"name": "FilterableGeoZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2707,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2282,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2708,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2282,
															"name": "GeoZoneDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2709,
							"name": "createGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2710,
									"name": "createGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2711,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2421,
													"name": "CreateGeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2712,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2282,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2713,
									"name": "createGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2714,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2421,
												"name": "CreateGeoZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2715,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2282,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2716,
							"name": "updateGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2717,
									"name": "updateGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2718,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2458,
													"name": "UpdateGeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2719,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2282,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2720,
									"name": "updateGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2721,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2458,
												"name": "UpdateGeoZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2722,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2282,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2723,
							"name": "deleteGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2724,
									"name": "deleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 2725,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2726,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2727,
									"name": "deleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2728,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2729,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2730,
							"name": "softDeleteGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2731,
									"name": "softDeleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete geo zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2732,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2733,
											"name": "geoZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2734,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2732,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2735,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2736,
							"name": "restoreGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2737,
									"name": "restoreGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore geo zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2738,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2739,
											"name": "geoZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2740,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2738,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2741,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2742,
							"name": "retrieveShippingOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2743,
									"name": "retrieveShippingOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 2744,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2745,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2198,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2746,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2198,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2747,
							"name": "listShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2748,
									"name": "listShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping options"
											}
										]
									},
									"parameters": [
										{
											"id": 2749,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2217,
												"name": "FilterableShippingOptionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2750,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2198,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2751,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2198,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2752,
							"name": "listShippingOptionsForContext",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2753,
									"name": "listShippingOptionsForContext",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping options and eventually filter the result based on the context and their rules"
											}
										]
									},
									"parameters": [
										{
											"id": 2754,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2227,
												"name": "FilterableShippingOptionForContextProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2755,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2198,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2756,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2198,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2757,
							"name": "listAndCountShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2758,
									"name": "listAndCountShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping options without taking into account the context"
											}
										]
									},
									"parameters": [
										{
											"id": 2759,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 2217,
														"name": "FilterableShippingOptionProps",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": "context"
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										},
										{
											"id": 2760,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2198,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2761,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2198,
															"name": "ShippingOptionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2762,
							"name": "createShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2763,
									"name": "createShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 2764,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2469,
													"name": "CreateShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2765,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2198,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2766,
									"name": "createShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2767,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2469,
												"name": "CreateShippingOptionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2768,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2198,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2769,
							"name": "updateShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2770,
									"name": "updateShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 2771,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2478,
													"name": "UpdateShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2772,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2198,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2773,
									"name": "updateShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2774,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2478,
												"name": "UpdateShippingOptionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2775,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2198,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2776,
							"name": "deleteShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2777,
									"name": "deleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shippingOption"
											}
										]
									},
									"parameters": [
										{
											"id": 2778,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2779,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2780,
									"name": "deleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2781,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2782,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2783,
							"name": "softDeleteShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2784,
									"name": "softDeleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete shipping options"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2785,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2786,
											"name": "shippingOptionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2787,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2785,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2788,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2789,
							"name": "restoreShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2790,
									"name": "restoreShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore shipping options"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2791,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2792,
											"name": "shippingOptionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2793,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2791,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2794,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2795,
							"name": "retrieveShippingProfile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2796,
									"name": "retrieveShippingProfile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 2797,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2798,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2162,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2799,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2162,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2800,
							"name": "listShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2801,
									"name": "listShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping profiles"
											}
										]
									},
									"parameters": [
										{
											"id": 2802,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2171,
												"name": "FilterableShippingProfileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2803,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2162,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2804,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2162,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2805,
							"name": "listAndCountShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2806,
									"name": "listAndCountShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping profiles"
											}
										]
									},
									"parameters": [
										{
											"id": 2807,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2171,
												"name": "FilterableShippingProfileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2808,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2162,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2809,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2162,
															"name": "ShippingProfileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2810,
							"name": "createShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2811,
									"name": "createShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 2812,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2364,
													"name": "CreateShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2813,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2162,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2814,
									"name": "createShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2815,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2364,
												"name": "CreateShippingProfileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2816,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2162,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2817,
							"name": "updateShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2818,
									"name": "updateShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 2819,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2364,
													"name": "CreateShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2820,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2162,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2821,
									"name": "updateShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2822,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2364,
												"name": "CreateShippingProfileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2823,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2162,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2824,
							"name": "deleteShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2825,
									"name": "deleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 2826,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2827,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2828,
									"name": "deleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2829,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2830,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2831,
							"name": "softDeleteShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2832,
									"name": "softDeleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete shipping profiles"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2833,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2834,
											"name": "shippingProfileIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2835,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2833,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2836,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2837,
							"name": "restoreShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2838,
									"name": "restoreShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore shipping profiles"
											}
										]
									},
									"typeParameter": [
										{
											"id": 2839,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2840,
											"name": "shippingProfileIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2841,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2839,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2842,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2843,
							"name": "retrieveShippingOptionRule",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2844,
									"name": "retrieveShippingOptionRule",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 2845,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2846,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2178,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2847,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2178,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2848,
							"name": "listShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2849,
									"name": "listShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 2850,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2190,
												"name": "FilterableShippingOptionRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2851,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2178,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2852,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2178,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2853,
							"name": "listAndCountShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2854,
									"name": "listAndCountShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 2855,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2190,
												"name": "FilterableShippingOptionRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2856,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2178,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2857,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2178,
															"name": "ShippingOptionRuleDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2858,
							"name": "createShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2859,
									"name": "createShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 2860,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2384,
													"name": "CreateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2861,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2178,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2862,
									"name": "createShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2863,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2384,
												"name": "CreateShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2864,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2178,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2865,
							"name": "updateShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2866,
									"name": "updateShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 2867,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2389,
													"name": "UpdateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 2868,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2178,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2869,
									"name": "updateShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2870,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2389,
												"name": "UpdateShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2871,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2178,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2872,
							"name": "deleteShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2873,
									"name": "deleteShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 2874,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2875,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2876,
									"name": "deleteShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2877,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2878,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2879,
							"name": "retrieveShippingOptionType",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2880,
									"name": "retrieveShippingOptionType",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option type"
											}
										]
									},
									"parameters": [
										{
											"id": 2881,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2882,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2246,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2883,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2246,
												"name": "ShippingOptionTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2884,
							"name": "listShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2885,
									"name": "listShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping option types"
											}
										]
									},
									"parameters": [
										{
											"id": 2886,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2256,
												"name": "FilterableShippingOptionTypeProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2887,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2246,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2888,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2246,
													"name": "ShippingOptionTypeDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2889,
							"name": "listAndCountShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2890,
									"name": "listAndCountShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping options types"
											}
										]
									},
									"parameters": [
										{
											"id": 2891,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2256,
												"name": "FilterableShippingOptionTypeProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2892,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2246,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2893,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2246,
															"name": "ShippingOptionTypeDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2894,
							"name": "deleteShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2895,
									"name": "deleteShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "delete a shipping option type"
											}
										]
									},
									"parameters": [
										{
											"id": 2896,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2897,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2898,
									"name": "deleteShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2899,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2900,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2901,
							"name": "retrieveFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2902,
									"name": "retrieveFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a fulfillment"
											}
										]
									},
									"parameters": [
										{
											"id": 2903,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2904,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2309,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2905,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2309,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2906,
							"name": "listFulfillments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2907,
									"name": "listFulfillments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List fulfillments"
											}
										]
									},
									"parameters": [
										{
											"id": 2908,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2155,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2909,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2309,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2910,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2309,
													"name": "FulfillmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2911,
							"name": "listAndCountFulfillments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2912,
									"name": "listAndCountFulfillments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count fulfillments"
											}
										]
									},
									"parameters": [
										{
											"id": 2913,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2155,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2914,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2309,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2915,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2309,
															"name": "FulfillmentDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2916,
							"name": "createFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2917,
									"name": "createFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new fulfillment including into the third party provider"
											}
										]
									},
									"parameters": [
										{
											"id": 2918,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2504,
												"name": "CreateFulfillmentDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2919,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2309,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2920,
							"name": "updateFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2921,
									"name": "updateFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a fulfillment"
											}
										]
									},
									"parameters": [
										{
											"id": 2922,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2923,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2518,
												"name": "UpdateFulfillmentDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2924,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2309,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2925,
							"name": "cancelFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2926,
									"name": "cancelFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cancel the given fulfillment including into the third party provider"
											}
										]
									},
									"parameters": [
										{
											"id": 2927,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2928,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2309,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2929,
							"name": "retrieveFulfillmentOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2930,
									"name": "retrieveFulfillmentOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve the available fulfillment options for the given data."
											}
										]
									},
									"parameters": [
										{
											"id": 2931,
											"name": "providerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2932,
							"name": "validateFulfillmentOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2933,
									"name": "validateFulfillmentOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate the given shipping option fulfillment option from the provided data"
											}
										]
									},
									"parameters": [
										{
											"id": 2934,
											"name": "providerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2935,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2936,
							"name": "validateShippingOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2937,
									"name": "validateShippingOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate if the given shipping option is valid for a given context"
											}
										]
									},
									"parameters": [
										{
											"id": 2938,
											"name": "shippingOptionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2939,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2598,
								2603,
								2608,
								2613,
								2620,
								2627,
								2634,
								2640,
								2646,
								2651,
								2656,
								2661,
								2668,
								2675,
								2682,
								2688,
								2694,
								2699,
								2704,
								2709,
								2716,
								2723,
								2730,
								2736,
								2742,
								2747,
								2752,
								2757,
								2762,
								2769,
								2776,
								2783,
								2789,
								2795,
								2800,
								2805,
								2810,
								2817,
								2824,
								2831,
								2837,
								2843,
								2848,
								2853,
								2858,
								2865,
								2872,
								2879,
								2884,
								2889,
								2894,
								2901,
								2906,
								2911,
								2916,
								2920,
								2925,
								2929,
								2932,
								2936
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 2947,
					"name": "AddFulfillmentShippingOptionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2948,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2949,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2384,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2949
									]
								}
							]
						}
					}
				},
				{
					"id": 2950,
					"name": "RemoveFulfillmentShippingOptionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2951,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2952,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2952
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						2129,
						2341,
						2354,
						2301,
						2146,
						2155,
						2309,
						2328,
						2282,
						2293,
						2263,
						2273,
						2178,
						2190,
						2246,
						2256,
						2198,
						2217,
						2227,
						2162,
						2171,
						2525,
						2543,
						2538,
						2492,
						2496,
						2503,
						2504,
						2518,
						2395,
						2400,
						2406,
						2413,
						2422,
						2428,
						2434,
						2441,
						2449,
						2459,
						2463,
						2384,
						2389,
						2372,
						2377,
						2469,
						2478,
						2364,
						2368,
						2551,
						2597
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2281,
						2197,
						2421,
						2458,
						2383,
						2947,
						2950
					]
				}
			]
		},
		{
			"id": 6598,
			"name": "CreateGeoZoneBaseDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6599,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2281,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6600,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6601,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6602,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6599,
						6600,
						6601,
						6602
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2395,
					"name": "CreateCountryGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 2400,
					"name": "CreateProvinceGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 2406,
					"name": "CreateCityGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 2413,
					"name": "CreateZipGeoZoneDTO"
				}
			]
		},
		{
			"id": 5538,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5539,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5540,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5541,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5542,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5543,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5544,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5545,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5546,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5547,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5540,
								5541,
								5542,
								5543,
								5544,
								5545,
								5546,
								5547
							]
						}
					]
				}
			}
		},
		{
			"id": 5548,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5549,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5550,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5549,
						5550
					]
				}
			]
		},
		{
			"id": 5551,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5552,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5553,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 5548,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 5548,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 5554,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5555,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5556,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5557,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5556,
														5557
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5558,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 5559,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5538,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5560,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 5561,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 5562,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 5563,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 5538,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											5562,
											5563
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 5564,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5552,
						5553,
						5554,
						5558,
						5559,
						5560,
						5564
					]
				}
			]
		},
		{
			"id": 5565,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5566,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5567,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5566,
						5567
					]
				}
			]
		},
		{
			"id": 5568,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5569,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5570,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5569,
						5570
					]
				}
			]
		},
		{
			"id": 5571,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5572,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5573,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5574,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 5575,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 5576,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 5577,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 5578,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 5565,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 5579,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 5580,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 5581,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 5582,
															"name": "field",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 5568,
															"name": "JoinerDirective",
															"package": "@medusajs/types"
														}
													}
												}
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											5576,
											5577,
											5578,
											5579
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 5583,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 5584,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5565,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5585,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5586,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 5587,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 5588,
										"name": "field",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 5568,
										"name": "JoinerDirective",
										"package": "@medusajs/types"
									}
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5572,
						5573,
						5574,
						5583,
						5584,
						5585
					]
				}
			]
		},
		{
			"id": 5589,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignature": {
				"id": 5590,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"parameters": [
					{
						"id": 5591,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 5592,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 5593,
								"name": "fields",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							},
							{
								"id": 5594,
								"name": "args",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 5565,
										"name": "JoinerArgument",
										"package": "@medusajs/types"
									}
								}
							},
							{
								"id": 5595,
								"name": "expands",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "reference",
									"target": 5589,
									"name": "RemoteNestedExpands",
									"package": "@medusajs/types"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									5593,
									5594,
									5595
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 5596,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5597,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5598,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5599,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 5551,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5600,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 5551,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5601,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 5602,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5565,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5603,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 5589,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5597,
						5598,
						5599,
						5600,
						5601,
						5602,
						5603
					]
				}
			]
		},
		{
			"id": 5604,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5605,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5606,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5607,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 5608,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5609,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5610,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5611,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5612,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 5613,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5614,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5615,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5616,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5617,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 5618,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5619,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5620,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5621,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5622,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 5623,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5624,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5625,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5626,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5627,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 5628,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5629,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5630,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5631,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 5632,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1999,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5633,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5634,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5635,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5636,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 5637,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2002,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5638,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						5605,
						5610,
						5615,
						5620,
						5625,
						5629,
						5634
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3169,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 2953,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 2954,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2955,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2956,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2957,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2958,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2959,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2960,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2961,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2962,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2963,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2964,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2965,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2966,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2967,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2968,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2969,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2970,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2971,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2972,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2973,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2974,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2975,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2976,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2977,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2978,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2979,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2980,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2981,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2982,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2983,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2984,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2985,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2986,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2987,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2988,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2989,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2990,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2991,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2992,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2993,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2994,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2995,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2996,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2997,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2998,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 2999,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3000,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 3001,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3002,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 3003,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3004,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 3005,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3006,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 3007,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3008,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 3009,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3010,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2955,
								2959,
								2963,
								2967,
								2970,
								2975,
								2980,
								2985,
								2990,
								2995,
								2999,
								3003,
								3007
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						2954
					]
				}
			]
		},
		{
			"id": 3011,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 3012,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 3016,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3013,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 3014,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 3015,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3016,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 3017,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 3018,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3017,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 3019,
					"name": "MODULE_SCOPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 3020,
							"name": "INTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 3021,
							"name": "EXTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "external"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								3020,
								3021
							]
						}
					]
				},
				{
					"id": 3022,
					"name": "MODULE_RESOURCE_TYPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 3023,
							"name": "SHARED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "shared"
							}
						},
						{
							"id": 3024,
							"name": "ISOLATED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "isolated"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								3023,
								3024
							]
						}
					]
				},
				{
					"id": 3025,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3026,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3027,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3020,
										"name": "MODULE_SCOPE.INTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3028,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3022,
										"name": "MODULE_RESOURCE_TYPE",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3029,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3030,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3055,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 3031,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 3128,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 3032,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3033,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3034,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3027,
										3028,
										3029,
										3030,
										3031,
										3032,
										3033,
										3034
									]
								}
							]
						}
					}
				},
				{
					"id": 3035,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3036,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3037,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3021,
										"name": "MODULE_SCOPE.EXTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3038,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3055,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 3039,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3040,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 3041,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 3042,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3043,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3041,
														3042,
														3043
													]
												}
											]
										}
									}
								},
								{
									"id": 3044,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3045,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3046,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3037,
										3038,
										3039,
										3044,
										3045,
										3046
									]
								}
							]
						}
					}
				},
				{
					"id": 3047,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3048,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3049,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 3050,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3055,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3051,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3052,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3053,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3025,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 3035,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 3054,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 3128,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3049,
										3050,
										3051,
										3052,
										3053,
										3054
									]
								}
							]
						}
					}
				},
				{
					"id": 3055,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3056,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3057,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3058,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3059,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 3060,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3061,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3062,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3063,
									"name": "isLegacy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3064,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3065,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3025,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 3035,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3057,
										3058,
										3059,
										3060,
										3061,
										3062,
										3063,
										3064,
										3065
									]
								}
							]
						}
					}
				},
				{
					"id": 3066,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3067,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3068,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3069,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3070,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3071,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3072,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3025,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3068,
										3069,
										3070,
										3071,
										3072
									]
								}
							]
						}
					}
				},
				{
					"id": 3073,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 6603,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3074,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3075,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3076,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3077,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3055,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3075,
												3076,
												3077
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3078,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3079,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3080,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3097,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3081,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3055,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3080,
												3081
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3082,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 3087,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3083,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3084,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1427,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3085,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 3087,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 3086,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2954,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3084,
										3085,
										3086
									]
								}
							]
						}
					}
				},
				{
					"id": 3088,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3089,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 3090,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3091,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3082,
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3092,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 3025,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 3093,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 3094,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 3095,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 3096,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											3095,
											3096
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 3097,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5551,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3098,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3099,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3100,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3124,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 3101,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 3102,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 3103,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 3104,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 3105,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 3106,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 3107,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									3106,
																									3107
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 3108,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 3124,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	3103,
																	3104,
																	3108
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 3109,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3110,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3111,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3112,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 3113,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3114,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3115,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3116,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3117,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3118,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3119,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 3120,
																					"name": "type",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "date"
																							},
																							{
																								"type": "literal",
																								"value": "time"
																							},
																							{
																								"type": "literal",
																								"value": "datetime"
																							},
																							{
																								"type": "literal",
																								"value": "bigint"
																							},
																							{
																								"type": "literal",
																								"value": "blob"
																							},
																							{
																								"type": "literal",
																								"value": "uint8array"
																							},
																							{
																								"type": "literal",
																								"value": "array"
																							},
																							{
																								"type": "literal",
																								"value": "enumArray"
																							},
																							{
																								"type": "literal",
																								"value": "enum"
																							},
																							{
																								"type": "literal",
																								"value": "json"
																							},
																							{
																								"type": "literal",
																								"value": "integer"
																							},
																							{
																								"type": "literal",
																								"value": "smallint"
																							},
																							{
																								"type": "literal",
																								"value": "tinyint"
																							},
																							{
																								"type": "literal",
																								"value": "mediumint"
																							},
																							{
																								"type": "literal",
																								"value": "float"
																							},
																							{
																								"type": "literal",
																								"value": "double"
																							},
																							{
																								"type": "literal",
																								"value": "boolean"
																							},
																							{
																								"type": "literal",
																								"value": "decimal"
																							},
																							{
																								"type": "literal",
																								"value": "string"
																							},
																							{
																								"type": "literal",
																								"value": "uuid"
																							},
																							{
																								"type": "literal",
																								"value": "text"
																							}
																						]
																					}
																				},
																				{
																					"id": 3121,
																					"name": "defaultValue",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 3122,
																					"name": "nullable",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 3123,
																					"name": "options",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Mikro-orm options for the column"
																							}
																						]
																					},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						3120,
																						3121,
																						3122,
																						3123
																					]
																				}
																			]
																		}
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3116,
																3117,
																3118
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3099,
												3100,
												3101,
												3109,
												3110,
												3111,
												3112,
												3113,
												3114
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3124,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 5538,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3125,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3126,
											"name": "isInternalService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3127,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3126,
												3127
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3128,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3130,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3012,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Constructor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3131,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3088,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 3132,
									"name": "migrations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 3133,
									"name": "models",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3012,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 3134,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 3135,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3136,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 3082,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 3137,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 3025,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 3138,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 3139,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3140,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 3082,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 3141,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 3025,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3130,
										3131,
										3132,
										3133
									]
								},
								{
									"title": "Methods",
									"children": [
										3134,
										3138
									]
								}
							]
						}
					}
				},
				{
					"id": 3142,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3143,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3144,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3145,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3146,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3147,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3148,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3149,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3150,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3151,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3152,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3153,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 3154,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3155,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3145,
												3146,
												3147,
												3148,
												3149,
												3150,
												3151,
												3152,
												3153,
												3154,
												3155
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3143
							]
						}
					]
				},
				{
					"id": 3156,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3157,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3158,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 3159,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3160,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignature": {
												"id": 3161,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 3162,
														"name": "key",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 3012,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1888,
															"name": "RepositoryService",
															"package": "@medusajs/types"
														}
													],
													"name": "Constructor",
													"package": "@medusajs/types"
												}
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3158,
										3159
									]
								}
							]
						}
					}
				},
				{
					"id": 3163,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3025,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 3035,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3164,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3165,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 3166,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3167,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 5571,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 3168,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 3169,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 49,
							"name": "IApiKeyModuleService"
						},
						{
							"type": "reference",
							"target": 118,
							"name": "IAuthModuleService"
						},
						{
							"type": "reference",
							"target": 777,
							"name": "ICartModuleService"
						},
						{
							"type": "reference",
							"target": 1581,
							"name": "ICustomerModuleService"
						},
						{
							"type": "reference",
							"target": 2597,
							"name": "IFulfillmentModuleService"
						},
						{
							"type": "reference",
							"target": 3949,
							"name": "IOrderModuleService"
						},
						{
							"type": "reference",
							"target": 4481,
							"name": "IPromotionModuleService"
						},
						{
							"type": "reference",
							"target": 4693,
							"name": "ISalesChannelModuleService"
						},
						{
							"type": "reference",
							"target": 4962,
							"name": "ITaxModuleService"
						},
						{
							"type": "reference",
							"target": 5173,
							"name": "IUserModuleService"
						},
						{
							"type": "reference",
							"target": 5423,
							"name": "IStoreModuleService"
						},
						{
							"type": "reference",
							"target": 5498,
							"name": "ICurrencyModuleService"
						},
						{
							"type": "reference",
							"target": 5604,
							"name": "ILinkModule"
						},
						{
							"type": "reference",
							"target": 5933,
							"name": "IPaymentModuleService"
						},
						{
							"type": "reference",
							"target": 6434,
							"name": "IRegionModuleService"
						}
					]
				},
				{
					"id": 3177,
					"name": "InternalModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3178,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 3179,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 3272,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "InternalModuleService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 3180,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3181,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3182,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3183,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3184,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3270,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3185,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3186,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 3187,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3188,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3270,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3189,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3190,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3191,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3192,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 1864,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 3193,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 3194,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3195,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3196,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3197,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3198,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3199,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 1864,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 3200,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 3201,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3202,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3270,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3203,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3204,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3205,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 3206,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3207,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3208,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3209,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3270,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3210,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3211,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3212,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 3213,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3214,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3215,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3216,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3270,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3217,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3218,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3219,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3220,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3221,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 1864,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3222,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 3223,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3220,
																3223
															]
														}
													]
												}
											}
										},
										{
											"id": 3224,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3225,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3226,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 3227,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 3228,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 3229,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 1864,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 3230,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 3231,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	3228,
																	3231
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 3232,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3233,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3234,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3235,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3236,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3237,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3238,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3239,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3240,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3241,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 3242,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3243,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3244,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 3245,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3246,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3247,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3248,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3249,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3250,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 1864,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3251,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3249
															]
														}
													]
												}
											}
										},
										{
											"id": 3252,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3253,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3254,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3255,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3256,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 3257,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3270,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3258,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3259,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3260,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3261,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 3262,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3270,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3263,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3264,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3265,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 3266,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3270,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3267,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3268,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3269,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3270,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								3178
							]
						},
						{
							"title": "Methods",
							"children": [
								3180,
								3189,
								3196,
								3203,
								3210,
								3233,
								3253,
								3258,
								3263
							]
						}
					],
					"typeParameters": [
						{
							"id": 3270,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3271,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 3272,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 3273,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3274,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3275,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3012,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3275
									]
								}
							]
						}
					}
				},
				{
					"id": 3276,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3277,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3278,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 3273,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 3279,
									"name": "provider_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3280,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3278,
										3279,
										3280
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						3019,
						3022
					]
				},
				{
					"title": "Interfaces",
					"children": [
						3142,
						3169,
						3177
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						3012,
						3017,
						3018,
						3025,
						3035,
						3047,
						3055,
						3066,
						3073,
						3078,
						3082,
						3088,
						3093,
						3097,
						3124,
						3128,
						3156,
						3163,
						3164,
						3273,
						3276
					]
				}
			]
		},
		{
			"id": 6603,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 3035,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3025,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 3281,
			"name": "OrderTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 3282,
					"name": "OrderSummaryDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3283,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3284,
									"name": "total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3285,
									"name": "subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3286,
									"name": "total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3287,
									"name": "ordered_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3288,
									"name": "fulfilled_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3289,
									"name": "returned_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3290,
									"name": "return_request_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3291,
									"name": "write_off_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3292,
									"name": "projected_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3293,
									"name": "net_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3294,
									"name": "net_subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3295,
									"name": "net_total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3296,
									"name": "future_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3297,
									"name": "future_subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3298,
									"name": "future_total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3299,
									"name": "future_projected_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3300,
									"name": "balance",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3301,
									"name": "future_balance",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3284,
										3285,
										3286,
										3287,
										3288,
										3289,
										3290,
										3291,
										3292,
										3293,
										3294,
										3295,
										3296,
										3297,
										3298,
										3299,
										3300,
										3301
									]
								}
							]
						}
					}
				},
				{
					"id": 3302,
					"name": "OrderAdjustmentLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3303,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3304,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3305,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3306,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3307,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3308,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3309,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3310,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3311,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3303,
								3304,
								3305,
								3306,
								3307,
								3308,
								3309,
								3310,
								3311
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3312,
							"name": "OrderShippingMethodAdjustmentDTO"
						},
						{
							"type": "reference",
							"target": 3324,
							"name": "OrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 3312,
					"name": "OrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3315,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3303,
								"name": "OrderAdjustmentLineDTO.id"
							}
						},
						{
							"id": 3316,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3304,
								"name": "OrderAdjustmentLineDTO.code"
							}
						},
						{
							"id": 3317,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3305,
								"name": "OrderAdjustmentLineDTO.amount"
							}
						},
						{
							"id": 3318,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3306,
								"name": "OrderAdjustmentLineDTO.order_id"
							}
						},
						{
							"id": 3319,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3307,
								"name": "OrderAdjustmentLineDTO.description"
							}
						},
						{
							"id": 3320,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3308,
								"name": "OrderAdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 3321,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3309,
								"name": "OrderAdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 3322,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3310,
								"name": "OrderAdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 3323,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3311,
								"name": "OrderAdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 3313,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3383,
								"name": "OrderShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3314,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3315,
								3316,
								3317,
								3318,
								3319,
								3320,
								3321,
								3322,
								3323,
								3313,
								3314
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3302,
							"name": "OrderAdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3324,
					"name": "OrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3327,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3303,
								"name": "OrderAdjustmentLineDTO.id"
							}
						},
						{
							"id": 3328,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3304,
								"name": "OrderAdjustmentLineDTO.code"
							}
						},
						{
							"id": 3329,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3305,
								"name": "OrderAdjustmentLineDTO.amount"
							}
						},
						{
							"id": 3330,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3306,
								"name": "OrderAdjustmentLineDTO.order_id"
							}
						},
						{
							"id": 3331,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3307,
								"name": "OrderAdjustmentLineDTO.description"
							}
						},
						{
							"id": 3332,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3308,
								"name": "OrderAdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 3333,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3309,
								"name": "OrderAdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 3334,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3310,
								"name": "OrderAdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 3335,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3311,
								"name": "OrderAdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 3325,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 3414,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3326,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3327,
								3328,
								3329,
								3330,
								3331,
								3332,
								3333,
								3334,
								3335,
								3325,
								3326
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3302,
							"name": "OrderAdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3336,
					"name": "OrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3337,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3338,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3339,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3340,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3341,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3342,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3343,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3344,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3337,
								3338,
								3339,
								3340,
								3341,
								3342,
								3343,
								3344
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3345,
							"name": "OrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 3356,
							"name": "OrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 3345,
					"name": "OrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3348,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3337,
								"name": "OrderTaxLineDTO.id"
							}
						},
						{
							"id": 3349,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3338,
								"name": "OrderTaxLineDTO.description"
							}
						},
						{
							"id": 3350,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3339,
								"name": "OrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3351,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3340,
								"name": "OrderTaxLineDTO.code"
							}
						},
						{
							"id": 3352,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3341,
								"name": "OrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3353,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3342,
								"name": "OrderTaxLineDTO.provider_id"
							}
						},
						{
							"id": 3354,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3343,
								"name": "OrderTaxLineDTO.created_at"
							}
						},
						{
							"id": 3355,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3344,
								"name": "OrderTaxLineDTO.updated_at"
							}
						},
						{
							"id": 3346,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3383,
								"name": "OrderShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3347,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3348,
								3349,
								3350,
								3351,
								3352,
								3353,
								3354,
								3355,
								3346,
								3347
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3336,
							"name": "OrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3356,
					"name": "OrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3359,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3337,
								"name": "OrderTaxLineDTO.id"
							}
						},
						{
							"id": 3360,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3338,
								"name": "OrderTaxLineDTO.description"
							}
						},
						{
							"id": 3361,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3339,
								"name": "OrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3362,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3340,
								"name": "OrderTaxLineDTO.code"
							}
						},
						{
							"id": 3363,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3341,
								"name": "OrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3364,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3342,
								"name": "OrderTaxLineDTO.provider_id"
							}
						},
						{
							"id": 3365,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3343,
								"name": "OrderTaxLineDTO.created_at"
							}
						},
						{
							"id": 3366,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3344,
								"name": "OrderTaxLineDTO.updated_at"
							}
						},
						{
							"id": 3357,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3414,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3358,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3359,
								3360,
								3361,
								3362,
								3363,
								3364,
								3365,
								3366,
								3357,
								3358
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3336,
							"name": "OrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3367,
					"name": "OrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3368,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3369,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3370,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3371,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3372,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone number of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3373,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3374,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3375,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The second address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3376,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3377,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3378,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province/state of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3379,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3380,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3381,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3382,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3368,
								3369,
								3370,
								3371,
								3372,
								3373,
								3374,
								3375,
								3376,
								3377,
								3378,
								3379,
								3380,
								3381,
								3382
							]
						}
					]
				},
				{
					"id": 3383,
					"name": "OrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3384,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3385,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3386,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3387,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3388,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3389,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the shipping method price is tax inclusive or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3390,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option the method was created from"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3391,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional data needed for fulfillment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3392,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3393,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3345,
									"name": "OrderShippingMethodTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3394,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3312,
									"name": "OrderShippingMethodAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3395,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3396,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3397,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3398,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3399,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3400,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3401,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3384,
								3385,
								3386,
								3387,
								3388,
								3389,
								3390,
								3391,
								3392,
								3393,
								3394,
								3395,
								3396,
								3397,
								3398,
								3399,
								3400,
								3401
							]
						}
					]
				},
				{
					"id": 3402,
					"name": "OrderLineItemTotalsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3403,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3404,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3405,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3406,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3407,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3408,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3409,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3410,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3411,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3412,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3413,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3403,
								3404,
								3405,
								3406,
								3407,
								3408,
								3409,
								3410,
								3411,
								3412,
								3413
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3414,
							"name": "OrderLineItemDTO"
						}
					]
				},
				{
					"id": 3414,
					"name": "OrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3443,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3403,
								"name": "OrderLineItemTotalsDTO.original_total"
							}
						},
						{
							"id": 3444,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3404,
								"name": "OrderLineItemTotalsDTO.original_subtotal"
							}
						},
						{
							"id": 3445,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3405,
								"name": "OrderLineItemTotalsDTO.original_tax_total"
							}
						},
						{
							"id": 3446,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3406,
								"name": "OrderLineItemTotalsDTO.item_total"
							}
						},
						{
							"id": 3447,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3407,
								"name": "OrderLineItemTotalsDTO.item_subtotal"
							}
						},
						{
							"id": 3448,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3408,
								"name": "OrderLineItemTotalsDTO.item_tax_total"
							}
						},
						{
							"id": 3449,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3409,
								"name": "OrderLineItemTotalsDTO.total"
							}
						},
						{
							"id": 3450,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3410,
								"name": "OrderLineItemTotalsDTO.subtotal"
							}
						},
						{
							"id": 3451,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3411,
								"name": "OrderLineItemTotalsDTO.tax_total"
							}
						},
						{
							"id": 3452,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3412,
								"name": "OrderLineItemTotalsDTO.discount_total"
							}
						},
						{
							"id": 3453,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3413,
								"name": "OrderLineItemTotalsDTO.discount_tax_total"
							}
						},
						{
							"id": 3415,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3416,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3417,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The subtitle of the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3418,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3419,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3420,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3421,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3422,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3423,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The subtitle of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3424,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3425,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3426,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3427,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU (stock keeping unit) of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3428,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The barcode of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3429,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3430,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The option values of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3431,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3432,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item is discountable."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3433,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item price is tax inclusive."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3434,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The compare at unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3435,
							"name": "raw_compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw compare at unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3436,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3437,
							"name": "raw_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3438,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3356,
									"name": "OrderLineItemTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3439,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3324,
									"name": "OrderLineItemAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3440,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3454,
								"name": "OrderItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3441,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3442,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was last updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3443,
								3444,
								3445,
								3446,
								3447,
								3448,
								3449,
								3450,
								3451,
								3452,
								3453,
								3415,
								3416,
								3417,
								3418,
								3419,
								3420,
								3421,
								3422,
								3423,
								3424,
								3425,
								3426,
								3427,
								3428,
								3429,
								3430,
								3431,
								3432,
								3433,
								3434,
								3435,
								3436,
								3437,
								3438,
								3439,
								3440,
								3441,
								3442
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3402,
							"name": "OrderLineItemTotalsDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3454,
					"name": "OrderItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3455,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order detail."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3456,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3457,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Line Item of the order detail."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3414,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3458,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3459,
							"name": "raw_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3460,
							"name": "fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfilled quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3461,
							"name": "raw_fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw fulfilled quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3462,
							"name": "shipped_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipped quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3463,
							"name": "raw_shipped_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw shipped quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3464,
							"name": "return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return requested for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3465,
							"name": "raw_return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return requested for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3466,
							"name": "return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return received for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3467,
							"name": "raw_return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return received for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3468,
							"name": "return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return dismissed for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3469,
							"name": "raw_return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return dismissed for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3470,
							"name": "written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of written off for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3471,
							"name": "raw_written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of written off for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 6548,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3472,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order detail"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3473,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3474,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was last updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3455,
								3456,
								3457,
								3458,
								3459,
								3460,
								3461,
								3462,
								3463,
								3464,
								3465,
								3466,
								3467,
								3468,
								3469,
								3470,
								3471,
								3472,
								3473,
								3474
							]
						}
					]
				},
				{
					"id": 3475,
					"name": "OrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3476,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3477,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3478,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the region the order belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3479,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer on the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3480,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel the order belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3481,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3482,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency of the order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3483,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 3367,
								"name": "OrderAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3484,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated billing address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 3367,
								"name": "OrderAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3485,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order details / line items."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3414,
									"name": "OrderLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3486,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping methods"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3383,
									"name": "OrderShippingMethodDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3487,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tramsactions associated with the order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3523,
									"name": "OrderTransactionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3488,
							"name": "summary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The summary of the order totals."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3282,
								"name": "OrderSummaryDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3489,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3490,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3491,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3476,
								3477,
								3478,
								3479,
								3480,
								3481,
								3482,
								3483,
								3484,
								3485,
								3486,
								3487,
								3488,
								3489,
								3490,
								3491
							]
						}
					]
				},
				{
					"id": 3492,
					"name": "OrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3493,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order change"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3494,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3495,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 3475,
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3496,
							"name": "actions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actions of the order change"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3510,
									"name": "OrderChangeActionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3497,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of the order change"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3498,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The requested by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3499,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was requested"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3500,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The confirmed by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3501,
							"name": "confirmed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was confirmed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3502,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The declined by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3503,
							"name": "declined_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The declined reason of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3504,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3505,
							"name": "declined_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was declined"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3506,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The canceled by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3507,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was canceled"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3508,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3509,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3493,
								3494,
								3495,
								3496,
								3497,
								3498,
								3499,
								3500,
								3501,
								3502,
								3503,
								3504,
								3505,
								3506,
								3507,
								3508,
								3509
							]
						}
					]
				},
				{
					"id": 3510,
					"name": "OrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3511,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order change action"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3512,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3513,
							"name": "order_change",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order change"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 3492,
										"name": "OrderChangeDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3514,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3515,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 3475,
										"name": "OrderDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3516,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference of the order change action"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3517,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reference"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3518,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action of the order change action"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3519,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order change action"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3520,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The internal note of the order change action"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 3521,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change action was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3522,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change action was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3511,
								3512,
								3513,
								3514,
								3515,
								3516,
								3517,
								3518,
								3519,
								3520,
								3521,
								3522
							]
						}
					]
				},
				{
					"id": 3523,
					"name": "OrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3524,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3525,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3526,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 3475,
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3527,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3528,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency code of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3529,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3530,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reference"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3531,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the transaction"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3532,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the transaction was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 3533,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the transaction was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3524,
								3525,
								3526,
								3527,
								3528,
								3529,
								3530,
								3531,
								3532,
								3533
							]
						}
					]
				},
				{
					"id": 3534,
					"name": "FilterableOrderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3541,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3534,
											"name": "FilterableOrderProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3534,
													"name": "FilterableOrderProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3542,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3534,
											"name": "FilterableOrderProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3534,
													"name": "FilterableOrderProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3535,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3536,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3537,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3538,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3539,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3540,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3541,
								3542,
								3535,
								3536,
								3537,
								3538,
								3539,
								3540
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3534,
									"name": "FilterableOrderProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3543,
					"name": "FilterableOrderAddressProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3545,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3543,
											"name": "FilterableOrderAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3543,
													"name": "FilterableOrderAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3546,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3543,
											"name": "FilterableOrderAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3543,
													"name": "FilterableOrderAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3544,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3545,
								3546,
								3544
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3543,
									"name": "FilterableOrderAddressProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3547,
					"name": "FilterableOrderLineItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3553,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3547,
											"name": "FilterableOrderLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3547,
													"name": "FilterableOrderLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3554,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3547,
											"name": "FilterableOrderLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3547,
													"name": "FilterableOrderLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3548,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3549,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3550,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3551,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3552,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3553,
								3554,
								3548,
								3549,
								3550,
								3551,
								3552
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3547,
									"name": "FilterableOrderLineItemProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3555,
					"name": "FilterableOrderLineItemAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3561,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3555,
											"name": "FilterableOrderLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3555,
													"name": "FilterableOrderLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3562,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3555,
											"name": "FilterableOrderLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3555,
													"name": "FilterableOrderLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3556,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3557,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3558,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3559,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3560,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3547,
								"name": "FilterableOrderLineItemProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3561,
								3562,
								3556,
								3557,
								3558,
								3559,
								3560
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3555,
									"name": "FilterableOrderLineItemAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3563,
					"name": "FilterableOrderShippingMethodProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3568,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3563,
											"name": "FilterableOrderShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3563,
													"name": "FilterableOrderShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3569,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3563,
											"name": "FilterableOrderShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3563,
													"name": "FilterableOrderShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3564,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3565,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3566,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3567,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3568,
								3569,
								3564,
								3565,
								3566,
								3567
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3563,
									"name": "FilterableOrderShippingMethodProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3570,
					"name": "FilterableOrderShippingMethodAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3576,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3570,
											"name": "FilterableOrderShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3570,
													"name": "FilterableOrderShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3577,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3570,
											"name": "FilterableOrderShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3570,
													"name": "FilterableOrderShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3571,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3572,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3573,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3574,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3575,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3563,
								"name": "FilterableOrderShippingMethodProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3576,
								3577,
								3571,
								3572,
								3573,
								3574,
								3575
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3570,
									"name": "FilterableOrderShippingMethodAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3578,
					"name": "FilterableOrderLineItemTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3586,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3578,
											"name": "FilterableOrderLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3578,
													"name": "FilterableOrderLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3587,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3578,
											"name": "FilterableOrderLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3578,
													"name": "FilterableOrderLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3579,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3580,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3581,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3582,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3583,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3584,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3585,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3547,
								"name": "FilterableOrderLineItemProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3586,
								3587,
								3579,
								3580,
								3581,
								3582,
								3583,
								3584,
								3585
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3578,
									"name": "FilterableOrderLineItemTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3588,
					"name": "FilterableOrderShippingMethodTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3596,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3588,
											"name": "FilterableOrderShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3588,
													"name": "FilterableOrderShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3597,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3588,
											"name": "FilterableOrderShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3588,
													"name": "FilterableOrderShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3589,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3590,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3591,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3592,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3593,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3594,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3595,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3563,
								"name": "FilterableOrderShippingMethodProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3596,
								3597,
								3589,
								3590,
								3591,
								3592,
								3593,
								3594,
								3595
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3588,
									"name": "FilterableOrderShippingMethodTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3598,
					"name": "FilterableOrderChangeProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3606,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3598,
											"name": "FilterableOrderChangeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3598,
													"name": "FilterableOrderChangeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3607,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3598,
											"name": "FilterableOrderChangeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3598,
													"name": "FilterableOrderChangeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3599,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3600,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3601,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3602,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3603,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3604,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3605,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3606,
								3607,
								3599,
								3600,
								3601,
								3602,
								3603,
								3604,
								3605
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3598,
									"name": "FilterableOrderChangeProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3608,
					"name": "FilterableOrderChangeActionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3613,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3608,
											"name": "FilterableOrderChangeActionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3608,
													"name": "FilterableOrderChangeActionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3614,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3608,
											"name": "FilterableOrderChangeActionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3608,
													"name": "FilterableOrderChangeActionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3609,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3610,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3611,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3612,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3613,
								3614,
								3609,
								3610,
								3611,
								3612
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3608,
									"name": "FilterableOrderChangeActionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3615,
					"name": "FilterableOrderTransactionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 3621,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3615,
											"name": "FilterableOrderTransactionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3615,
													"name": "FilterableOrderTransactionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 3622,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 3615,
											"name": "FilterableOrderTransactionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3615,
													"name": "FilterableOrderTransactionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 3616,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3617,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3618,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3619,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 3620,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3621,
								3622,
								3616,
								3617,
								3618,
								3619,
								3620
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3615,
									"name": "FilterableOrderTransactionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3623,
					"name": "UpsertOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 3624,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3625,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3626,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3627,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3628,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3629,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3630,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3631,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3632,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3633,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3634,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3635,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3624,
								3625,
								3626,
								3627,
								3628,
								3629,
								3630,
								3631,
								3632,
								3633,
								3634,
								3635
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3636,
							"name": "UpdateOrderAddressDTO"
						},
						{
							"type": "reference",
							"target": 3650,
							"name": "CreateOrderAddressDTO"
						}
					]
				},
				{
					"id": 3636,
					"name": "UpdateOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 3638,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3624,
								"name": "UpsertOrderAddressDTO.customer_id"
							}
						},
						{
							"id": 3639,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3625,
								"name": "UpsertOrderAddressDTO.company"
							}
						},
						{
							"id": 3640,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3626,
								"name": "UpsertOrderAddressDTO.first_name"
							}
						},
						{
							"id": 3641,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3627,
								"name": "UpsertOrderAddressDTO.last_name"
							}
						},
						{
							"id": 3642,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3628,
								"name": "UpsertOrderAddressDTO.address_1"
							}
						},
						{
							"id": 3643,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3629,
								"name": "UpsertOrderAddressDTO.address_2"
							}
						},
						{
							"id": 3644,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3630,
								"name": "UpsertOrderAddressDTO.city"
							}
						},
						{
							"id": 3645,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3631,
								"name": "UpsertOrderAddressDTO.country_code"
							}
						},
						{
							"id": 3646,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3632,
								"name": "UpsertOrderAddressDTO.province"
							}
						},
						{
							"id": 3647,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3633,
								"name": "UpsertOrderAddressDTO.postal_code"
							}
						},
						{
							"id": 3648,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3634,
								"name": "UpsertOrderAddressDTO.phone"
							}
						},
						{
							"id": 3649,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3635,
								"name": "UpsertOrderAddressDTO.metadata"
							}
						},
						{
							"id": 3637,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3638,
								3639,
								3640,
								3641,
								3642,
								3643,
								3644,
								3645,
								3646,
								3647,
								3648,
								3649,
								3637
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3623,
							"name": "UpsertOrderAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3650,
					"name": "CreateOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 3651,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3624,
								"name": "UpsertOrderAddressDTO.customer_id"
							}
						},
						{
							"id": 3652,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3625,
								"name": "UpsertOrderAddressDTO.company"
							}
						},
						{
							"id": 3653,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3626,
								"name": "UpsertOrderAddressDTO.first_name"
							}
						},
						{
							"id": 3654,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3627,
								"name": "UpsertOrderAddressDTO.last_name"
							}
						},
						{
							"id": 3655,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3628,
								"name": "UpsertOrderAddressDTO.address_1"
							}
						},
						{
							"id": 3656,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3629,
								"name": "UpsertOrderAddressDTO.address_2"
							}
						},
						{
							"id": 3657,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3630,
								"name": "UpsertOrderAddressDTO.city"
							}
						},
						{
							"id": 3658,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3631,
								"name": "UpsertOrderAddressDTO.country_code"
							}
						},
						{
							"id": 3659,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3632,
								"name": "UpsertOrderAddressDTO.province"
							}
						},
						{
							"id": 3660,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3633,
								"name": "UpsertOrderAddressDTO.postal_code"
							}
						},
						{
							"id": 3661,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3634,
								"name": "UpsertOrderAddressDTO.phone"
							}
						},
						{
							"id": 3662,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3635,
								"name": "UpsertOrderAddressDTO.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3651,
								3652,
								3653,
								3654,
								3655,
								3656,
								3657,
								3658,
								3659,
								3660,
								3661,
								3662
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3623,
							"name": "UpsertOrderAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3663,
					"name": "CreateOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER START"
							}
						]
					},
					"children": [
						{
							"id": 3664,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3665,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3666,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3667,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3668,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3669,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3670,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3671,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3672,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 3636,
										"name": "UpdateOrderAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 3650,
										"name": "CreateOrderAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3673,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 3636,
										"name": "UpdateOrderAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 3650,
										"name": "CreateOrderAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 3674,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3675,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3764,
									"name": "CreateOrderLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3676,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3843,
									"name": "CreateOrderShippingMethodDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3677,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3920,
									"name": "CreateOrderTransactionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3678,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3664,
								3665,
								3666,
								3667,
								3668,
								3669,
								3670,
								3671,
								3672,
								3673,
								3674,
								3675,
								3676,
								3677,
								3678
							]
						}
					]
				},
				{
					"id": 3679,
					"name": "UpdateOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3680,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3681,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3682,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3683,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3684,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3685,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3686,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3687,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3688,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3680,
								3681,
								3682,
								3683,
								3684,
								3685,
								3686,
								3687,
								3688
							]
						}
					]
				},
				{
					"id": 3689,
					"name": "CreateOrderAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 3690,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3691,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3692,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3693,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3694,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3690,
								3691,
								3692,
								3693,
								3694
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3702,
							"name": "CreateOrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 3695,
					"name": "UpdateOrderAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3696,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3697,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3698,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3699,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3700,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3701,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3696,
								3697,
								3698,
								3699,
								3700,
								3701
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3709,
							"name": "UpdateOrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 3702,
					"name": "CreateOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 3704,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3690,
								"name": "CreateOrderAdjustmentDTO.code"
							}
						},
						{
							"id": 3705,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3691,
								"name": "CreateOrderAdjustmentDTO.amount"
							}
						},
						{
							"id": 3706,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3692,
								"name": "CreateOrderAdjustmentDTO.description"
							}
						},
						{
							"id": 3707,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3693,
								"name": "CreateOrderAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 3708,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3694,
								"name": "CreateOrderAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 3703,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3704,
								3705,
								3706,
								3707,
								3708,
								3703
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3689,
							"name": "CreateOrderAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3709,
					"name": "UpdateOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3711,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3696,
								"name": "UpdateOrderAdjustmentDTO.id"
							}
						},
						{
							"id": 3712,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3697,
								"name": "UpdateOrderAdjustmentDTO.code"
							}
						},
						{
							"id": 3713,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3698,
								"name": "UpdateOrderAdjustmentDTO.amount"
							}
						},
						{
							"id": 3714,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3699,
								"name": "UpdateOrderAdjustmentDTO.description"
							}
						},
						{
							"id": 3715,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3700,
								"name": "UpdateOrderAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 3716,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3701,
								"name": "UpdateOrderAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 3710,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3711,
								3712,
								3713,
								3714,
								3715,
								3716,
								3710
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3695,
							"name": "UpdateOrderAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3717,
					"name": "UpsertOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3718,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3719,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3720,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3721,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3722,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3723,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3724,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3718,
								3719,
								3720,
								3721,
								3722,
								3723,
								3724
							]
						}
					]
				},
				{
					"id": 3725,
					"name": "CreateOrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 3726,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3727,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3728,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3729,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3730,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3726,
								3727,
								3728,
								3729,
								3730
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3738,
							"name": "CreateOrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 3751,
							"name": "CreateOrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 3731,
					"name": "UpdateOrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3732,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3733,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3734,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3735,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3736,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3737,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3732,
								3733,
								3734,
								3735,
								3736,
								3737
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3744,
							"name": "UpdateOrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 3757,
							"name": "UpdateOrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 3738,
					"name": "CreateOrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 3739,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3726,
								"name": "CreateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 3740,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3727,
								"name": "CreateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3741,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3728,
								"name": "CreateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 3742,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3729,
								"name": "CreateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3743,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3730,
								"name": "CreateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3739,
								3740,
								3741,
								3742,
								3743
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3725,
							"name": "CreateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3744,
					"name": "UpdateOrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3745,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3732,
								"name": "UpdateOrderTaxLineDTO.id"
							}
						},
						{
							"id": 3746,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3733,
								"name": "UpdateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 3747,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3734,
								"name": "UpdateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3748,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3735,
								"name": "UpdateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 3749,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3736,
								"name": "UpdateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3750,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3737,
								"name": "UpdateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3745,
								3746,
								3747,
								3748,
								3749,
								3750
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3731,
							"name": "UpdateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3751,
					"name": "CreateOrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 3752,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3726,
								"name": "CreateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 3753,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3727,
								"name": "CreateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3754,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3728,
								"name": "CreateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 3755,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3729,
								"name": "CreateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3756,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3730,
								"name": "CreateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3752,
								3753,
								3754,
								3755,
								3756
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3725,
							"name": "CreateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3757,
					"name": "UpdateOrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3758,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3732,
								"name": "UpdateOrderTaxLineDTO.id"
							}
						},
						{
							"id": 3759,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3733,
								"name": "UpdateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 3760,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3734,
								"name": "UpdateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 3761,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3735,
								"name": "UpdateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 3762,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3736,
								"name": "UpdateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 3763,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3737,
								"name": "UpdateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3758,
								3759,
								3760,
								3761,
								3762,
								3763
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3731,
							"name": "UpdateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3764,
					"name": "CreateOrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 3765,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3766,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3767,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3768,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3769,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3770,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3771,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3772,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3773,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3774,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3775,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3776,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3777,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3778,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3779,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3780,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3781,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3782,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3783,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3784,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3785,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3786,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3787,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3725,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3788,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3689,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3765,
								3766,
								3767,
								3768,
								3769,
								3770,
								3771,
								3772,
								3773,
								3774,
								3775,
								3776,
								3777,
								3778,
								3779,
								3780,
								3781,
								3782,
								3783,
								3784,
								3785,
								3786,
								3787,
								3788
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3789,
							"name": "CreateOrderLineItemForOrderDTO"
						}
					]
				},
				{
					"id": 3789,
					"name": "CreateOrderLineItemForOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 3791,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3765,
								"name": "CreateOrderLineItemDTO.title"
							}
						},
						{
							"id": 3792,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3766,
								"name": "CreateOrderLineItemDTO.subtitle"
							}
						},
						{
							"id": 3793,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3767,
								"name": "CreateOrderLineItemDTO.thumbnail"
							}
						},
						{
							"id": 3794,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3769,
								"name": "CreateOrderLineItemDTO.quantity"
							}
						},
						{
							"id": 3795,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3770,
								"name": "CreateOrderLineItemDTO.product_id"
							}
						},
						{
							"id": 3796,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3771,
								"name": "CreateOrderLineItemDTO.product_title"
							}
						},
						{
							"id": 3797,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3772,
								"name": "CreateOrderLineItemDTO.product_description"
							}
						},
						{
							"id": 3798,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3773,
								"name": "CreateOrderLineItemDTO.product_subtitle"
							}
						},
						{
							"id": 3799,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3774,
								"name": "CreateOrderLineItemDTO.product_type"
							}
						},
						{
							"id": 3800,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3775,
								"name": "CreateOrderLineItemDTO.product_collection"
							}
						},
						{
							"id": 3801,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3776,
								"name": "CreateOrderLineItemDTO.product_handle"
							}
						},
						{
							"id": 3802,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3777,
								"name": "CreateOrderLineItemDTO.variant_id"
							}
						},
						{
							"id": 3803,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3778,
								"name": "CreateOrderLineItemDTO.variant_sku"
							}
						},
						{
							"id": 3804,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3779,
								"name": "CreateOrderLineItemDTO.variant_barcode"
							}
						},
						{
							"id": 3805,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "CreateOrderLineItemDTO.variant_title"
							}
						},
						{
							"id": 3806,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3781,
								"name": "CreateOrderLineItemDTO.variant_option_values"
							}
						},
						{
							"id": 3807,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3782,
								"name": "CreateOrderLineItemDTO.requires_shipping"
							}
						},
						{
							"id": 3808,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "CreateOrderLineItemDTO.is_discountable"
							}
						},
						{
							"id": 3809,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3784,
								"name": "CreateOrderLineItemDTO.is_tax_inclusive"
							}
						},
						{
							"id": 3810,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3785,
								"name": "CreateOrderLineItemDTO.compare_at_unit_price"
							}
						},
						{
							"id": 3811,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3786,
								"name": "CreateOrderLineItemDTO.unit_price"
							}
						},
						{
							"id": 3812,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3725,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3787,
								"name": "CreateOrderLineItemDTO.tax_lines"
							}
						},
						{
							"id": 3813,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3689,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "CreateOrderLineItemDTO.adjustments"
							}
						},
						{
							"id": 3790,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "CreateOrderLineItemDTO.order_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3791,
								3792,
								3793,
								3794,
								3795,
								3796,
								3797,
								3798,
								3799,
								3800,
								3801,
								3802,
								3803,
								3804,
								3805,
								3806,
								3807,
								3808,
								3809,
								3810,
								3811,
								3812,
								3813,
								3790
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3764,
							"name": "CreateOrderLineItemDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 3814,
					"name": "UpdateOrderLineItemWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3815,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3414,
										"name": "OrderLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 3816,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3817,
										"name": "UpdateOrderLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3815,
								3816
							]
						}
					]
				},
				{
					"id": 3817,
					"name": "UpdateOrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3826,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.subtitle"
							}
						},
						{
							"id": 3827,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.thumbnail"
							}
						},
						{
							"id": 3842,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.order_id"
							}
						},
						{
							"id": 3825,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_id"
							}
						},
						{
							"id": 3828,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_title"
							}
						},
						{
							"id": 3829,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_description"
							}
						},
						{
							"id": 3830,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_subtitle"
							}
						},
						{
							"id": 3831,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_type"
							}
						},
						{
							"id": 3832,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_collection"
							}
						},
						{
							"id": 3833,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_handle"
							}
						},
						{
							"id": 3824,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_id"
							}
						},
						{
							"id": 3834,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_sku"
							}
						},
						{
							"id": 3835,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_barcode"
							}
						},
						{
							"id": 3836,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_title"
							}
						},
						{
							"id": 3837,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_option_values"
							}
						},
						{
							"id": 3838,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.requires_shipping"
							}
						},
						{
							"id": 3839,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_discountable"
							}
						},
						{
							"id": 3840,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_tax_inclusive"
							}
						},
						{
							"id": 3841,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.compare_at_unit_price"
							}
						},
						{
							"id": 3818,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3819,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3820,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3821,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3822,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3725,
											"name": "CreateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3731,
											"name": "UpdateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 3823,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3689,
											"name": "CreateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3695,
											"name": "UpdateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3826,
								3827,
								3842,
								3825,
								3828,
								3829,
								3830,
								3831,
								3832,
								3833,
								3824,
								3834,
								3835,
								3836,
								3837,
								3838,
								3839,
								3840,
								3841,
								3818,
								3819,
								3820,
								3821,
								3822,
								3823
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3764,
									"name": "CreateOrderLineItemDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "tax_lines"
										},
										{
											"type": "literal",
											"value": "adjustments"
										},
										{
											"type": "literal",
											"value": "title"
										},
										{
											"type": "literal",
											"value": "quantity"
										},
										{
											"type": "literal",
											"value": "unit_price"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3843,
					"name": "CreateOrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SHIPPING METHODS START"
							}
						]
					},
					"children": [
						{
							"id": 3844,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3845,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3846,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3847,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3848,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3849,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3725,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3850,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3689,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3844,
								3845,
								3846,
								3847,
								3848,
								3849,
								3850
							]
						}
					]
				},
				{
					"id": 3851,
					"name": "UpdateOrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3852,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3853,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3854,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3855,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3856,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3857,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3725,
											"name": "CreateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3731,
											"name": "UpdateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 3858,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3689,
											"name": "CreateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3695,
											"name": "UpdateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3852,
								3853,
								3854,
								3855,
								3856,
								3857,
								3858
							]
						}
					]
				},
				{
					"id": 3859,
					"name": "CreateOrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3860,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3861,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3862,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3863,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3864,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3865,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3860,
								3861,
								3862,
								3863,
								3864,
								3865
							]
						}
					]
				},
				{
					"id": 3866,
					"name": "UpdateOrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3867,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3868,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3869,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3870,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3871,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3872,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3867,
								3868,
								3869,
								3870,
								3871,
								3872
							]
						}
					]
				},
				{
					"id": 3873,
					"name": "CreateOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER CHANGE START"
							}
						]
					},
					"children": [
						{
							"id": 3874,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3875,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3876,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3877,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3878,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3879,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3874,
								3875,
								3876,
								3877,
								3878,
								3879
							]
						}
					]
				},
				{
					"id": 3880,
					"name": "UpdateOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3881,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3882,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3883,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3884,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3885,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3886,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3887,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3888,
							"name": "confirmed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3889,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3890,
							"name": "declined_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3891,
							"name": "declined_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 3892,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3893,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3881,
								3882,
								3883,
								3884,
								3885,
								3886,
								3887,
								3888,
								3889,
								3890,
								3891,
								3892,
								3893
							]
						}
					]
				},
				{
					"id": 3894,
					"name": "CancelOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3895,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3896,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3897,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3895,
								3896,
								3897
							]
						}
					]
				},
				{
					"id": 3898,
					"name": "DeclineOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3899,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3900,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3901,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3899,
								3900,
								3901
							]
						}
					]
				},
				{
					"id": 3902,
					"name": "ConfirmOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3903,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3904,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3905,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3903,
								3904,
								3905
							]
						}
					]
				},
				{
					"id": 3906,
					"name": "CreateOrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER CHANGE ACTION START"
							}
						]
					},
					"children": [
						{
							"id": 3907,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3908,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3909,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3910,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3911,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3912,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3907,
								3908,
								3909,
								3910,
								3911,
								3912
							]
						}
					]
				},
				{
					"id": 3913,
					"name": "UpdateOrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3914,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3915,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3916,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3917,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3918,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3919,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3914,
								3915,
								3916,
								3917,
								3918,
								3919
							]
						}
					]
				},
				{
					"id": 3920,
					"name": "CreateOrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER TRANSACTION START"
							}
						]
					},
					"children": [
						{
							"id": 3921,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3922,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3923,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3924,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3925,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3926,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3921,
								3922,
								3923,
								3924,
								3925,
								3926
							]
						}
					]
				},
				{
					"id": 3927,
					"name": "UpdateOrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3928,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3929,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3930,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3931,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3932,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3933,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3928,
								3929,
								3930,
								3931,
								3932,
								3933
							]
						}
					]
				},
				{
					"id": 3934,
					"name": "UpdateOrderItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER DETAIL START"
							}
						]
					},
					"children": [
						{
							"id": 3935,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3936,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3937,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3938,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3939,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3940,
							"name": "fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3941,
							"name": "return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3942,
							"name": "return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3943,
							"name": "return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3944,
							"name": "written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6553,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3945,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3935,
								3936,
								3937,
								3938,
								3939,
								3940,
								3941,
								3942,
								3943,
								3944,
								3945
							]
						}
					]
				},
				{
					"id": 3946,
					"name": "UpdateOrderItemWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3947,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3454,
										"name": "OrderItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 3948,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3934,
										"name": "UpdateOrderItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3947,
								3948
							]
						}
					]
				},
				{
					"id": 3949,
					"name": "IOrderModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3950,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3951,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3952,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3953,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3475,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3954,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3475,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3955,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3956,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3957,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 3534,
												"name": "FilterableOrderProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3958,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3475,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3959,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3475,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3960,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3961,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3962,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 3534,
												"name": "FilterableOrderProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3963,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3475,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3964,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3475,
															"name": "OrderDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3965,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3966,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3967,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3663,
													"name": "CreateOrderDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 3968,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3475,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3969,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3970,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3663,
												"name": "CreateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3971,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3475,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3972,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3973,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3974,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3679,
													"name": "UpdateOrderDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3475,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3975,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3976,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3977,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3679,
												"name": "UpdateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3978,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3475,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3979,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3980,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3475,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 3981,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3679,
												"name": "UpdateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3982,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3475,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3983,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3984,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3985,
											"name": "orderIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3986,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3987,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3988,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3989,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3990,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3991,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3992,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 3543,
												"name": "FilterableOrderAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3993,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3367,
														"name": "OrderAddressDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 3994,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3367,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3995,
							"name": "createAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 3996,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 3997,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3650,
													"name": "CreateOrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 3998,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3367,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 3999,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4000,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3650,
												"name": "CreateOrderAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4001,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3367,
												"name": "OrderAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4002,
							"name": "updateAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4003,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4004,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3636,
													"name": "UpdateOrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4005,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3367,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4006,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4007,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3636,
												"name": "UpdateOrderAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4008,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3367,
												"name": "OrderAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4009,
							"name": "deleteAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4010,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4011,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4012,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4013,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4014,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4015,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4016,
							"name": "retrieveLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4017,
									"name": "retrieveLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4018,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4019,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3414,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4020,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3414,
												"name": "OrderLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4021,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4022,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4023,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3547,
												"name": "FilterableOrderLineItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4024,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3414,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4025,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4026,
							"name": "addLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4027,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4028,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3789,
												"name": "CreateOrderLineItemForOrderDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4029,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4030,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3789,
													"name": "CreateOrderLineItemForOrderDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4031,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4032,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4033,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3764,
													"name": "CreateOrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4034,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4035,
							"name": "updateLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4036,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4037,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3814,
													"name": "UpdateOrderLineItemWithSelectorDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4038,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4039,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3414,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4040,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3817,
														"name": "UpdateOrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4041,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3414,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4042,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4043,
											"name": "lineId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4044,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3817,
														"name": "UpdateOrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4045,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3414,
												"name": "OrderLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4046,
							"name": "removeLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4047,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4048,
											"name": "itemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4049,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4050,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4051,
											"name": "itemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4052,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4053,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4054,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3414,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4055,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4056,
							"name": "updateOrderItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4057,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4058,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3454,
														"name": "OrderItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4059,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3934,
												"name": "UpdateOrderItemDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4060,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3454,
													"name": "OrderItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4061,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4062,
											"name": "orderDetailId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4063,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3934,
														"name": "UpdateOrderItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4064,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3454,
												"name": "OrderItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4065,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4066,
											"name": "orderDetailIdOrDataOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 3454,
																"name": "OrderItemDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3946,
															"name": "UpdateOrderItemWithSelectorDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 4067,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3934,
														"name": "UpdateOrderItemDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 3934,
																"name": "UpdateOrderItemDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 4068,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3454,
														"name": "OrderItemDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3454,
															"name": "OrderItemDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4069,
							"name": "listShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4070,
									"name": "listShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4071,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3563,
												"name": "FilterableOrderShippingMethodProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4072,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3383,
														"name": "OrderShippingMethodDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4073,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3383,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4074,
							"name": "addShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4075,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4076,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3843,
												"name": "CreateOrderShippingMethodDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3383,
												"name": "OrderShippingMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4077,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4078,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3843,
													"name": "CreateOrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3383,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4079,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4080,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4081,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3843,
													"name": "CreateOrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4082,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3383,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4083,
							"name": "removeShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4084,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4085,
											"name": "methodIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4086,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4087,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4088,
											"name": "methodIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4089,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4090,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4091,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3383,
														"name": "OrderShippingMethodDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4092,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4093,
							"name": "listLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4094,
									"name": "listLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4095,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3555,
												"name": "FilterableOrderLineItemAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4096,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3324,
														"name": "OrderLineItemAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4097,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3324,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4098,
							"name": "addLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4099,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4100,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3689,
													"name": "CreateOrderAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3324,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4101,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4102,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3689,
												"name": "CreateOrderAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3324,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4103,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4104,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4105,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3689,
													"name": "CreateOrderAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3324,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4106,
							"name": "setLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4107,
									"name": "setLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4108,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4109,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3717,
													"name": "UpsertOrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4110,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3324,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4111,
							"name": "removeLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4112,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4113,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4114,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4115,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4116,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4117,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4118,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4119,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3324,
														"name": "OrderLineItemAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4120,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4121,
							"name": "listShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4122,
									"name": "listShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4123,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3570,
												"name": "FilterableOrderShippingMethodAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4124,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3312,
														"name": "OrderShippingMethodAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4125,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3312,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4126,
							"name": "addShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4127,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4128,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3859,
													"name": "CreateOrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3312,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4129,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4130,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3859,
												"name": "CreateOrderShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3312,
												"name": "OrderShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4131,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4132,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4133,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3859,
													"name": "CreateOrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4134,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3312,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4135,
							"name": "setShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4136,
									"name": "setShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4137,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4138,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 3859,
															"name": "CreateOrderShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 3866,
															"name": "UpdateOrderShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 4139,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3312,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4140,
							"name": "removeShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4141,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4142,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4143,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4144,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4145,
											"name": "adjustmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4146,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4147,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4148,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3312,
														"name": "OrderShippingMethodAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 4149,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4150,
							"name": "listLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4151,
									"name": "listLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4152,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3578,
												"name": "FilterableOrderLineItemTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4153,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3356,
														"name": "OrderLineItemTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4154,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3356,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4155,
							"name": "addLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4156,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4157,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3751,
													"name": "CreateOrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3356,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4158,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4159,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3751,
												"name": "CreateOrderLineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3356,
												"name": "OrderLineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4160,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4161,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4162,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3751,
														"name": "CreateOrderLineItemTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3751,
															"name": "CreateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 4163,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3356,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4164,
							"name": "setLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4165,
									"name": "setLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4166,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4167,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 3751,
															"name": "CreateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 3757,
															"name": "UpdateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 4168,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3356,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4169,
							"name": "removeLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4170,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4171,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4172,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4173,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4174,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4175,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4176,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4177,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3578,
												"name": "FilterableOrderLineItemTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4178,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4179,
							"name": "listShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4180,
									"name": "listShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4181,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3588,
												"name": "FilterableOrderShippingMethodTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4182,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3345,
														"name": "OrderShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4183,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3345,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4184,
							"name": "addShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4185,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4186,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3738,
													"name": "CreateOrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3345,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4187,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4188,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3738,
												"name": "CreateOrderShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3345,
												"name": "OrderShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4189,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4190,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4191,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3738,
														"name": "CreateOrderShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3738,
															"name": "CreateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 4192,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3345,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4193,
							"name": "setShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4194,
									"name": "setShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4195,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4196,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 3738,
															"name": "CreateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 3744,
															"name": "UpdateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 4197,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3345,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4198,
							"name": "removeShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4199,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4200,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4201,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4202,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4203,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4204,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4205,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4206,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3588,
												"name": "FilterableOrderShippingMethodTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4207,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4208,
							"name": "createOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4209,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4210,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3873,
												"name": "CreateOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4211,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3492,
												"name": "OrderChangeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4212,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4213,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3873,
													"name": "CreateOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4214,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3492,
													"name": "OrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4215,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4216,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3873,
														"name": "CreateOrderChangeDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3873,
															"name": "CreateOrderChangeDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 4217,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 3492,
														"name": "OrderChangeDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 3492,
															"name": "OrderChangeDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4218,
							"name": "cancelOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4219,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4220,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4221,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4222,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4223,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4224,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4225,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4226,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3894,
												"name": "CancelOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4227,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4228,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4229,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3894,
													"name": "CancelOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4230,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4231,
							"name": "confirmOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4232,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4233,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4234,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4235,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4236,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4237,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4238,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4239,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3902,
												"name": "ConfirmOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4240,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4241,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4242,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3902,
													"name": "ConfirmOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4243,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4244,
							"name": "declineOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4245,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4246,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4247,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4248,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4249,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4250,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4251,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4252,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3898,
												"name": "DeclineOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4253,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4254,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4255,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3898,
													"name": "DeclineOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4256,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4257,
							"name": "applyPendingOrderActions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4258,
									"name": "applyPendingOrderActions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4259,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 4260,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 4261,
							"name": "addOrderAction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4262,
									"name": "addOrderAction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4263,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4264,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								3950,
								3955,
								3960,
								3965,
								3972,
								3983,
								3990,
								3995,
								4002,
								4009,
								4016,
								4021,
								4026,
								4035,
								4046,
								4056,
								4069,
								4074,
								4083,
								4093,
								4098,
								4106,
								4111,
								4121,
								4126,
								4135,
								4140,
								4150,
								4155,
								4164,
								4169,
								4179,
								4184,
								4193,
								4198,
								4208,
								4218,
								4231,
								4244,
								4257,
								4261
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						3302,
						3312,
						3324,
						3336,
						3345,
						3356,
						3367,
						3383,
						3402,
						3414,
						3454,
						3475,
						3492,
						3510,
						3523,
						3534,
						3543,
						3547,
						3555,
						3563,
						3570,
						3578,
						3588,
						3598,
						3608,
						3615,
						3623,
						3636,
						3650,
						3663,
						3679,
						3689,
						3695,
						3702,
						3709,
						3717,
						3725,
						3731,
						3738,
						3744,
						3751,
						3757,
						3764,
						3789,
						3814,
						3817,
						3843,
						3851,
						3859,
						3866,
						3873,
						3880,
						3894,
						3898,
						3902,
						3906,
						3913,
						3920,
						3927,
						3934,
						3946,
						3949
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						3282
					]
				}
			]
		},
		{
			"id": 5646,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's status."
					}
				]
			},
			"children": [
				{
					"id": 5647,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection isn't paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 5648,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is awaiting payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 5649,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 5650,
					"name": "PARTIALLY_AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the payments in the payment collection are authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_authorized"
					}
				},
				{
					"id": 5651,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						5647,
						5648,
						5649,
						5650,
						5651
					]
				}
			]
		},
		{
			"id": 5652,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a payment session."
					}
				]
			},
			"children": [
				{
					"id": 5653,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 5654,
					"name": "PENDING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is pending."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 5655,
					"name": "REQUIRES_MORE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment requires an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_more"
					}
				},
				{
					"id": 5656,
					"name": "ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error occurred while processing the payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 5657,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						5653,
						5654,
						5655,
						5656,
						5657
					]
				}
			]
		},
		{
			"id": 5658,
			"name": "PaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection details."
					}
				]
			},
			"children": [
				{
					"id": 5659,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Collection"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5660,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the payments/sessions associated with payment collection"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5661,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5662,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5663,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount authorized within associated payment sessions"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5664,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount refunded from associated payments"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5665,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was completed"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5666,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was created"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5667,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was updated"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5668,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5669,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment collection"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5646,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5670,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment provider for the payments"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5769,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5671,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment sessions"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5758,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5672,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payments"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5712,
							"name": "PaymentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5659,
						5660,
						5661,
						5662,
						5663,
						5664,
						5665,
						5666,
						5667,
						5668,
						5669,
						5670,
						5671,
						5672
					]
				}
			]
		},
		{
			"id": 5673,
			"name": "FilterablePaymentCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment collection."
					}
				]
			},
			"children": [
				{
					"id": 5678,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5658,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5679,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5658,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5674,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5675,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by associated region's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5676,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by created date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5677,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by updated date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5678,
						5679,
						5674,
						5675,
						5676,
						5677
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5658,
							"name": "PaymentCollectionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5680,
			"name": "FilterablePaymentSessionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 5690,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5758,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5758,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5691,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5758,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5758,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5681,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5682,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5683,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5684,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5685,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5686,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5687,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5688,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5689,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5690,
						5691,
						5681,
						5682,
						5683,
						5684,
						5685,
						5686,
						5687,
						5688,
						5689
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5758,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5692,
			"name": "FilterableCaptureProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 5700,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5746,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5746,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5701,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5746,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5746,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5693,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5694,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5695,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5696,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5697,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5698,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5699,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5700,
						5701,
						5693,
						5694,
						5695,
						5696,
						5697,
						5698,
						5699
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5746,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5702,
			"name": "FilterableRefundProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 5710,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5752,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5752,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5711,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5752,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5752,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5703,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5704,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5705,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5706,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5707,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5708,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5709,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5710,
						5711,
						5703,
						5704,
						5705,
						5706,
						5707,
						5708,
						5709
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5752,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5712,
			"name": "PaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5713,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5714,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5715,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The authorized amount of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5716,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment currency"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5717,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of payment provider"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5718,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5719,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5720,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order edit's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5721,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5722,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment provider data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5723,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was created"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5724,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was updated"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5725,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was captured"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5726,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was canceled"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5727,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5728,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5729,
					"name": "captures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment captures"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5746,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5730,
					"name": "refunds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refunds of the payment"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5752,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5731,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection the payment is associated with"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5658,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5732,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session from which the payment is created"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5758,
						"name": "PaymentSessionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5713,
						5714,
						5715,
						5716,
						5717,
						5718,
						5719,
						5720,
						5721,
						5722,
						5723,
						5724,
						5725,
						5726,
						5727,
						5728,
						5729,
						5730,
						5731,
						5732
					]
				}
			]
		},
		{
			"id": 5733,
			"name": "FilterablePaymentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 5744,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5733,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5733,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5745,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5733,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5733,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5734,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5735,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5736,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5737,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5738,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5739,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 5740,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5741,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5742,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5743,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5744,
						5745,
						5734,
						5735,
						5736,
						5737,
						5738,
						5739,
						5740,
						5741,
						5742,
						5743
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5733,
							"name": "FilterablePaymentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5746,
			"name": "CaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture details."
					}
				]
			},
			"children": [
				{
					"id": 5747,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Capture"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5748,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Captured amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5749,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the capture."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 5750,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who the capture was created by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5751,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5712,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5747,
						5748,
						5749,
						5750,
						5751
					]
				}
			]
		},
		{
			"id": 5752,
			"name": "RefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund details."
					}
				]
			},
			"children": [
				{
					"id": 5753,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Refund"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5754,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Refunded amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5755,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 5756,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5757,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5712,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5753,
						5754,
						5755,
						5756,
						5757
					]
				}
			]
		},
		{
			"id": 5758,
			"name": "PaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5759,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Session"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5760,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5761,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment session currency"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5762,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of payment provider"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5763,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment provider data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5764,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment session context"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5765,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment session"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5652,
						"name": "PaymentSessionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5766,
					"name": "authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the session was authorized"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 5767,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection the session is associated with"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5658,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5768,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment created from the session"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5712,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5759,
						5760,
						5761,
						5762,
						5763,
						5764,
						5765,
						5766,
						5767,
						5768
					]
				}
			]
		},
		{
			"id": 5769,
			"name": "PaymentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment provider details."
					}
				]
			},
			"children": [
				{
					"id": 5770,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5771,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the payment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5770,
						5771
					]
				}
			]
		},
		{
			"id": 5772,
			"name": "FilterablePaymentProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 5775,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5769,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5769,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 5776,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 5769,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 5769,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 5773,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5774,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by enabled status"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5775,
						5776,
						5773,
						5774
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 5769,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 5777,
			"name": "CreatePaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection to be created."
					}
				]
			},
			"children": [
				{
					"id": 5778,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5779,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5780,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5781,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5778,
						5779,
						5780,
						5781
					]
				}
			]
		},
		{
			"id": 5782,
			"name": "UpdatePaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 5784,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.region_id"
					}
				},
				{
					"id": 5785,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.currency_code"
					}
				},
				{
					"id": 5786,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.amount"
					}
				},
				{
					"id": 5787,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.metadata"
					}
				},
				{
					"id": 5783,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5784,
						5785,
						5786,
						5787,
						5783
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 5777,
							"name": "CreatePaymentCollectionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 5788,
			"name": "UpsertPaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5789,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5790,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5791,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5792,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5793,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5789,
						5790,
						5791,
						5792,
						5793
					]
				}
			]
		},
		{
			"id": 5794,
			"name": "PaymentCollectionUpdatableFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 5795,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5796,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5797,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5798,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5795,
						5796,
						5797,
						5798
					]
				}
			]
		},
		{
			"id": 5799,
			"name": "CreatePaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment to be created."
					}
				]
			},
			"children": [
				{
					"id": 5800,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5801,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5802,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5803,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5804,
					"name": "payment_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment session's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5805,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment collection's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5806,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5807,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5808,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order edit's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5809,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5800,
						5801,
						5802,
						5803,
						5804,
						5805,
						5806,
						5807,
						5808,
						5809
					]
				}
			]
		},
		{
			"id": 5810,
			"name": "UpdatePaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment."
					}
				]
			},
			"children": [
				{
					"id": 5811,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5812,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5813,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5814,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order edit's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5815,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5811,
						5812,
						5813,
						5814,
						5815
					]
				}
			]
		},
		{
			"id": 5816,
			"name": "CreateCaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture to be created."
					}
				]
			},
			"children": [
				{
					"id": 5817,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the capture."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5818,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5819,
					"name": "captured_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The captured by of the capture."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5817,
						5818,
						5819
					]
				}
			]
		},
		{
			"id": 5820,
			"name": "CreateRefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund to be created."
					}
				]
			},
			"children": [
				{
					"id": 5821,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5822,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5823,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created by of the refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5821,
						5822,
						5823
					]
				}
			]
		},
		{
			"id": 5824,
			"name": "CreatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session to be created."
					}
				]
			},
			"children": [
				{
					"id": 5825,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5826,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The selected currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5827,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5828,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the payment session's "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5829,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's context."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5853,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5825,
						5826,
						5827,
						5828,
						5829
					]
				}
			]
		},
		{
			"id": 5830,
			"name": "UpdatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a payment session."
					}
				]
			},
			"children": [
				{
					"id": 5831,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5832,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the payment session's "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5833,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The selected currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5834,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5835,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's context."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5853,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5831,
						5832,
						5833,
						5834,
						5835
					]
				}
			]
		},
		{
			"id": 5836,
			"name": "CreatePaymentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment provider to be created."
					}
				]
			},
			"children": [
				{
					"id": 5837,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5838,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5837,
						5838
					]
				}
			]
		},
		{
			"id": 5839,
			"name": "ProviderWebhookPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Webhook"
					}
				]
			},
			"children": [
				{
					"id": 5840,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5841,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5842,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5843,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parsed webhook body"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 5844,
									"name": "rawData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Raw request body"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
													"qualifiedName": "__global.Buffer"
												},
												"name": "Buffer",
												"package": "@types/node",
												"qualifiedName": "__global.Buffer"
											}
										]
									}
								},
								{
									"id": 5845,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5843,
										5844,
										5845
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5840,
						5841
					]
				}
			]
		},
		{
			"id": 5846,
			"name": "PaymentAddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 1,
						"name": "AddressDTO",
						"package": "@medusajs/types"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 5847,
			"name": "PaymentCustomerDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 1539,
						"name": "CustomerDTO",
						"package": "@medusajs/types"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 5848,
			"name": "PaymentActions",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Normalized events from payment provider to internal payment module events."
					}
				]
			},
			"children": [
				{
					"id": 5849,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment session has been authorized and there are available funds for capture."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 5850,
					"name": "SUCCESSFUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment was successful and the mount is captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "captured"
					}
				},
				{
					"id": 5851,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment failed."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 5852,
					"name": "NOT_SUPPORTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Received an event that is not processable."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_supported"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						5849,
						5850,
						5851,
						5852
					]
				}
			]
		},
		{
			"id": 5853,
			"name": "PaymentProviderContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A payment's context."
					}
				]
			},
			"children": [
				{
					"id": 5854,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's billing address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 5855,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5856,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource the payment is associated with i.e. the ID of the PaymentSession in Medusa"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5857,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer associated with this payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1539,
								"name": "CustomerDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 5858,
					"name": "extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extra fields specific to the provider session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5854,
						5855,
						5856,
						5857,
						5858
					]
				}
			]
		},
		{
			"id": 5859,
			"name": "CreatePaymentProviderSession",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5860,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5861,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5853,
								"name": "PaymentProviderContext",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5862,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5863,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5861,
								5862,
								5863
							]
						}
					]
				}
			}
		},
		{
			"id": 5864,
			"name": "UpdatePaymentProviderSession",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5865,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5866,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5853,
								"name": "PaymentProviderContext",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5867,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 5868,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5869,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5866,
								5867,
								5868,
								5869
							]
						}
					]
				}
			}
		},
		{
			"id": 5870,
			"name": "PaymentProviderSessionResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response of operations on a payment."
					}
				]
			},
			"children": [
				{
					"id": 5871,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to be stored in the "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field of the Payment Session to be created.\nThe "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field is useful to hold any data required by the third-party provider to process the payment or retrieve its details at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5871
					]
				}
			]
		},
		{
			"id": 5872,
			"name": "PaymentProviderAuthorizeResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5873,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5874,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of the payment, which will be stored in the payment session's "
									},
									{
										"kind": "code",
										"text": "`status`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 5652,
								"name": "PaymentSessionStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5875,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " to be stored in the payment session's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "data"
								},
								"objectType": {
									"type": "reference",
									"target": 5870,
									"name": "PaymentProviderSessionResponse",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5874,
								5875
							]
						}
					]
				}
			}
		},
		{
			"id": 5876,
			"name": "PaymentProviderDataInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5877,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5878,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5879,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5878,
								5879
							]
						}
					]
				}
			}
		},
		{
			"id": 5880,
			"name": "PaymentProviderError",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is returned in case of an error."
					}
				]
			},
			"children": [
				{
					"id": 5881,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error message"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5882,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5883,
					"name": "detail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Any additional helpful details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5881,
						5882,
						5883
					]
				}
			]
		},
		{
			"id": 5884,
			"name": "WebhookActionData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5885,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5886,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5887,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5886,
								5887
							]
						}
					]
				}
			}
		},
		{
			"id": 5888,
			"name": "WebhookActionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 5889,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5890,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5852,
										"name": "PaymentActions.NOT_SUPPORTED",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5890
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 5891,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5892,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5848,
										"name": "PaymentActions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5893,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5884,
										"name": "WebhookActionData",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5892,
										5893
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 5894,
			"name": "IPaymentProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5897,
					"name": "initiatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5898,
							"name": "initiatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Make calls to the third-party provider to initialize the payment. For example, in Stripe this method is used to create a Payment Intent for the customer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5899,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5859,
										"name": "CreatePaymentProviderSession",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 5870,
												"name": "PaymentProviderSessionResponse",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5900,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5901,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update the payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5902,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5864,
										"name": "UpdatePaymentProviderSession",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 5870,
												"name": "PaymentProviderSessionResponse",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5903,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5904,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to perform any actions necessary before a Payment Session is deleted. The Payment Session is deleted in one of the following cases:"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or an empty object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5905,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment Session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5906,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5907,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to authorize payment using the Payment Session.\nYou can interact with a third-party provider and perform any actions necessary to authorize the payment.\n\nThe payment authorization might require additional action from the customer before it is declared authorized. Once that additional action is performed,\nthe "
									},
									{
										"kind": "code",
										"text": "`authorizePayment`"
									},
									{
										"kind": "text",
										"text": " method will be called again to validate that the payment is now fully authorized. So, make sure to implement it for this case as well, if necessary.\n\n:::note\n\nThe payment authorization status is determined using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getPaymentStatus",
										"target": 5923,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method. If the status is "
									},
									{
										"kind": "code",
										"text": "`requires_more`"
									},
									{
										"kind": "text",
										"text": ", then it means additional actions are required\nfrom the customer.\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authorization details or an error object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5908,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 5909,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the authorization."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 5872,
												"name": "PaymentProviderAuthorizeResponse",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5910,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5911,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to capture the payment amount. This is typically triggered manually by the store operator from the admin.\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to capture the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5912,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment for its first parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5913,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5914,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to refund a payment. This is typically triggered manually by the store operator from the admin. The refund amount might be the total amount or part of it.\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to refund the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5915,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 5916,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the amount to refund."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5917,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5918,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to provide a uniform way of retrieving the payment information from the third-party provider.\nFor example, in Stripe’s Payment Provider this method is used to retrieve the payment intent details from Stripe."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's data, typically retrieved from a third-party provider."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5919,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment Session. Make sure to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field any necessary data that would allow you to retrieve the payment data from the third-party provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5920,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5921,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to cancel a payment. This method is typically triggered by one of the following situations:\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to cancel the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5922,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 5880,
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5923,
					"name": "getPaymentStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5924,
							"name": "getPaymentStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to get the status of a Payment or a Payment Session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The status of the Payment or Payment Session."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5925,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment as a parameter. You can use this data to interact with the third-party provider to check the status of the payment if necessary."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5652,
										"name": "PaymentSessionStatus",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5926,
					"name": "getWebhookActionAndData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5927,
							"name": "getWebhookActionAndData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The method is called when å webhook call for this particular provider is received.\n\nThe method is responsible for normalizing the received event and provide"
									}
								]
							},
							"parameters": [
								{
									"id": 5928,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object containing provider id and data from the provider"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5929,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5930,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Parsed webhook body"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 5931,
													"name": "rawData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Raw request body"
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														]
													}
												},
												{
													"id": 5932,
													"name": "headers",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5930,
														5931,
														5932
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5888,
										"name": "WebhookActionResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						5897,
						5900,
						5903,
						5906,
						5910,
						5913,
						5917,
						5920,
						5923,
						5926
					]
				}
			]
		},
		{
			"id": 5933,
			"name": "IPaymentModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the payment module."
					}
				]
			},
			"children": [
				{
					"id": 5934,
					"name": "createPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5935,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates payment collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5936,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5777,
											"name": "CreatePaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5937,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5938,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5939,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5777,
										"name": "CreatePaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5940,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5658,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5941,
					"name": "retrievePaymentCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5942,
							"name": "retrievePaymentCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5943,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5944,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5658,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5945,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5658,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5946,
					"name": "listPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5947,
							"name": "listPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5948,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5673,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5949,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5658,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5950,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5951,
					"name": "listAndCountPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5952,
							"name": "listAndCountPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections along with the total count of available payment collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5953,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5673,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5954,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5658,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5955,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5658,
													"name": "PaymentCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5956,
					"name": "updatePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5957,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5958,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5959,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5794,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5960,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5658,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5961,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5962,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5673,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5963,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5794,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5964,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5965,
					"name": "upsertPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5966,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5967,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5788,
											"name": "UpsertPaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5968,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5969,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5970,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5788,
										"name": "UpsertPaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5971,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5658,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5972,
					"name": "deletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5973,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5974,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5975,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5976,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5977,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5978,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5979,
					"name": "completePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5980,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method completes a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5981,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5982,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5658,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5983,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method completes payment collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collections' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5984,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5985,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5658,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5986,
					"name": "createPaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5987,
							"name": "createPaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment session for a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5988,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment collection to create the session for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5989,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5824,
										"name": "CreatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5990,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5758,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5991,
					"name": "updatePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5992,
							"name": "updatePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment session's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5993,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5830,
										"name": "UpdatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5994,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5758,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5995,
					"name": "deletePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 5996,
							"name": "deletePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves whent the payment session is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 5997,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5998,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5999,
					"name": "authorizePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6000,
							"name": "authorizePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method authorizes a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The details of the payment created from the authorized payment session."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6001,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment session's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6002,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated payment provider's context."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 6003,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5712,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6004,
					"name": "listPaymentSessions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6005,
							"name": "listPaymentSessions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6006,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 5680,
										"name": "FilterablePaymentSessionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6007,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5758,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6008,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5758,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6009,
					"name": "listPayments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6010,
							"name": "listPayments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list of payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6011,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5733,
										"name": "FilterablePaymentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6012,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5712,
												"name": "PaymentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6013,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5712,
											"name": "PaymentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6014,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6015,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6016,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5810,
										"name": "UpdatePaymentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6017,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5712,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6018,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6019,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method captures a payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6020,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment capture to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5816,
										"name": "CreateCaptureDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6021,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5712,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6022,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6023,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method refunds a payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6024,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5820,
										"name": "CreateRefundDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6025,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5712,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6026,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6027,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method cancels a payment"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6028,
									"name": "paymentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6029,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5712,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6030,
					"name": "listPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6031,
							"name": "listPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6032,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 5772,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6033,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5769,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6034,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5769,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6035,
					"name": "listCaptures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6036,
							"name": "listCaptures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6037,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 5692,
										"name": "FilterableCaptureProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6038,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5746,
												"name": "CaptureDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6039,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5746,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6040,
					"name": "listRefunds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6041,
							"name": "listRefunds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6042,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 5702,
										"name": "FilterableRefundProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6043,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5752,
												"name": "RefundDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6044,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5752,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6045,
					"name": "processEvent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6046,
							"name": "processEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6047,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5839,
										"name": "ProviderWebhookPayload",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						5934,
						5941,
						5946,
						5951,
						5956,
						5965,
						5972,
						5979,
						5986,
						5991,
						5995,
						5999,
						6004,
						6009,
						6014,
						6018,
						6022,
						6026,
						6030,
						6035,
						6040,
						6045
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3169,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6055,
			"name": "PaymentModuleOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6056,
					"name": "webhook_delay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The delay in milliseconds before processing the webhook event."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n5000\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6057,
					"name": "webhook_retries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of times to retry the webhook event processing in case of an error."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6056,
						6057
					]
				}
			]
		},
		{
			"id": 6058,
			"name": "MoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A money amount's data. A money amount represents a price."
					}
				]
			},
			"children": [
				{
					"id": 6059,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6060,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6061,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6062,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6063,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6064,
					"name": "price_set_money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the relation between the money amount and its associated price set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6310,
						"name": "PriceSetMoneyAmountDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6065,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6066,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6067,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6059,
						6060,
						6061,
						6062,
						6063,
						6064,
						6065,
						6066,
						6067
					]
				}
			]
		},
		{
			"id": 6068,
			"name": "CreateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The money amount to create."
					}
				]
			},
			"children": [
				{
					"id": 6069,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6070,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6071,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6072,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6073,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6069,
						6070,
						6071,
						6072,
						6073
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 6103,
					"name": "CreatePriceListPriceDTO"
				},
				{
					"type": "reference",
					"target": 6285,
					"name": "CreatePricesDTO"
				}
			]
		},
		{
			"id": 6074,
			"name": "UpdateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 6075,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6076,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6077,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6078,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6079,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6075,
						6076,
						6077,
						6078,
						6079
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 6111,
					"name": "UpdatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 6080,
			"name": "FilterableMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a money amount."
					}
				]
			},
			"children": [
				{
					"id": 6083,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6080,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6080,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6084,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6080,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6080,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6081,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6082,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6083,
						6084,
						6081,
						6082
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6080,
							"name": "FilterableMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6085,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's status."
					}
				]
			},
			"children": [
				{
					"id": 6086,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled and its prices can be used."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 6087,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is disabled, meaning its prices can't be used yet."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						6086,
						6087
					]
				}
			]
		},
		{
			"id": 6088,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's type."
					}
				]
			},
			"children": [
				{
					"id": 6089,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's prices are used for a sale."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 6090,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's prices override original prices. This affects the calculated price of associated price sets."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						6089,
						6090
					]
				}
			]
		},
		{
			"id": 6091,
			"name": "PriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price list's details."
					}
				]
			},
			"children": [
				{
					"id": 6092,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6093,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6094,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6095,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6085,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6096,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6097,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with this price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6098,
					"name": "price_set_money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6310,
							"name": "PriceSetMoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6099,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6058,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6100,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule types."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6356,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6101,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6161,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6102,
					"name": "price_list_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6161,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6092,
						6093,
						6094,
						6095,
						6096,
						6097,
						6098,
						6099,
						6100,
						6101,
						6102
					]
				}
			]
		},
		{
			"id": 6103,
			"name": "CreatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 6106,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6069,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 6107,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6070,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 6108,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6071,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 6109,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6072,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 6110,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6073,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 6104,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6105,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6119,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6106,
						6107,
						6108,
						6109,
						6110,
						6104,
						6105
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6068,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6111,
			"name": "UpdatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 6114,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6075,
						"name": "UpdateMoneyAmountDTO.id"
					}
				},
				{
					"id": 6115,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6076,
						"name": "UpdateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 6116,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6077,
						"name": "UpdateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 6117,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6078,
						"name": "UpdateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 6118,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6079,
						"name": "UpdateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 6112,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6113,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6119,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6114,
						6115,
						6116,
						6117,
						6118,
						6112,
						6113
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6074,
					"name": "UpdateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6119,
			"name": "CreatePriceSetPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price set.\n\nEach key of the object is a rule type's "
					},
					{
						"kind": "code",
						"text": "`rule_attribute`"
					},
					{
						"kind": "text",
						"text": ", and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 6120,
			"name": "CreatePriceListRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's rules to be set. Each key of the object is a rule type's "
					},
					{
						"kind": "code",
						"text": "`rule_attribute`"
					},
					{
						"kind": "text",
						"text": ", and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 6121,
			"name": "CreatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list to create."
					}
				]
			},
			"children": [
				{
					"id": 6122,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6123,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6124,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6125,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6126,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6085,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6127,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6088,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6128,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6129,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6120,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6130,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices associated with the price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6103,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6122,
						6123,
						6124,
						6125,
						6126,
						6127,
						6128,
						6129,
						6130
					]
				}
			]
		},
		{
			"id": 6131,
			"name": "UpdatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list."
					}
				]
			},
			"children": [
				{
					"id": 6132,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6133,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6134,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6135,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6136,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6137,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6085,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6138,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6139,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6120,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6132,
						6133,
						6134,
						6135,
						6136,
						6137,
						6138,
						6139
					]
				}
			]
		},
		{
			"id": 6140,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price lists."
					}
				]
			},
			"children": [
				{
					"id": 6146,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6140,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6140,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6147,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6140,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6140,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price lists by"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6142,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6143,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6144,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6085,
							"name": "PriceListStatus",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6145,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6146,
						6147,
						6141,
						6142,
						6143,
						6144,
						6145
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6140,
							"name": "FilterablePriceListProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6148,
			"name": "FilterablePriceListRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price list rules."
					}
				]
			},
			"children": [
				{
					"id": 6153,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6148,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6148,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6154,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6148,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6148,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6149,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6150,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6151,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated rule types."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6152,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated price lists."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6153,
						6154,
						6149,
						6150,
						6151,
						6152
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6148,
							"name": "FilterablePriceListRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6155,
			"name": "FilterablePriceListRuleValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 6159,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6155,
									"name": "FilterablePriceListRuleValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6155,
											"name": "FilterablePriceListRuleValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6160,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6155,
									"name": "FilterablePriceListRuleValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6155,
											"name": "FilterablePriceListRuleValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6156,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6157,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6158,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6159,
						6160,
						6156,
						6157,
						6158
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6155,
							"name": "FilterablePriceListRuleValueProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6161,
			"name": "PriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule's details."
					}
				]
			},
			"children": [
				{
					"id": 6162,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6163,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6164,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6356,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6165,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6091,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6166,
					"name": "price_list_rule_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6178,
							"name": "PriceListRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6162,
						6163,
						6164,
						6165,
						6166
					]
				}
			]
		},
		{
			"id": 6167,
			"name": "CreatePriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule to create."
					}
				]
			},
			"children": [
				{
					"id": 6168,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6169,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type or the details of an existing rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6356,
								"name": "RuleTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6170,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6171,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list or the details of an existing price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6091,
								"name": "PriceListDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6168,
						6169,
						6170,
						6171
					]
				}
			]
		},
		{
			"id": 6172,
			"name": "UpdatePriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list rule."
					}
				]
			},
			"children": [
				{
					"id": 6173,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list rule to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6174,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6175,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6176,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6177,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type or the details of an existing rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6173,
						6174,
						6175,
						6176,
						6177
					]
				}
			]
		},
		{
			"id": 6178,
			"name": "PriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule value's details."
					}
				]
			},
			"children": [
				{
					"id": 6179,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule value's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6180,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6181,
					"name": "price_list_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list rule."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6161,
						"name": "PriceListRuleDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6179,
						6180,
						6181
					]
				}
			]
		},
		{
			"id": 6182,
			"name": "CreatePriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6183,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6184,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6185,
					"name": "price_list_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6161,
								"name": "PriceListRuleDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6183,
						6184,
						6185
					]
				}
			]
		},
		{
			"id": 6186,
			"name": "UpdatePriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6187,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6188,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6189,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6187,
						6188,
						6189
					]
				}
			]
		},
		{
			"id": 6190,
			"name": "AddPriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 6191,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6192,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6103,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6191,
						6192
					]
				}
			]
		},
		{
			"id": 6193,
			"name": "UpdatePriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 6194,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6195,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6111,
							"name": "UpdatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6194,
						6195
					]
				}
			]
		},
		{
			"id": 6196,
			"name": "SetPriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to add to a price list."
					}
				]
			},
			"children": [
				{
					"id": 6197,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add rules to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6198,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price list. Each key of the object is a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": ", and its value\nis the value(s) of the rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6197,
						6198
					]
				}
			]
		},
		{
			"id": 6199,
			"name": "RemovePriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price list."
					}
				]
			},
			"children": [
				{
					"id": 6200,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to remove rules from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6201,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove from the price list. Each item being a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6200,
						6201
					]
				}
			]
		},
		{
			"id": 6202,
			"name": "PriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule's data."
					}
				]
			},
			"children": [
				{
					"id": 6203,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6204,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6205,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6246,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6206,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6207,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6356,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6208,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6209,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6210,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6211,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6212,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6213,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6214,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6203,
						6204,
						6205,
						6206,
						6207,
						6208,
						6209,
						6210,
						6211,
						6212,
						6213,
						6214
					]
				}
			]
		},
		{
			"id": 6215,
			"name": "CreatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule to create."
					}
				]
			},
			"children": [
				{
					"id": 6216,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6217,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6218,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6219,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6220,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6216,
						6217,
						6218,
						6219,
						6220
					]
				}
			]
		},
		{
			"id": 6221,
			"name": "UpdatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 6222,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6223,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6224,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6225,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6226,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6227,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6228,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6222,
						6223,
						6224,
						6225,
						6226,
						6227,
						6228
					]
				}
			]
		},
		{
			"id": 6229,
			"name": "FilterablePriceRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price rules."
					}
				]
			},
			"children": [
				{
					"id": 6234,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6229,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6229,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6235,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6229,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6229,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6230,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6231,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6232,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6233,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated rule type."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6234,
						6235,
						6230,
						6231,
						6232,
						6233
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6229,
							"name": "FilterablePriceRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6310,
			"name": "PriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set money amount's data."
					}
				]
			},
			"children": [
				{
					"id": 6311,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6312,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6313,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6246,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6314,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6091,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6315,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6316,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6202,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6317,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The money amount associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6058,
						"name": "MoneyAmountDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6318,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_set_money_amount was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6319,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_set_money_amount was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6320,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_set_money_amount was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6311,
						6312,
						6313,
						6314,
						6315,
						6316,
						6317,
						6318,
						6319,
						6320
					]
				}
			]
		},
		{
			"id": 6321,
			"name": "UpdatePriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6322,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6323,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6324,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 6246,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6325,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 6058,
						"name": "MoneyAmountDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6322,
						6323,
						6324,
						6325
					]
				}
			]
		},
		{
			"id": 6326,
			"name": "CreatePriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6327,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6328,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6246,
								"name": "PriceSetDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6329,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6091,
								"name": "PriceListDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6330,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6058,
								"name": "MoneyAmountDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6331,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6327,
						6328,
						6329,
						6330,
						6331
					]
				}
			]
		},
		{
			"id": 6332,
			"name": "FilterablePriceSetMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price set money amounts."
					}
				]
			},
			"children": [
				{
					"id": 6336,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6332,
									"name": "FilterablePriceSetMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6332,
											"name": "FilterablePriceSetMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6337,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6332,
									"name": "FilterablePriceSetMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6332,
											"name": "FilterablePriceSetMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6333,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6334,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6335,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount's associated price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6336,
						6337,
						6333,
						6334,
						6335
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6332,
							"name": "FilterablePriceSetMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6338,
			"name": "PriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6339,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6340,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 6246,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6341,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 6356,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6342,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6339,
						6340,
						6341,
						6342
					]
				}
			]
		},
		{
			"id": 6343,
			"name": "CreatePriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6344,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 6246,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6345,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 6356,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6344,
						6345
					]
				}
			]
		},
		{
			"id": 6346,
			"name": "UpdatePriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6347,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6348,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6349,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6347,
						6348,
						6349
					]
				}
			]
		},
		{
			"id": 6350,
			"name": "FilterablePriceSetRuleTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 6354,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6350,
									"name": "FilterablePriceSetRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6350,
											"name": "FilterablePriceSetRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6355,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6350,
									"name": "FilterablePriceSetRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6350,
											"name": "FilterablePriceSetRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6351,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6352,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6353,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6354,
						6355,
						6351,
						6352,
						6353
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6350,
							"name": "FilterablePriceSetRuleTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6236,
			"name": "PricingRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6237,
					"name": "calculatePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6238,
							"name": "calculatePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6239,
									"name": "pricingFilters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6244,
										"name": "PricingFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6240,
									"name": "pricingContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6242,
										"name": "PricingContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6241,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6250,
											"name": "CalculatedPriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6237
					]
				}
			]
		},
		{
			"id": 6242,
			"name": "PricingContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to calculate prices. For example, you can specify the currency code to calculate prices in."
					}
				]
			},
			"children": [
				{
					"id": 6243,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a number. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6243
					]
				}
			]
		},
		{
			"id": 6244,
			"name": "PricingFilters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 6245,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter prices."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6245
					]
				}
			]
		},
		{
			"id": 6246,
			"name": "PriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set's data."
					}
				]
			},
			"children": [
				{
					"id": 6247,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6248,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6058,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6249,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule types applied on this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6356,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6247,
						6248,
						6249
					]
				}
			]
		},
		{
			"id": 6250,
			"name": "CalculatedPriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A calculated price set's data."
					}
				]
			},
			"children": [
				{
					"id": 6251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6252,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6253,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated amount. It can possibly be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there's no price set up for the provided context."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6254,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price. It can possibly be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6255,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to apply. It's set if the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property is provided in the context. Otherwise, its value will be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6256,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to apply. It's set if the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property is provided in the context. Otherwise, its value will be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6257,
					"name": "price_list_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated price list, if any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6258,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list, if any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6251,
						6252,
						6253,
						6254,
						6255,
						6256,
						6257,
						6258
					]
				}
			]
		},
		{
			"id": 6259,
			"name": "CalculatedPriceSet",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The calculated price for a specific price set and context."
					}
				]
			},
			"children": [
				{
					"id": 6260,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6261,
					"name": "is_calculated_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is associated with a price list. During the calculation process, if no valid price list is found,\nthe calculated price is set to the original price, which doesn't belong to a price list. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6262,
					"name": "calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the calculated price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6263,
					"name": "is_original_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is associated with a price list. During the calculation process, if the price list of the calculated price is of type override,\nthe original price will be the same as the calculated price. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6264,
					"name": "original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6265,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price, or null if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6266,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the calculated price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6267,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6268,
									"name": "money_amount_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the money amount selected as the calculated price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6269,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6270,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6271,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 6272,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6268,
										6269,
										6270,
										6271,
										6272
									]
								}
							]
						}
					}
				},
				{
					"id": 6273,
					"name": "original_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6274,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6275,
									"name": "money_amount_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the money amount selected as the original price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6276,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6277,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6278,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 6279,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6275,
										6276,
										6277,
										6278,
										6279
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6260,
						6261,
						6262,
						6263,
						6264,
						6265,
						6266,
						6273
					]
				}
			]
		},
		{
			"id": 6280,
			"name": "AddRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 6281,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add the rules to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6282,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to a price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 6283,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6284,
										"name": "attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6284
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6281,
						6282
					]
				}
			]
		},
		{
			"id": 6285,
			"name": "CreatePricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to create part of a price set."
					}
				]
			},
			"children": [
				{
					"id": 6287,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6069,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 6288,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6070,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 6289,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6071,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 6290,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6072,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 6291,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6073,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 6286,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6119,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6287,
						6288,
						6289,
						6290,
						6291,
						6286
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6068,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6292,
			"name": "AddPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 6293,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6294,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add to the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6285,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6293,
						6294
					]
				}
			]
		},
		{
			"id": 6295,
			"name": "RemovePriceSetRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price set."
					}
				]
			},
			"children": [
				{
					"id": 6296,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6297,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove. Each string is the "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " of a rule to remove."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6296,
						6297
					]
				}
			]
		},
		{
			"id": 6298,
			"name": "CreatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set to create."
					}
				]
			},
			"children": [
				{
					"id": 6299,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to associate with the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 6300,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6301,
										"name": "rule_attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "the value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6301
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 6302,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6285,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6299,
						6302
					]
				}
			]
		},
		{
			"id": 6303,
			"name": "UpdatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price set to update."
					}
				]
			},
			"children": [
				{
					"id": 6304,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the price set to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6304
					]
				}
			]
		},
		{
			"id": 6305,
			"name": "FilterablePriceSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price sets."
					}
				]
			},
			"children": [
				{
					"id": 6308,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6305,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6305,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6309,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6305,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6305,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6306,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price sets by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6307,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a price set's associated money amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6080,
						"name": "FilterableMoneyAmountProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6308,
						6309,
						6306,
						6307
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6305,
							"name": "FilterablePriceSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6356,
			"name": "RuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A rule type's data."
					}
				]
			},
			"children": [
				{
					"id": 6357,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6358,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6359,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of\nthe "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6360,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy\nthe provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6361,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the rule type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6362,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the rule type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6357,
						6358,
						6359,
						6360,
						6361,
						6362
					]
				}
			]
		},
		{
			"id": 6363,
			"name": "CreateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rule type to create."
					}
				]
			},
			"children": [
				{
					"id": 6364,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6365,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6366,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": "\nmethod to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6367,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context.\nThe higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6364,
						6365,
						6366,
						6367
					]
				}
			]
		},
		{
			"id": 6368,
			"name": "UpdateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a rule type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price set to update."
					}
				]
			},
			"children": [
				{
					"id": 6369,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6370,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6371,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6372,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6369,
						6370,
						6371,
						6372
					]
				}
			]
		},
		{
			"id": 6373,
			"name": "FilterableRuleTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on rule types."
					}
				]
			},
			"children": [
				{
					"id": 6377,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6373,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6373,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6378,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6373,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6373,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6374,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6375,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6376,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attributes to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6377,
						6378,
						6374,
						6375,
						6376
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6373,
							"name": "FilterableRuleTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6379,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6380,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6380
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1337,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 4272,
			"name": "PromotionTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 4273,
					"name": "ApplicationMethodTypeValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "fixed"
							},
							{
								"type": "literal",
								"value": "percentage"
							}
						]
					}
				},
				{
					"id": 4274,
					"name": "ApplicationMethodTargetTypeValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "order"
							},
							{
								"type": "literal",
								"value": "shipping_methods"
							},
							{
								"type": "literal",
								"value": "items"
							}
						]
					}
				},
				{
					"id": 4275,
					"name": "ApplicationMethodAllocationValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "each"
							},
							{
								"type": "literal",
								"value": "across"
							}
						]
					}
				},
				{
					"id": 4276,
					"name": "ApplicationMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4277,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4278,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4273,
								"name": "ApplicationMethodTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4279,
							"name": "target_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4274,
								"name": "ApplicationMethodTargetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4280,
							"name": "allocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4275,
								"name": "ApplicationMethodAllocationValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4281,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4282,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4283,
							"name": "buy_rules_min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4284,
							"name": "apply_to_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4285,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 4385,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4286,
							"name": "target_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4417,
									"name": "PromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4287,
							"name": "buy_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4417,
									"name": "PromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4277,
								4278,
								4279,
								4280,
								4281,
								4282,
								4283,
								4284,
								4285,
								4286,
								4287
							]
						}
					]
				},
				{
					"id": 4288,
					"name": "CreateApplicationMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4289,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4273,
								"name": "ApplicationMethodTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4290,
							"name": "target_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4274,
								"name": "ApplicationMethodTargetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4291,
							"name": "allocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4275,
								"name": "ApplicationMethodAllocationValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4292,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4293,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4294,
							"name": "buy_rules_min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4295,
							"name": "apply_to_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4296,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 4385,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4297,
							"name": "target_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4423,
									"name": "CreatePromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4298,
							"name": "buy_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4423,
									"name": "CreatePromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4289,
								4290,
								4291,
								4292,
								4293,
								4294,
								4295,
								4296,
								4297,
								4298
							]
						}
					]
				},
				{
					"id": 4299,
					"name": "UpdateApplicationMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4300,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4301,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4273,
								"name": "ApplicationMethodTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4302,
							"name": "target_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4274,
								"name": "ApplicationMethodTargetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4303,
							"name": "allocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4275,
								"name": "ApplicationMethodAllocationValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4304,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4305,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4306,
							"name": "buy_rules_min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4307,
							"name": "apply_to_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4308,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 4385,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4300,
								4301,
								4302,
								4303,
								4304,
								4305,
								4306,
								4307,
								4308
							]
						}
					]
				},
				{
					"id": 4309,
					"name": "FilterableApplicationMethodProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4314,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4309,
											"name": "FilterableApplicationMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4309,
													"name": "FilterableApplicationMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4315,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4309,
											"name": "FilterableApplicationMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4309,
													"name": "FilterableApplicationMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4310,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4311,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4273,
									"name": "ApplicationMethodTypeValues",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4312,
							"name": "target_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4274,
									"name": "ApplicationMethodTargetTypeValues",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4313,
							"name": "allocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4275,
									"name": "ApplicationMethodAllocationValues",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4314,
								4315,
								4310,
								4311,
								4312,
								4313
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4309,
									"name": "FilterableApplicationMethodProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4330,
					"name": "CampaignBudgetTypeValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "spend"
							},
							{
								"type": "literal",
								"value": "usage"
							}
						]
					}
				},
				{
					"id": 4331,
					"name": "CampaignBudgetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4332,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4333,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4330,
								"name": "CampaignBudgetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4334,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4335,
							"name": "used",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4332,
								4333,
								4334,
								4335
							]
						}
					]
				},
				{
					"id": 4336,
					"name": "FilterableCampaignBudgetProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4339,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4336,
											"name": "FilterableCampaignBudgetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4336,
													"name": "FilterableCampaignBudgetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4340,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4336,
											"name": "FilterableCampaignBudgetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4336,
													"name": "FilterableCampaignBudgetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4337,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4338,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4339,
								4340,
								4337,
								4338
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4336,
									"name": "FilterableCampaignBudgetProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4316,
					"name": "CampaignDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4317,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4318,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4319,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4320,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4321,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4322,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4323,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4324,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4331,
								"name": "CampaignBudgetDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4317,
								4318,
								4319,
								4320,
								4321,
								4322,
								4323,
								4324
							]
						}
					]
				},
				{
					"id": 4325,
					"name": "FilterableCampaignProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4328,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4325,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4325,
													"name": "FilterableCampaignProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4329,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4325,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4325,
													"name": "FilterableCampaignProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4326,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4327,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4328,
								4329,
								4326,
								4327
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4325,
									"name": "FilterableCampaignProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4341,
					"name": "ComputeActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 4346,
								"name": "AddItemAdjustmentAction",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 4352,
								"name": "RemoveItemAdjustmentAction",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 4357,
								"name": "AddShippingMethodAdjustment",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 4363,
								"name": "RemoveShippingMethodAdjustment",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 4343,
								"name": "CampaignBudgetExceededAction",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4342,
					"name": "UsageComputedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 4357,
								"name": "AddShippingMethodAdjustment",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 4346,
								"name": "AddItemAdjustmentAction",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4343,
					"name": "CampaignBudgetExceededAction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4344,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "campaignBudgetExceeded"
							}
						},
						{
							"id": 4345,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4344,
								4345
							]
						}
					]
				},
				{
					"id": 4346,
					"name": "AddItemAdjustmentAction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4347,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "addItemAdjustment"
							}
						},
						{
							"id": 4348,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4349,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4350,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4351,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4347,
								4348,
								4349,
								4350,
								4351
							]
						}
					]
				},
				{
					"id": 4352,
					"name": "RemoveItemAdjustmentAction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4353,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "removeItemAdjustment"
							}
						},
						{
							"id": 4354,
							"name": "adjustment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4355,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4356,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4353,
								4354,
								4355,
								4356
							]
						}
					]
				},
				{
					"id": 4357,
					"name": "AddShippingMethodAdjustment",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4358,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "addShippingMethodAdjustment"
							}
						},
						{
							"id": 4359,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4360,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4361,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4362,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4358,
								4359,
								4360,
								4361,
								4362
							]
						}
					]
				},
				{
					"id": 4363,
					"name": "RemoveShippingMethodAdjustment",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4364,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "removeShippingMethodAdjustment"
							}
						},
						{
							"id": 4365,
							"name": "adjustment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4366,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4364,
								4365,
								4366
							]
						}
					]
				},
				{
					"id": 4367,
					"name": "ComputeActionAdjustmentLine",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4368,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4369,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4368,
								4369
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4370,
					"name": "ComputeActionItemLine",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4371,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4372,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4373,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4374,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4367,
									"name": "ComputeActionAdjustmentLine",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4371,
								4372,
								4373,
								4374
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4375,
					"name": "ComputeActionShippingLine",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4376,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4377,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4378,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4367,
									"name": "ComputeActionAdjustmentLine",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4376,
								4377,
								4378
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4379,
					"name": "ComputeActionContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4380,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4370,
									"name": "ComputeActionItemLine",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4381,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4375,
									"name": "ComputeActionShippingLine",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4380,
								4381
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4382,
					"name": "ComputeActionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4383,
							"name": "prevent_auto_promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4383
							]
						}
					]
				},
				{
					"id": 4441,
					"name": "PromotionRuleValueDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4442,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4443,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4442,
								4443
							]
						}
					]
				},
				{
					"id": 4444,
					"name": "CreatePromotionRuleValueDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4445,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4446,
							"name": "promotion_rule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4417,
								"name": "PromotionRuleDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4445,
								4446
							]
						}
					]
				},
				{
					"id": 4447,
					"name": "UpdatePromotionRuleValueDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4448,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4448
							]
						}
					]
				},
				{
					"id": 4449,
					"name": "FilterablePromotionRuleValueProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4451,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4449,
											"name": "FilterablePromotionRuleValueProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4449,
													"name": "FilterablePromotionRuleValueProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4452,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4449,
											"name": "FilterablePromotionRuleValueProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4449,
													"name": "FilterablePromotionRuleValueProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4450,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4451,
								4452,
								4450
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4449,
									"name": "FilterablePromotionRuleValueProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4416,
					"name": "PromotionRuleOperatorValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "gte"
							}
						]
					}
				},
				{
					"id": 4417,
					"name": "PromotionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4418,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4419,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4420,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4421,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4416,
								"name": "PromotionRuleOperatorValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4422,
							"name": "values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4441,
									"name": "PromotionRuleValueDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4418,
								4419,
								4420,
								4421,
								4422
							]
						}
					]
				},
				{
					"id": 4423,
					"name": "CreatePromotionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4424,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4425,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4426,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4416,
								"name": "PromotionRuleOperatorValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4427,
							"name": "values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4424,
								4425,
								4426,
								4427
							]
						}
					]
				},
				{
					"id": 4428,
					"name": "UpdatePromotionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4429,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4430,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4431,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4432,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4416,
								"name": "PromotionRuleOperatorValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4433,
							"name": "values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4429,
								4430,
								4431,
								4432,
								4433
							]
						}
					]
				},
				{
					"id": 4434,
					"name": "RemovePromotionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4435,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4435
							]
						}
					]
				},
				{
					"id": 4436,
					"name": "FilterablePromotionRuleProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4438,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4436,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4436,
													"name": "FilterablePromotionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4439,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4436,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4436,
													"name": "FilterablePromotionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4437,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4438,
								4439,
								4437
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4436,
									"name": "FilterablePromotionRuleProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4440,
					"name": "PromotionRuleTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "buy_rules"
							},
							{
								"type": "literal",
								"value": "target_rules"
							},
							{
								"type": "literal",
								"value": "rules"
							}
						]
					}
				},
				{
					"id": 4384,
					"name": "PromotionTypeValues",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "standard"
							},
							{
								"type": "literal",
								"value": "buyget"
							}
						]
					}
				},
				{
					"id": 4385,
					"name": "PromotionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4386,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4387,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4388,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4384,
								"name": "PromotionTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4389,
							"name": "is_automatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4390,
							"name": "application_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4276,
								"name": "ApplicationMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4391,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4417,
									"name": "PromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4392,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4316,
								"name": "CampaignDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4386,
								4387,
								4388,
								4389,
								4390,
								4391,
								4392
							]
						}
					]
				},
				{
					"id": 4393,
					"name": "CreatePromotionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4394,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4395,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4384,
								"name": "PromotionTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4396,
							"name": "is_automatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4397,
							"name": "application_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4288,
								"name": "CreateApplicationMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4398,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4423,
									"name": "CreatePromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4399,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4462,
								"name": "CreateCampaignDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4400,
							"name": "campaign_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4394,
								4395,
								4396,
								4397,
								4398,
								4399,
								4400
							]
						}
					]
				},
				{
					"id": 4401,
					"name": "UpdatePromotionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4402,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4403,
							"name": "is_automatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4404,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4405,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4384,
								"name": "PromotionTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4406,
							"name": "application_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4299,
								"name": "UpdateApplicationMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4407,
							"name": "campaign_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4402,
								4403,
								4404,
								4405,
								4406,
								4407
							]
						}
					]
				},
				{
					"id": 4408,
					"name": "FilterablePromotionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4414,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4408,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4408,
													"name": "FilterablePromotionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4415,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4408,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4408,
													"name": "FilterablePromotionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4409,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4410,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4411,
							"name": "budget_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4412,
							"name": "is_automatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4413,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4384,
									"name": "PromotionTypeValues",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4414,
								4415,
								4409,
								4410,
								4411,
								4412,
								4413
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4408,
									"name": "FilterablePromotionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4453,
					"name": "CreateCampaignBudgetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4454,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4330,
								"name": "CampaignBudgetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4455,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4456,
							"name": "used",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4454,
								4455,
								4456
							]
						}
					]
				},
				{
					"id": 4457,
					"name": "UpdateCampaignBudgetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4458,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4459,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4330,
								"name": "CampaignBudgetTypeValues",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4460,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4461,
							"name": "used",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4458,
								4459,
								4460,
								4461
							]
						}
					]
				},
				{
					"id": 4462,
					"name": "CreateCampaignDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4463,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4464,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4465,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4466,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4467,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4468,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4469,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4453,
								"name": "CreateCampaignBudgetDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4470,
							"name": "promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 4385,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "id"
										}
									],
									"name": "Pick",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4463,
								4464,
								4465,
								4466,
								4467,
								4468,
								4469,
								4470
							]
						}
					]
				},
				{
					"id": 4471,
					"name": "UpdateCampaignDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4472,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4473,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4474,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4475,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4476,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4477,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4478,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4479,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4457,
										"name": "UpdateCampaignBudgetDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 4480,
							"name": "promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 4385,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "id"
										}
									],
									"name": "Pick",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4472,
								4473,
								4474,
								4475,
								4476,
								4477,
								4478,
								4479,
								4480
							]
						}
					]
				},
				{
					"id": 4481,
					"name": "IPromotionModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4482,
							"name": "registerUsage",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4483,
									"name": "registerUsage",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4484,
											"name": "computedActions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4341,
													"name": "ComputeActions",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4485,
							"name": "computeActions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4486,
									"name": "computeActions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4487,
											"name": "promotionCodesToApply",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4488,
											"name": "applicationContext",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4379,
												"name": "ComputeActionContext",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4489,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4341,
													"name": "ComputeActions",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4490,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4491,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4492,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4393,
													"name": "CreatePromotionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4493,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4385,
													"name": "PromotionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4494,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4495,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4393,
												"name": "CreatePromotionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4496,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4385,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4497,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4498,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4499,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4401,
													"name": "UpdatePromotionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4500,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4385,
													"name": "PromotionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4501,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4502,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4401,
												"name": "UpdatePromotionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4503,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4385,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4504,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4505,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4506,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4408,
												"name": "FilterablePromotionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4507,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4385,
														"name": "PromotionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4508,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4385,
													"name": "PromotionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4509,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4510,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4511,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4408,
												"name": "FilterablePromotionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4512,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4385,
														"name": "PromotionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4513,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4385,
															"name": "PromotionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4514,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4515,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4516,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4517,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4385,
														"name": "PromotionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4518,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4385,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4519,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4520,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4521,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4522,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4523,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4524,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4525,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4526,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4527,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 4528,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4529,
											"name": "promotionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 4530,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4528,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4531,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4532,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4533,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 4534,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4535,
											"name": "promotionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 4536,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4534,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4537,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4538,
							"name": "addPromotionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4539,
									"name": "addPromotionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4540,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4541,
											"name": "rulesData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4423,
													"name": "CreatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4542,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4417,
													"name": "PromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4543,
							"name": "addPromotionTargetRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4544,
									"name": "addPromotionTargetRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4545,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4546,
											"name": "rulesData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4423,
													"name": "CreatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4547,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4417,
													"name": "PromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4548,
							"name": "addPromotionBuyRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4549,
									"name": "addPromotionBuyRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4550,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4551,
											"name": "rulesData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4423,
													"name": "CreatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4552,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4417,
													"name": "PromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4553,
							"name": "removePromotionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4554,
									"name": "removePromotionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4555,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4556,
											"name": "ruleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4557,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4558,
							"name": "removePromotionTargetRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4559,
									"name": "removePromotionTargetRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4560,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4561,
											"name": "ruleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4562,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4563,
							"name": "removePromotionBuyRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4564,
									"name": "removePromotionBuyRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4565,
											"name": "promotionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4566,
											"name": "ruleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4567,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4568,
							"name": "createCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4569,
									"name": "createCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4570,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4462,
												"name": "CreateCampaignDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4571,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4316,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4572,
									"name": "createCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4573,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4462,
													"name": "CreateCampaignDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4574,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4316,
													"name": "CampaignDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4575,
							"name": "updateCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4576,
									"name": "updateCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4577,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4471,
													"name": "UpdateCampaignDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4578,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4316,
													"name": "CampaignDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4579,
									"name": "updateCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4580,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4471,
												"name": "UpdateCampaignDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4581,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4316,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4582,
							"name": "listPromotionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4583,
									"name": "listPromotionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4584,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4436,
												"name": "FilterablePromotionRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4585,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4417,
														"name": "PromotionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4586,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4417,
													"name": "PromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4587,
							"name": "updatePromotionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4588,
									"name": "updatePromotionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4589,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4428,
													"name": "UpdatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4590,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4417,
													"name": "PromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4591,
							"name": "listCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4592,
									"name": "listCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4593,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4325,
												"name": "FilterableCampaignProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4594,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4316,
														"name": "CampaignDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4595,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4316,
													"name": "CampaignDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4596,
							"name": "listAndCountCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4597,
									"name": "listAndCountCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4598,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4325,
												"name": "FilterableCampaignProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4599,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4316,
														"name": "CampaignDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4600,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4316,
															"name": "CampaignDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4601,
							"name": "retrieveCampaign",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4602,
									"name": "retrieveCampaign",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4603,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4604,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4316,
														"name": "CampaignDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4605,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4316,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4606,
							"name": "deleteCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4607,
									"name": "deleteCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4608,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4609,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4610,
									"name": "deleteCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4611,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4612,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4613,
							"name": "softDeleteCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4614,
									"name": "softDeleteCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 4615,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4616,
											"name": "campaignIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 4617,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4615,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4618,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4619,
							"name": "restoreCampaigns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4620,
									"name": "restoreCampaigns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 4621,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4622,
											"name": "campaignIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 4623,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4621,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4624,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								4482,
								4485,
								4490,
								4497,
								4504,
								4509,
								4514,
								4519,
								4526,
								4532,
								4538,
								4543,
								4548,
								4553,
								4558,
								4563,
								4568,
								4575,
								4582,
								4587,
								4591,
								4596,
								4601,
								4606,
								4613,
								4619
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4632,
					"name": "AddPromotionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4634,
									"name": "rule_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4440,
										"name": "PromotionRuleTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4635,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4636,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4637,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4638,
													"name": "rules",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4423,
															"name": "CreatePromotionRuleDTO",
															"package": "@medusajs/types"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4637,
														4638
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4634,
										4635
									]
								}
							]
						}
					}
				},
				{
					"id": 4639,
					"name": "RemovePromotionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4640,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4641,
									"name": "rule_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4440,
										"name": "PromotionRuleTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4642,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4643,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4644,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4645,
													"name": "rule_ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4644,
														4645
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4641,
										4642
									]
								}
							]
						}
					}
				},
				{
					"id": 4646,
					"name": "UpdatePromotionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4647,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4648,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4428,
											"name": "UpdatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4648
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						4276,
						4288,
						4299,
						4309,
						4331,
						4336,
						4316,
						4325,
						4343,
						4346,
						4352,
						4357,
						4363,
						4367,
						4370,
						4375,
						4379,
						4382,
						4441,
						4444,
						4447,
						4449,
						4417,
						4423,
						4428,
						4434,
						4436,
						4385,
						4393,
						4401,
						4408,
						4453,
						4457,
						4462,
						4471,
						4481
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						4273,
						4274,
						4275,
						4330,
						4341,
						4342,
						4416,
						4440,
						4384,
						4632,
						4639,
						4646
					]
				}
			]
		},
		{
			"id": 6381,
			"name": "RegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region details."
					}
				]
			},
			"children": [
				{
					"id": 6382,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6383,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6384,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6385,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Setting to indicate whether taxes need to be applied automatically"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6386,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The countries of the region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6390,
							"name": "RegionCountryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6387,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6388,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6389,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6382,
						6383,
						6384,
						6385,
						6386,
						6387,
						6388,
						6389
					]
				}
			]
		},
		{
			"id": 6390,
			"name": "RegionCountryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The country details."
					}
				]
			},
			"children": [
				{
					"id": 6391,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6392,
					"name": "iso_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 code of the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6393,
					"name": "iso_3",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 code of the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6394,
					"name": "num_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country's code number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6395,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6396,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6391,
						6392,
						6393,
						6394,
						6395,
						6396
					]
				}
			]
		},
		{
			"id": 6397,
			"name": "FilterableRegionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved regions."
					}
				]
			},
			"children": [
				{
					"id": 6404,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6397,
									"name": "FilterableRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6397,
											"name": "FilterableRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6405,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6397,
									"name": "FilterableRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6397,
											"name": "FilterableRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6398,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the regions by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6399,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter regions by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6400,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter regions by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6401,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter regions by their metadata."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6402,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter regions by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6403,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter regions by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1842,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6404,
						6405,
						6398,
						6399,
						6400,
						6401,
						6402,
						6403
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6397,
							"name": "FilterableRegionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6406,
			"name": "FilterableRegionCountryProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved region's countries."
					}
				]
			},
			"children": [
				{
					"id": 6413,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6406,
									"name": "FilterableRegionCountryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6406,
											"name": "FilterableRegionCountryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1865,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6414,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6406,
									"name": "FilterableRegionCountryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1864,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6406,
											"name": "FilterableRegionCountryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1866,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6407,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the countries by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6408,
					"name": "iso_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter countries by their ISO 2 code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6409,
					"name": "iso_3",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter countries by their ISO 3 code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6410,
					"name": "num_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter countries by their code number."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					}
				},
				{
					"id": 6411,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter countries by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6412,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter countries by their display name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6413,
						6414,
						6407,
						6408,
						6409,
						6410,
						6411,
						6412
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1864,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6406,
							"name": "FilterableRegionCountryProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6415,
			"name": "CreateRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region to be created."
					}
				]
			},
			"children": [
				{
					"id": 6416,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6417,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6418,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Setting to indicate whether taxes need to be applied automatically"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6419,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's countries."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6420,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6416,
						6417,
						6418,
						6419,
						6420
					]
				}
			]
		},
		{
			"id": 6421,
			"name": "UpsertRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6422,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the region in the case of an update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6423,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target name of the region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6424,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6425,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Setting to indicate whether taxes need to be applied automatically"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6426,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's countries."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6427,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6422,
						6423,
						6424,
						6425,
						6426,
						6427
					]
				}
			]
		},
		{
			"id": 6428,
			"name": "UpdateRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6429,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target name of the region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6430,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6431,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Setting to indicate whether taxes need to be applied automatically"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6432,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's countries."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6433,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6429,
						6430,
						6431,
						6432,
						6433
					]
				}
			]
		},
		{
			"id": 6434,
			"name": "IRegionModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the region module."
					}
				]
			},
			"children": [
				{
					"id": 6435,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6436,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates regions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6437,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The regions to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6415,
											"name": "CreateRegionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6438,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6381,
											"name": "RegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6439,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6440,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The region to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6415,
										"name": "CreateRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6441,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6381,
										"name": "RegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6442,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6443,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing regions, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6444,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create in each region."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6421,
											"name": "UpsertRegionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6445,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6381,
											"name": "RegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6446,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing region, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6447,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6421,
										"name": "UpsertRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6448,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6381,
										"name": "RegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6449,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6450,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated region."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6451,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The region's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6452,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details to update in the region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6428,
										"name": "UpdateRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6453,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6381,
										"name": "RegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6454,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing regions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6455,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to specify which regions should be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6397,
										"name": "FilterableRegionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6456,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details to update in the regions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6428,
										"name": "UpdateRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6457,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6381,
											"name": "RegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6458,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6459,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the regions are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6460,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of IDs of regions to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6461,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6462,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a region by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the region is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6463,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the region."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6464,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6465,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6466,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a region by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6467,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6468,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6381,
												"name": "RegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6469,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6381,
										"name": "RegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6470,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6471,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of regions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6472,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6397,
										"name": "FilterableRegionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6473,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6381,
												"name": "RegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6474,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6381,
											"name": "RegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6475,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6476,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of regions along with the total count of available regions satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of regions along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6477,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6397,
										"name": "FilterableRegionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6478,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6381,
												"name": "RegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6479,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6381,
													"name": "RegionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6480,
					"name": "retrieveCountry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6481,
							"name": "retrieveCountry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a country by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved country."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6482,
									"name": "countryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6483,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region country is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region country."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6390,
												"name": "RegionCountryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6484,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6390,
										"name": "RegionCountryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6485,
					"name": "listCountries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6486,
							"name": "listCountries",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of countries based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of countries."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6487,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved region country."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6406,
										"name": "FilterableRegionCountryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6488,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region country is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region country."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6390,
												"name": "RegionCountryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6489,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6390,
											"name": "RegionCountryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6490,
					"name": "listAndCountCountries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6491,
							"name": "listAndCountCountries",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of countries along with the total count of available countries satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of countries along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6492,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved region country."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6406,
										"name": "FilterableRegionCountryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6493,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the region country is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a region country."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6390,
												"name": "RegionCountryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6494,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6390,
													"name": "RegionCountryDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6495,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6496,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves successfully when the regions are soft-deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 6497,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6498,
									"name": "regionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of IDs of regions to soft delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6499,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1999,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6497,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6500,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6501,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6502,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated country.\nThe object's keys are the ID attribute names of the regions entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`country`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the region through this relation,\nsuch as the IDs of associated country."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{example-code}\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 6503,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6504,
									"name": "regionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of IDs of regions to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6505,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the regions. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the regions's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`country`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2002,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6503,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6506,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6537,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6435,
						6442,
						6449,
						6458,
						6465,
						6470,
						6475,
						6480,
						6485,
						6490,
						6495,
						6501
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3169,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 4649,
			"name": "RegionTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 4650,
					"name": "RegionDTO__legacy",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a legacy region."
							}
						]
					},
					"children": [
						{
							"id": 4651,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4652,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency code of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4653,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4654,
							"name": "tax_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax code of the region."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4655,
							"name": "gift_cards_taxable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether gift cards in the region are taxable."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4656,
							"name": "automatic_taxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether taxes should be calculated automatically in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4657,
							"name": "tax_provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax provider's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4658,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4659,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether prices include taxes in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4651,
								4652,
								4653,
								4654,
								4655,
								4656,
								4657,
								4658,
								4659
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						4650
					]
				}
			]
		},
		{
			"id": 4660,
			"name": "SalesChannelTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 4661,
					"name": "SalesChannelLocationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel location details."
							}
						]
					},
					"children": [
						{
							"id": 4662,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated sales channel's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4663,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4664,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4665,
								"name": "SalesChannelDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4662,
								4663,
								4664
							]
						}
					]
				},
				{
					"id": 4665,
					"name": "SalesChannelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel details."
							}
						]
					},
					"children": [
						{
							"id": 4666,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4667,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4668,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the sales channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4669,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the sales channel is disabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4670,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4671,
							"name": "locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The locations of the sales channel."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4661,
									"name": "SalesChannelLocationDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4666,
								4667,
								4668,
								4669,
								4670,
								4671
							]
						}
					]
				},
				{
					"id": 4672,
					"name": "FilterableSalesChannelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved sales channel."
							}
						]
					},
					"children": [
						{
							"id": 4676,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4672,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4672,
													"name": "FilterableSalesChannelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4677,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4672,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4672,
													"name": "FilterableSalesChannelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4673,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter the sales channel by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4674,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter sales channels by their names."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4675,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter sales channels by whether they're disabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4676,
								4677,
								4673,
								4674,
								4675
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4672,
									"name": "FilterableSalesChannelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4678,
					"name": "CreateSalesChannelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel to be created."
							}
						]
					},
					"children": [
						{
							"id": 4679,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4680,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4681,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the sales channel is disabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4679,
								4680,
								4681
							]
						}
					]
				},
				{
					"id": 4682,
					"name": "UpdateSalesChannelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the sales channel."
							}
						]
					},
					"children": [
						{
							"id": 4683,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4684,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4685,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the sales channel is disabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4686,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4683,
								4684,
								4685,
								4686
							]
						}
					]
				},
				{
					"id": 4687,
					"name": "UpsertSalesChannelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4688,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4689,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the sales channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4690,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the sales channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4691,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the sales channel is disabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4692,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4688,
								4689,
								4690,
								4691,
								4692
							]
						}
					]
				},
				{
					"id": 4693,
					"name": "ISalesChannelModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the sales channel module."
							}
						]
					},
					"children": [
						{
							"id": 4694,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4695,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates sales channels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created sales channels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4696,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The sales channel to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4678,
													"name": "CreateSalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4697,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4665,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4698,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a sales channel."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created a sales channel."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4699,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The sales channel to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 4678,
												"name": "CreateSalesChannelDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4700,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4665,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4701,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4702,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4703,
											"name": "channelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4704,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4682,
												"name": "UpdateSalesChannelDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4705,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4665,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4706,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4707,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4672,
												"name": "FilterableSalesChannelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4708,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4682,
												"name": "UpdateSalesChannelDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4709,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4665,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4710,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4711,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4712,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4687,
												"name": "UpsertSalesChannelDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4713,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4665,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4714,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4715,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4687,
													"name": "UpsertSalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4716,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4665,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4717,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4718,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes sales channels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the sales channels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4719,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of sales channels to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4720,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4721,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a sales channel by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the sales channel is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4722,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4723,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4724,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4725,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a sales channel by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved sales channels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a {type name} by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4726,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4727,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4665,
														"name": "SalesChannelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4728,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4665,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4729,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4730,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of sales channels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4731,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 4672,
												"name": "FilterableSalesChannelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4732,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4665,
														"name": "SalesChannelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4733,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4665,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4734,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4735,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of sales channels along with the total count of available sales channels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sales channels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4736,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 4672,
												"name": "FilterableSalesChannelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4737,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4665,
														"name": "SalesChannelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4738,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4665,
															"name": "SalesChannelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4739,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4740,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes sales channels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the sales channels are soft deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 4741,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4742,
											"name": "salesChannelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of sales channels to soft delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4743,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4741,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4744,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4745,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4746,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted sales channels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nThe object's keys are the ID attribute names of the sales channels entity's relations,\nand its value is an array of strings, each being the ID of the record associated with the sales channel through this relation."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 4747,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4748,
											"name": "salesChannelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of sales channels to restore."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4749,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the sales channels. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the sales channels's relation attribute names."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4747,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4750,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								4694,
								4701,
								4710,
								4717,
								4724,
								4729,
								4734,
								4739,
								4745
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						4661,
						4665,
						4672,
						4678,
						4682,
						4687,
						4693
					]
				}
			]
		},
		{
			"id": 4758,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 4759,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4760,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4761,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 4762,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4763,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4764,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 4765,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Document transformer. Used to transform documents before they are added to the index."
															}
														]
													},
													"parameters": [
														{
															"id": 4766,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4761,
										4762,
										4763
									]
								}
							]
						}
					}
				},
				{
					"id": 4767,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4768,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4769,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4770,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4771,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4772,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4773,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4774,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4775,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4776,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4777,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4778,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4779,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 4780,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4781,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4782,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4783,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4784,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 4785,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4786,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4787,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4788,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4789,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4790,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4791,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4792,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4793,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4794,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4795,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4796,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4797,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 4798,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4799,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 4800,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4801,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4768
							]
						},
						{
							"title": "Methods",
							"children": [
								4769,
								4773,
								4776,
								4781,
								4786,
								4790,
								4793,
								4798
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						4767
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						4759
					]
				}
			]
		},
		{
			"id": 6514,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 6515,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 6516,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6515,
						6516
					]
				}
			]
		},
		{
			"id": 6517,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6518,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6519,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6520,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 6521,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 6522,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6518,
						6519
					]
				}
			]
		},
		{
			"id": 6523,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6524,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6525,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6526,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2043,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2043,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6527,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6528,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6529,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6517,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2043,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6530,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6531,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6532,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6533,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6534,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 6535,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2049,
												"typeArguments": [
													{
														"type": "reference",
														"target": 6534,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2049,
													"typeArguments": [
														{
															"type": "reference",
															"target": 6534,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 6536,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6524,
						6527,
						6530,
						6532
					]
				}
			]
		},
		{
			"id": 6537,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 6538,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 6539,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6547,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6540,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6547,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6541,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6542,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6543,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6544,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6545,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6523,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6546,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6538,
						6539,
						6540,
						6541,
						6542,
						6543,
						6544,
						6545,
						6546
					]
				}
			],
			"typeParameters": [
				{
					"id": 6547,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 5381,
			"name": "StoreTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 5382,
					"name": "StoreDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5384,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5385,
							"name": "supported_currency_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5386,
							"name": "default_currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5387,
							"name": "default_sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5388,
							"name": "default_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5389,
							"name": "default_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5390,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5391,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5392,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5383,
								5384,
								5385,
								5386,
								5387,
								5388,
								5389,
								5390,
								5391,
								5392
							]
						}
					]
				},
				{
					"id": 5393,
					"name": "FilterableStoreProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 5396,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5393,
											"name": "FilterableStoreProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5393,
													"name": "FilterableStoreProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 5397,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5393,
											"name": "FilterableStoreProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5393,
													"name": "FilterableStoreProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 5394,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5395,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5396,
								5397,
								5394,
								5395
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 5393,
									"name": "FilterableStoreProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 5398,
					"name": "CreateStoreDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5399,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5400,
							"name": "supported_currency_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5401,
							"name": "default_currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5402,
							"name": "default_sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5403,
							"name": "default_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5404,
							"name": "default_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5405,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5399,
								5400,
								5401,
								5402,
								5403,
								5404,
								5405
							]
						}
					]
				},
				{
					"id": 5406,
					"name": "UpsertStoreDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5407,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5408,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5409,
							"name": "supported_currency_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5410,
							"name": "default_currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5411,
							"name": "default_sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5412,
							"name": "default_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5413,
							"name": "default_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5414,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5407,
								5408,
								5409,
								5410,
								5411,
								5412,
								5413,
								5414
							]
						}
					]
				},
				{
					"id": 5415,
					"name": "UpdateStoreDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5416,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5417,
							"name": "supported_currency_codes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5418,
							"name": "default_currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5419,
							"name": "default_sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5420,
							"name": "default_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5421,
							"name": "default_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5422,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5416,
								5417,
								5418,
								5419,
								5420,
								5421,
								5422
							]
						}
					]
				},
				{
					"id": 5423,
					"name": "IStoreModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the store module."
							}
						]
					},
					"children": [
						{
							"id": 5424,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5425,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stores."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5426,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stores to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5398,
													"name": "CreateStoreDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5427,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5382,
													"name": "StoreDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5428,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a store."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created store."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5429,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The store to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5398,
												"name": "CreateStoreDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5430,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5382,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5431,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5432,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stores, or creates new ones if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated and created stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5433,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update or create in each store."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5406,
													"name": "UpsertStoreDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5434,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5382,
													"name": "StoreDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5435,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing store, or creates a new one if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated or created store."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5436,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update or create for the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5406,
												"name": "UpsertStoreDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5437,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5382,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5438,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5439,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing store."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated store."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5440,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The store's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5441,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5415,
												"name": "UpdateStoreDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5442,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5382,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5443,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stores."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5444,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to specify which stores should be updated."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5393,
												"name": "FilterableStoreProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5445,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the stores."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5415,
												"name": "UpdateStoreDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5446,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5382,
													"name": "StoreDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5447,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5448,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes stores by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stores are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5449,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of stores to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5450,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5451,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a store by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the store is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5452,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the store."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5453,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5454,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5455,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a store by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved store."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a {type name} by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5456,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5457,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the store is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5382,
														"name": "StoreDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5458,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5382,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5459,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5460,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stores based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5461,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5393,
												"name": "FilterableStoreProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5462,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the store is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5382,
														"name": "StoreDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5463,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5382,
													"name": "StoreDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5464,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5465,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stores along with the total count of available stores satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stores along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5466,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5393,
												"name": "FilterableStoreProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5467,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the store is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5382,
														"name": "StoreDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5468,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 5382,
															"name": "StoreDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5469,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5470,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stores by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves successfully when the stores are soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 5471,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5472,
											"name": "storeIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of stores to soft delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5473,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5471,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5474,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5475,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5476,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stores by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated currency.\nThe object's keys are the ID attribute names of the stores entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the store through this relation,\nsuch as the IDs of associated currency."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 5477,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5478,
											"name": "storeIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of stores to restore."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5479,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stores. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stores's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`currency`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5477,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5480,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								5424,
								5431,
								5438,
								5447,
								5454,
								5459,
								5464,
								5469,
								5475
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5382,
						5393,
						5398,
						5406,
						5415,
						5423
					]
				}
			]
		},
		{
			"id": 6604,
			"name": "TaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6605,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6606,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6607,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6608,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6609,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6605,
						6606,
						6607,
						6608,
						6609
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 4904,
					"name": "ItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 4911,
					"name": "ShippingTaxLineDTO"
				}
			]
		},
		{
			"id": 4802,
			"name": "TaxTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 4803,
					"name": "TaxRateDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4804,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the Tax Rate."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4805,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The numerical rate to charge."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4806,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code the tax rate is identified by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4807,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the Tax Rate. E.g. \"VAT\"."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4808,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4809,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the Tax Region the rate is associated with."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4810,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Flag to indicate if the Tax Rate should be combined with parent rates."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4811,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Flag to indicate if the Tax Rate is the default rate for the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4812,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the Tax Rate was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4813,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the Tax Rate was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4814,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the Tax Rate was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4815,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the user that created the Tax Rate."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4804,
								4805,
								4806,
								4807,
								4808,
								4809,
								4810,
								4811,
								4812,
								4813,
								4814,
								4815
							]
						}
					]
				},
				{
					"id": 4816,
					"name": "TaxProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4817,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4818,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4817,
								4818
							]
						}
					]
				},
				{
					"id": 4819,
					"name": "FilterableTaxRateProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4828,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4819,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4819,
													"name": "FilterableTaxRateProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4829,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4819,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4819,
													"name": "FilterableTaxRateProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4820,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4821,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4822,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4823,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4824,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4825,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4826,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4827,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4828,
								4829,
								4820,
								4821,
								4822,
								4823,
								4824,
								4825,
								4826,
								4827
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4819,
									"name": "FilterableTaxRateProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4830,
					"name": "TaxRegionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4831,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4832,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4833,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4834,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4835,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4836,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4837,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4838,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4839,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4831,
								4832,
								4833,
								4834,
								4835,
								4836,
								4837,
								4838,
								4839
							]
						}
					]
				},
				{
					"id": 4840,
					"name": "FilterableTaxRegionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4849,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4840,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4840,
													"name": "FilterableTaxRegionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4850,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4840,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4840,
													"name": "FilterableTaxRegionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4841,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4842,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4843,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4844,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4845,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									}
								]
							}
						},
						{
							"id": 4846,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4847,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4848,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4849,
								4850,
								4841,
								4842,
								4843,
								4844,
								4845,
								4846,
								4847,
								4848
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4840,
									"name": "FilterableTaxRegionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4851,
					"name": "TaxRateRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4852,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4853,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4854,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4855,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4856,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4803,
								"name": "TaxRateDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4857,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4858,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4859,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4860,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4852,
								4853,
								4854,
								4855,
								4856,
								4857,
								4858,
								4859,
								4860
							]
						}
					]
				},
				{
					"id": 4861,
					"name": "FilterableTaxRateRuleProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 4870,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4861,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4861,
													"name": "FilterableTaxRateRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 4871,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 4861,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4861,
													"name": "FilterableTaxRateRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 4862,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4863,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4864,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 4865,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4819,
								"name": "FilterableTaxRateProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4866,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									}
								]
							}
						},
						{
							"id": 4867,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4868,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1842,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4869,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1842,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4870,
								4871,
								4862,
								4863,
								4864,
								4865,
								4866,
								4867,
								4868,
								4869
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4861,
									"name": "FilterableTaxRateRuleProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4872,
					"name": "TaxableItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4873,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4874,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4875,
							"name": "product_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4876,
							"name": "product_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4877,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4878,
							"name": "product_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4879,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4880,
							"name": "product_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4881,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4882,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4883,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4873,
								4874,
								4875,
								4876,
								4877,
								4878,
								4879,
								4880,
								4881,
								4882,
								4883
							]
						}
					]
				},
				{
					"id": 4884,
					"name": "TaxableShippingDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4885,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4886,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4887,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4888,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4885,
								4886,
								4887,
								4888
							]
						}
					]
				},
				{
					"id": 4889,
					"name": "TaxCalculationContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4890,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4891,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4892,
											"name": "country_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4893,
											"name": "province_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4894,
											"name": "address_1",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4895,
											"name": "address_2",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4896,
											"name": "city",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4897,
											"name": "postal_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4892,
												4893,
												4894,
												4895,
												4896,
												4897
											]
										}
									]
								}
							}
						},
						{
							"id": 4898,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4899,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4900,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4901,
											"name": "email",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4902,
											"name": "customer_groups",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4900,
												4901,
												4902
											]
										}
									]
								}
							}
						},
						{
							"id": 4903,
							"name": "is_return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4890,
								4898,
								4903
							]
						}
					]
				},
				{
					"id": 4904,
					"name": "ItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4906,
							"name": "rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6605,
								"name": "TaxLineDTO.rate_id"
							}
						},
						{
							"id": 4907,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6606,
								"name": "TaxLineDTO.rate"
							}
						},
						{
							"id": 4908,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6607,
								"name": "TaxLineDTO.code"
							}
						},
						{
							"id": 4909,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6608,
								"name": "TaxLineDTO.name"
							}
						},
						{
							"id": 4910,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6609,
								"name": "TaxLineDTO.provider_id"
							}
						},
						{
							"id": 4905,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4906,
								4907,
								4908,
								4909,
								4910,
								4905
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6604,
							"name": "TaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4911,
					"name": "ShippingTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4913,
							"name": "rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6605,
								"name": "TaxLineDTO.rate_id"
							}
						},
						{
							"id": 4914,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6606,
								"name": "TaxLineDTO.rate"
							}
						},
						{
							"id": 4915,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6607,
								"name": "TaxLineDTO.code"
							}
						},
						{
							"id": 4916,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6608,
								"name": "TaxLineDTO.name"
							}
						},
						{
							"id": 4917,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 6609,
								"name": "TaxLineDTO.provider_id"
							}
						},
						{
							"id": 4912,
							"name": "shipping_line_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4913,
								4914,
								4915,
								4916,
								4917,
								4912
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 6604,
							"name": "TaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 4918,
					"name": "CreateTaxRateDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4919,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4920,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4921,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4922,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4923,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 4956,
											"name": "CreateTaxRateRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "tax_rate_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 4924,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4925,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4926,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4919,
								4920,
								4921,
								4922,
								4923,
								4924,
								4925,
								4926
							]
						}
					]
				},
				{
					"id": 4927,
					"name": "UpsertTaxRateDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4928,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4929,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4930,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4931,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4932,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4933,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4934,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4928,
								4929,
								4930,
								4931,
								4932,
								4933,
								4934
							]
						}
					]
				},
				{
					"id": 4935,
					"name": "UpdateTaxRateDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4936,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 4937,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4938,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4939,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 4956,
											"name": "CreateTaxRateRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "tax_rate_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 4940,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4941,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4942,
							"name": "updated_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4943,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4936,
								4937,
								4938,
								4939,
								4940,
								4941,
								4942,
								4943
							]
						}
					]
				},
				{
					"id": 4944,
					"name": "CreateTaxRegionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4945,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4946,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4947,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4948,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4949,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4950,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4951,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4952,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 4953,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 4954,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4955,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4952,
												4953,
												4954,
												4955
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4945,
								4946,
								4947,
								4948,
								4949,
								4950
							]
						}
					]
				},
				{
					"id": 4956,
					"name": "CreateTaxRateRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4957,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4958,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4959,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4960,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4961,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4957,
								4958,
								4959,
								4960,
								4961
							]
						}
					]
				},
				{
					"id": 5098,
					"name": "ShippingTaxCalculationLine",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A shipping method and the tax rates configured to apply to the\nshipping method."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5099,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5100,
									"name": "shipping_line",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "TaxableShippingDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5101,
									"name": "rates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rates applicable on the shipping method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4803,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5100,
										5101
									]
								}
							]
						}
					}
				},
				{
					"id": 5102,
					"name": "ItemTaxCalculationLine",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A line item and the tax rates configured to apply to the\nproduct contained in the line item."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5103,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5104,
									"name": "line_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4872,
										"name": "TaxableItemDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5105,
									"name": "rates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rates applicable on the item."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4803,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5104,
										5105
									]
								}
							]
						}
					}
				},
				{
					"id": 5106,
					"name": "ITaxProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5107,
							"name": "getIdentifier",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5108,
									"name": "getIdentifier",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 5109,
							"name": "getTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5110,
									"name": "getTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5111,
											"name": "itemLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5102,
													"name": "ItemTaxCalculationLine",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5112,
											"name": "shippingLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5098,
													"name": "ShippingTaxCalculationLine",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5113,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4889,
												"name": "TaxCalculationContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 4904,
															"name": "ItemTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 4911,
															"name": "ShippingTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								5107,
								5109
							]
						}
					]
				},
				{
					"id": 4962,
					"name": "ITaxModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4963,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4964,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4965,
											"name": "taxRateId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4966,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4803,
														"name": "TaxRateDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4967,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4803,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4968,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4969,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4970,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4819,
												"name": "FilterableTaxRateProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4971,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4803,
														"name": "TaxRateDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4972,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4803,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4973,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4974,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4975,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4819,
												"name": "FilterableTaxRateProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4976,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4803,
														"name": "TaxRateDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4977,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4803,
															"name": "TaxRateDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4978,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4979,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4980,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4918,
													"name": "CreateTaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 4981,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4803,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4982,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4983,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4918,
												"name": "CreateTaxRateDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4984,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4803,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4985,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4986,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4987,
											"name": "taxRateId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4988,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4935,
												"name": "UpdateTaxRateDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4989,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4803,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4990,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4991,
											"name": "taxRateIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4992,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4935,
												"name": "UpdateTaxRateDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4993,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4803,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 4994,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4995,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4819,
												"name": "FilterableTaxRateProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4996,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4935,
												"name": "UpdateTaxRateDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 4997,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4803,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4998,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 4999,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5000,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4927,
												"name": "UpsertTaxRateDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5001,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4803,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5002,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5003,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4927,
													"name": "UpsertTaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5004,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4803,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5005,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5006,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5007,
											"name": "taxRateIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5008,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5009,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5010,
											"name": "taxRateId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5011,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5012,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5013,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5014,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5015,
											"name": "taxRateIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5016,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5014,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5017,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5018,
							"name": "createTaxRegions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5019,
									"name": "createTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5020,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4944,
												"name": "CreateTaxRegionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5021,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4830,
												"name": "TaxRegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5022,
									"name": "createTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5023,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4944,
													"name": "CreateTaxRegionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5024,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4830,
													"name": "TaxRegionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5025,
							"name": "deleteTaxRegions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5026,
									"name": "deleteTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5027,
											"name": "taxRegionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5028,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5029,
									"name": "deleteTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5030,
											"name": "taxRegionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5031,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5032,
							"name": "listTaxRegions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5033,
									"name": "listTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5034,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4840,
												"name": "FilterableTaxRegionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5035,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4830,
														"name": "TaxRegionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5036,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4830,
													"name": "TaxRegionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5037,
							"name": "createTaxRateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5038,
									"name": "createTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5039,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4956,
												"name": "CreateTaxRateRuleDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5040,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4851,
												"name": "TaxRateRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5041,
									"name": "createTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5042,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4956,
													"name": "CreateTaxRateRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5043,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4851,
													"name": "TaxRateRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5044,
							"name": "deleteTaxRateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5045,
									"name": "deleteTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5046,
											"name": "taxRateRuleId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5047,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5048,
									"name": "deleteTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5049,
											"name": "taxRateRuleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5050,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5051,
							"name": "listTaxRateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5052,
									"name": "listTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5053,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4861,
												"name": "FilterableTaxRateRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5054,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4851,
														"name": "TaxRateRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5055,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4851,
													"name": "TaxRateRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5056,
							"name": "getTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5057,
									"name": "getTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5058,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 4872,
															"name": "TaxableItemDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 4884,
															"name": "TaxableShippingDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 5059,
											"name": "calculationContext",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4889,
												"name": "TaxCalculationContext",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5060,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 4904,
															"name": "ItemTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 4911,
															"name": "ShippingTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5061,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5062,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5063,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5064,
											"name": "taxRateIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5065,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5063,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5066,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5067,
							"name": "softDeleteTaxRegions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5068,
									"name": "softDeleteTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5069,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5070,
											"name": "taxRegionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5071,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5069,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5072,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5073,
							"name": "restoreTaxRegions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5074,
									"name": "restoreTaxRegions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5075,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5076,
											"name": "taxRegionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5077,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5075,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5078,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5079,
							"name": "softDeleteTaxRateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5080,
									"name": "softDeleteTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5081,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5082,
											"name": "taxRateRuleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5083,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5081,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5084,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5085,
							"name": "restoreTaxRateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5086,
									"name": "restoreTaxRateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5087,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5088,
											"name": "taxRateRuleIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5089,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5087,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5090,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								4963,
								4968,
								4973,
								4978,
								4985,
								4998,
								5005,
								5012,
								5018,
								5025,
								5032,
								5037,
								5044,
								5051,
								5056,
								5061,
								5067,
								5073,
								5079,
								5085
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						4803,
						4816,
						4819,
						4830,
						4840,
						4851,
						4861,
						4872,
						4884,
						4889,
						4904,
						4911,
						4918,
						4927,
						4935,
						4944,
						4956,
						5106,
						4962
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						5098,
						5102
					]
				}
			]
		},
		{
			"id": 6548,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6549,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6550,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6550
							]
						}
					],
					"indexSignature": {
						"id": 6551,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 6552,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 6553,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6548,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		},
		{
			"id": 5114,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 5115,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5116,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5117,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5118,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								5116
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 2060,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5115
					]
				}
			]
		},
		{
			"id": 5119,
			"name": "UserTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 5120,
					"name": "UserDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user details."
							}
						]
					},
					"children": [
						{
							"id": 5121,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the user."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5122,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the user."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5123,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5124,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5125,
							"name": "avatar_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The avatar URL of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5126,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5127,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 5128,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The updated date of the user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 5129,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5121,
								5122,
								5123,
								5124,
								5125,
								5126,
								5127,
								5128,
								5129
							]
						}
					]
				},
				{
					"id": 5130,
					"name": "FilterableUserProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved user."
							}
						]
					},
					"children": [
						{
							"id": 5135,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5130,
											"name": "FilterableUserProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5130,
													"name": "FilterableUserProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 5136,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5130,
											"name": "FilterableUserProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5130,
													"name": "FilterableUserProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 5131,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter users by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5132,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter users by their email."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5133,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter users by their first name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5134,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter users by their last name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5135,
								5136,
								5131,
								5132,
								5133,
								5134
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 5130,
									"name": "FilterableUserProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 5137,
					"name": "InviteDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5138,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5139,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5140,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5141,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5142,
							"name": "expires_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 5143,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5144,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 5145,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 5146,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5138,
								5139,
								5140,
								5141,
								5142,
								5143,
								5144,
								5145,
								5146
							]
						}
					]
				},
				{
					"id": 5147,
					"name": "FilterableInviteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 5151,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5147,
											"name": "FilterableInviteProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5147,
													"name": "FilterableInviteProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1865,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 5152,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 5147,
											"name": "FilterableInviteProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 1864,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5147,
													"name": "FilterableInviteProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1866,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 5148,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5149,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5150,
							"name": "expires_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1338,
								"name": "DateComparisonOperator",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5151,
								5152,
								5148,
								5149,
								5150
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1864,
							"typeArguments": [
								{
									"type": "reference",
									"target": 5147,
									"name": "FilterableInviteProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 5153,
					"name": "CreateUserDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user to be created."
							}
						]
					},
					"children": [
						{
							"id": 5154,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the user."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5155,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5156,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5157,
							"name": "avatar_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The avatar URL of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5158,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5154,
								5155,
								5156,
								5157,
								5158
							]
						}
					]
				},
				{
					"id": 5159,
					"name": "UpdateUserDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the user."
							}
						]
					},
					"children": [
						{
							"id": 5162,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.first_name"
							}
						},
						{
							"id": 5163,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.last_name"
							}
						},
						{
							"id": 5164,
							"name": "avatar_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The avatar URL of the user."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.avatar_url"
							}
						},
						{
							"id": 5161,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 5160,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the user."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5162,
								5163,
								5164,
								5161,
								5160
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 5153,
											"name": "CreateUserDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "email"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 5165,
					"name": "CreateInviteDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5166,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5167,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5168,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5166,
								5167,
								5168
							]
						}
					]
				},
				{
					"id": 5169,
					"name": "UpdateInviteDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5172,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.accepted"
							}
						},
						{
							"id": 5171,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 5170,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5172,
								5171,
								5170
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 5165,
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "email"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 5173,
					"name": "IUserModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the user module."
							}
						]
					},
					"children": [
						{
							"id": 5174,
							"name": "validateInviteToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5175,
									"name": "validateInviteToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method validates an invite token."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The associated invite's details."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5176,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The token to validate."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5177,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5137,
												"name": "InviteDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5178,
							"name": "refreshInviteTokens",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5179,
									"name": "refreshInviteTokens",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5180,
											"name": "inviteIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5181,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5137,
													"name": "InviteDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5182,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5183,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a user by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved user."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a {type name} by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5184,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5185,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the user is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5120,
														"name": "UserDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5186,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5120,
												"name": "UserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5187,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5188,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of users based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of users."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5189,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5130,
												"name": "FilterableUserProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5190,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the user is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5120,
														"name": "UserDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5191,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5120,
													"name": "UserDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5192,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5193,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of user along with the total count of available users satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of users along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of {type name} using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`{default limit}`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5194,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5130,
												"name": "FilterableUserProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5195,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the user is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5120,
														"name": "UserDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5196,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 5120,
															"name": "UserDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5197,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5198,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates users."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created users."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5199,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The users to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5153,
													"name": "CreateUserDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5200,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5120,
													"name": "UserDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5201,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a user."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created user."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5202,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The user to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5153,
												"name": "CreateUserDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5203,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5120,
												"name": "UserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5204,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5205,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing users."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated users."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5206,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in each user."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5159,
													"name": "UpdateUserDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5207,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5120,
													"name": "UserDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5208,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing user."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated user."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5209,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 5159,
												"name": "UpdateUserDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5210,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5120,
												"name": "UserDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5211,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5212,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes users by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the users are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 5213,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of IDs of users to delete."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5214,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5215,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5216,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5217,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5218,
											"name": "userIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5219,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5217,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5220,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5217,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5221,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5222,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5223,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5224,
											"name": "userIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5225,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5223,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5226,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5223,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5227,
							"name": "retrieveInvite",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5228,
									"name": "retrieveInvite",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5229,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5230,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5137,
														"name": "InviteDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5231,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5137,
												"name": "InviteDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5232,
							"name": "listInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5233,
									"name": "listInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5234,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 5130,
												"name": "FilterableUserProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5235,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5137,
														"name": "InviteDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5236,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5137,
													"name": "InviteDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5237,
							"name": "listAndCountInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5238,
									"name": "listAndCountInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5239,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 5130,
												"name": "FilterableUserProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5240,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1272,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5137,
														"name": "InviteDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5241,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 5137,
															"name": "InviteDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5242,
							"name": "createInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5243,
									"name": "createInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5244,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5165,
													"name": "CreateInviteDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5245,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5137,
													"name": "InviteDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5246,
									"name": "createInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5247,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 5165,
												"name": "CreateInviteDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5248,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5137,
												"name": "InviteDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5249,
							"name": "updateInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5250,
									"name": "updateInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5251,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5169,
													"name": "UpdateInviteDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 5252,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5137,
													"name": "InviteDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 5253,
									"name": "updateInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5254,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 5169,
												"name": "UpdateInviteDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5255,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5137,
												"name": "InviteDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5256,
							"name": "deleteInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5257,
									"name": "deleteInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5258,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5259,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5260,
							"name": "softDeleteInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5261,
									"name": "softDeleteInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5262,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5263,
											"name": "inviteIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5264,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1999,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5262,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5265,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5262,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 5266,
							"name": "restoreInvites",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 5267,
									"name": "restoreInvites",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 5268,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 5269,
											"name": "inviteIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5270,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2002,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5268,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 5271,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 6537,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5268,
																"name": "TReturnableLinkableKeys",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								5174,
								5178,
								5182,
								5187,
								5192,
								5197,
								5204,
								5211,
								5215,
								5221,
								5227,
								5232,
								5237,
								5242,
								5249,
								5256,
								5260,
								5266
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3169,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5120,
						5130,
						5137,
						5147,
						5153,
						5159,
						5165,
						5169,
						5173
					]
				}
			]
		},
		{
			"id": 5279,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 5280,
					"name": "CartWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 5281,
							"name": "CreateLineItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5282,
									"name": "variant_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5283,
									"name": "quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5282,
										5283
									]
								}
							]
						},
						{
							"id": 5284,
							"name": "CreateCartWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5285,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5286,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5287,
									"name": "items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5281,
											"name": "CreateLineItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5288,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 5289,
									"name": "sales_channel_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5290,
									"name": "shipping_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5291,
									"name": "billing_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5292,
									"name": "billing_address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "AddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5293,
									"name": "shipping_address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "AddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5294,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5295,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5285,
										5286,
										5287,
										5288,
										5289,
										5290,
										5291,
										5292,
										5293,
										5294,
										5295
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5281,
								5284
							]
						}
					]
				},
				{
					"id": 5296,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 5297,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5298,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5299,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5300,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 5301,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5300,
														5301
													]
												}
											]
										}
									}
								},
								{
									"id": 5302,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5303,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5304,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 5305,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5304,
														5305
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5298,
										5302
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5297
							]
						}
					]
				},
				{
					"id": 5364,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 5369,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5370,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5371,
									"name": "auth_user_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5372,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5373,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5374,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 5375,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 5376,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 5377,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5374,
														5375,
														5376,
														5377
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5370,
										5371,
										5372
									]
								}
							]
						},
						{
							"id": 5365,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5366,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5165,
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5366
									]
								}
							]
						},
						{
							"id": 5367,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5368,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5368
									]
								}
							]
						},
						{
							"id": 5378,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5379,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5379
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5369,
								5365,
								5367,
								5378
							]
						}
					]
				},
				{
					"id": 5306,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 5307,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5308,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5309,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5310,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6085,
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5311,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5312,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6161,
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5313,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 5314,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 5315,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 5316,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 5317,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 5318,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 5319,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															5315,
															5316,
															5317,
															5318,
															5319
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 5320,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 5321,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 5322,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															5322
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5308,
										5309,
										5310,
										5311,
										5312,
										5313,
										5320
									]
								}
							]
						},
						{
							"id": 5323,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5324,
									"name": "rule_attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5325,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5324,
										5325
									]
								}
							]
						},
						{
							"id": 5326,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5327,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5328,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5329,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 5330,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5331,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5332,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5327,
										5328,
										5329,
										5330,
										5331,
										5332
									]
								}
							]
						},
						{
							"id": 5333,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5334,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5344,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5334
									]
								}
							]
						},
						{
							"id": 5335,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5336,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5337,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5336,
										5337
									]
								}
							]
						},
						{
							"id": 5338,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5339,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5340,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5339,
										5340
									]
								}
							]
						},
						{
							"id": 5341,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5342,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5343,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5342,
										5343
									]
								}
							]
						},
						{
							"id": 5344,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5345,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5346,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5347,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5348,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5349,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 5350,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 5351,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6085,
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5352,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5353,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6610,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5354,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6120,
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5345,
										5346,
										5347,
										5348,
										5349,
										5350,
										5351,
										5352,
										5353,
										5354
									]
								}
							]
						},
						{
							"id": 5355,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5356,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5356
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5307,
								5323,
								5326,
								5333,
								5335,
								5338,
								5341,
								5344,
								5355
							]
						}
					]
				},
				{
					"id": 5357,
					"name": "UserWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 5358,
							"name": "CreateUsersWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5359,
									"name": "users",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5153,
											"name": "CreateUserDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5359
									]
								}
							]
						},
						{
							"id": 5362,
							"name": "DeleteUserWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5363,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5363
									]
								}
							]
						},
						{
							"id": 5360,
							"name": "UpdateUsersWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 5361,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5159,
											"name": "UpdateUserDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5361
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5358,
								5362,
								5360
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						5280,
						5296,
						5364,
						5306,
						5357
					]
				}
			]
		},
		{
			"id": 6610,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6611,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6612,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6613,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6614,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6615,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6616,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6611,
						6612,
						6613,
						6614,
						6615,
						6616
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				5380,
				209,
				210,
				224,
				1254,
				5488,
				1444,
				1835,
				2007,
				2109,
				2128,
				2953,
				3011,
				3281,
				4272,
				4649,
				4660,
				4758,
				5381,
				4802,
				5114,
				5119,
				5279
			]
		},
		{
			"title": "Enumerations",
			"children": [
				5646,
				5652,
				5848,
				6085,
				6088
			]
		},
		{
			"title": "Interfaces",
			"children": [
				17,
				28,
				35,
				39,
				44,
				46,
				49,
				167,
				175,
				183,
				188,
				193,
				198,
				201,
				202,
				118,
				6554,
				6573,
				5521,
				5524,
				5529,
				5532,
				5534,
				6598,
				5548,
				5551,
				5565,
				5568,
				5571,
				5589,
				5596,
				5604,
				5658,
				5673,
				5680,
				5692,
				5702,
				5712,
				5733,
				5746,
				5752,
				5758,
				5769,
				5772,
				5777,
				5782,
				5788,
				5794,
				5799,
				5810,
				5816,
				5820,
				5824,
				5830,
				5836,
				5839,
				5853,
				5870,
				5880,
				5894,
				5933,
				6055,
				6058,
				6068,
				6074,
				6080,
				6091,
				6103,
				6111,
				6119,
				6120,
				6121,
				6131,
				6140,
				6148,
				6155,
				6161,
				6167,
				6172,
				6178,
				6182,
				6186,
				6190,
				6193,
				6196,
				6199,
				6202,
				6215,
				6221,
				6229,
				6310,
				6321,
				6326,
				6332,
				6338,
				6343,
				6346,
				6350,
				6236,
				6242,
				6244,
				6246,
				6250,
				6259,
				6280,
				6285,
				6292,
				6295,
				6298,
				6303,
				6305,
				6356,
				6363,
				6368,
				6373,
				6379,
				6381,
				6390,
				6397,
				6406,
				6415,
				6421,
				6428,
				6434,
				6514,
				6517,
				6523,
				6537,
				6604,
				6610
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1,
				16,
				6568,
				6562,
				6564,
				6617,
				6635,
				6625,
				6623,
				6621,
				6561,
				6566,
				5538,
				6603,
				5846,
				5847,
				5859,
				5864,
				5872,
				5876,
				5884,
				5888,
				6548,
				6553
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/types/src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"2": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"4": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"5": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"6": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"7": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"8": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"9": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"10": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"11": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"12": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"13": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"14": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"15": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"16": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyType"
		},
		"17": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO"
		},
		"18": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.id"
		},
		"19": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.token"
		},
		"20": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.redacted"
		},
		"21": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.title"
		},
		"22": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.type"
		},
		"23": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.last_used_at"
		},
		"24": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.created_by"
		},
		"25": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.created_at"
		},
		"26": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.revoked_by"
		},
		"27": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "ApiKeyDTO.revoked_at"
		},
		"28": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "FilterableApiKeyProps"
		},
		"29": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "FilterableApiKeyProps.id"
		},
		"30": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "FilterableApiKeyProps.token"
		},
		"31": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "FilterableApiKeyProps.title"
		},
		"32": {
			"sourceFileName": "../../../packages/types/src/api-key/common/api-key.ts",
			"qualifiedName": "FilterableApiKeyProps.type"
		},
		"33": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"34": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "CreateApiKeyDTO"
		},
		"36": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "CreateApiKeyDTO.title"
		},
		"37": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "CreateApiKeyDTO.type"
		},
		"38": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "CreateApiKeyDTO.created_by"
		},
		"39": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpsertApiKeyDTO"
		},
		"40": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpsertApiKeyDTO.id"
		},
		"41": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpsertApiKeyDTO.title"
		},
		"42": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpsertApiKeyDTO.type"
		},
		"43": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpsertApiKeyDTO.created_by"
		},
		"44": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpdateApiKeyDTO"
		},
		"45": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "UpdateApiKeyDTO.title"
		},
		"46": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "RevokeApiKeyDTO"
		},
		"47": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "RevokeApiKeyDTO.revoked_by"
		},
		"48": {
			"sourceFileName": "../../../packages/types/src/api-key/mutations/api-key.ts",
			"qualifiedName": "RevokeApiKeyDTO.revoke_in"
		},
		"49": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService"
		},
		"50": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.create"
		},
		"51": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.create"
		},
		"52": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"53": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"54": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.create"
		},
		"55": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"56": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"57": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.upsert"
		},
		"58": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.upsert"
		},
		"59": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"60": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.upsert"
		},
		"62": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"63": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"64": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.update"
		},
		"65": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.update"
		},
		"66": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "id"
		},
		"67": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"68": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"69": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.update"
		},
		"70": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "selector"
		},
		"71": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"72": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"73": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.delete"
		},
		"74": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.delete"
		},
		"75": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "ids"
		},
		"76": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"77": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.delete"
		},
		"78": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "id"
		},
		"79": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"80": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.retrieve"
		},
		"81": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.retrieve"
		},
		"82": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "id"
		},
		"83": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "config"
		},
		"84": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"85": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.list"
		},
		"86": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.list"
		},
		"87": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "filters"
		},
		"88": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "config"
		},
		"89": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"90": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.listAndCount"
		},
		"91": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.listAndCount"
		},
		"92": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "filters"
		},
		"93": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "config"
		},
		"94": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"95": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.revoke"
		},
		"96": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.revoke"
		},
		"97": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "selector"
		},
		"98": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"99": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"100": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.revoke"
		},
		"101": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "id"
		},
		"102": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "data"
		},
		"103": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"104": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.authenticate"
		},
		"105": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "IApiKeyModuleService.authenticate"
		},
		"106": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "token"
		},
		"107": {
			"sourceFileName": "../../../packages/types/src/api-key/service.ts",
			"qualifiedName": "sharedContext"
		},
		"118": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService"
		},
		"119": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.authenticate"
		},
		"120": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.authenticate"
		},
		"121": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "provider"
		},
		"122": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "providerData"
		},
		"123": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.validateCallback"
		},
		"124": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.validateCallback"
		},
		"125": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "provider"
		},
		"126": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "providerData"
		},
		"127": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.retrieve"
		},
		"128": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.retrieve"
		},
		"129": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "id"
		},
		"130": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "config"
		},
		"131": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"132": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.list"
		},
		"133": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.list"
		},
		"134": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "filters"
		},
		"135": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "config"
		},
		"136": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"137": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.listAndCount"
		},
		"138": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.listAndCount"
		},
		"139": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "filters"
		},
		"140": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "config"
		},
		"141": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"142": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.create"
		},
		"143": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.create"
		},
		"144": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "data"
		},
		"145": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"146": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.create"
		},
		"147": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "data"
		},
		"148": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"149": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.update"
		},
		"150": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.update"
		},
		"151": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "data"
		},
		"152": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"153": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.update"
		},
		"154": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "data"
		},
		"155": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"156": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.delete"
		},
		"157": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "IAuthModuleService.delete"
		},
		"158": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "ids"
		},
		"159": {
			"sourceFileName": "../../../packages/types/src/auth/service.ts",
			"qualifiedName": "sharedContext"
		},
		"167": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "AuthUserDTO"
		},
		"168": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.id"
		},
		"169": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.provider"
		},
		"170": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.entity_id"
		},
		"171": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.scope"
		},
		"172": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.provider_metadata"
		},
		"173": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.user_metadata"
		},
		"174": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.app_metadata"
		},
		"175": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "CreateAuthUserDTO"
		},
		"176": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.id"
		},
		"177": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.provider"
		},
		"178": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.entity_id"
		},
		"179": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.scope"
		},
		"180": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.provider_metadata"
		},
		"181": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.user_metadata"
		},
		"182": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.app_metadata"
		},
		"183": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "UpdateAuthUserDTO"
		},
		"184": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.id"
		},
		"185": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.provider_metadata"
		},
		"186": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.user_metadata"
		},
		"187": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "__type.app_metadata"
		},
		"188": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "FilterableAuthUserProps"
		},
		"189": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "FilterableAuthUserProps.id"
		},
		"190": {
			"sourceFileName": "../../../packages/types/src/auth/common/auth-user.ts",
			"qualifiedName": "FilterableAuthUserProps.provider"
		},
		"191": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"192": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"193": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "AuthenticationResponse"
		},
		"194": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.success"
		},
		"195": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.authUser"
		},
		"196": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.error"
		},
		"197": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.location"
		},
		"198": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "AuthModuleProviderConfig"
		},
		"199": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.name"
		},
		"200": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.scopes"
		},
		"201": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "AuthProviderScope"
		},
		"202": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "AuthenticationInput"
		},
		"203": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.url"
		},
		"204": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.headers"
		},
		"205": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.query"
		},
		"206": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.body"
		},
		"207": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.authScope"
		},
		"208": {
			"sourceFileName": "../../../packages/types/src/auth/common/provider.ts",
			"qualifiedName": "__type.protocol"
		},
		"209": {
			"sourceFileName": "../../../packages/types/src/auth/index.ts",
			"qualifiedName": ""
		},
		"210": {
			"sourceFileName": "../../../packages/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"211": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"212": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"213": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"214": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"215": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"216": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"217": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"218": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"219": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"220": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"221": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"222": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"223": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"224": {
			"sourceFileName": "../../../packages/types/src/cart/index.ts",
			"qualifiedName": ""
		},
		"225": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO"
		},
		"226": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"227": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"228": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"229": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"230": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"231": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"232": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"233": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"234": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"235": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO"
		},
		"236": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO.shipping_method"
		},
		"237": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"238": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"239": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"240": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"241": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"242": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"243": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"244": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"245": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"246": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"247": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO"
		},
		"248": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO.item"
		},
		"249": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO.item_id"
		},
		"250": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"251": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"252": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"253": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"254": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"255": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"256": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"257": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"258": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"259": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"260": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"261": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"262": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"263": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"264": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"265": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"266": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"267": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"268": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO"
		},
		"269": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.shipping_method"
		},
		"270": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.shipping_method_id"
		},
		"271": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"272": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"273": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"274": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"275": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"276": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"277": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"278": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"279": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO"
		},
		"280": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.item"
		},
		"281": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.item_id"
		},
		"282": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"283": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"284": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"285": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"286": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"287": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"288": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"289": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"290": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO"
		},
		"291": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.id"
		},
		"292": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.customer_id"
		},
		"293": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.first_name"
		},
		"294": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.last_name"
		},
		"295": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.phone"
		},
		"296": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.company"
		},
		"297": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.address_1"
		},
		"298": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.address_2"
		},
		"299": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.city"
		},
		"300": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.country_code"
		},
		"301": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.province"
		},
		"302": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.postal_code"
		},
		"303": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.metadata"
		},
		"304": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.created_at"
		},
		"305": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.updated_at"
		},
		"306": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO"
		},
		"307": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.id"
		},
		"308": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.cart_id"
		},
		"309": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.name"
		},
		"310": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.description"
		},
		"311": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.amount"
		},
		"312": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.is_tax_inclusive"
		},
		"313": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.shipping_option_id"
		},
		"314": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.data"
		},
		"315": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.metadata"
		},
		"316": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.tax_lines"
		},
		"317": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.adjustments"
		},
		"318": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.created_at"
		},
		"319": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.updated_at"
		},
		"320": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_total"
		},
		"321": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_subtotal"
		},
		"322": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_tax_total"
		},
		"323": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.total"
		},
		"324": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.subtotal"
		},
		"325": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.tax_total"
		},
		"326": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.discount_total"
		},
		"327": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.discount_tax_total"
		},
		"328": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO"
		},
		"329": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_total"
		},
		"330": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_subtotal"
		},
		"331": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_tax_total"
		},
		"332": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_total"
		},
		"333": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_subtotal"
		},
		"334": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_tax_total"
		},
		"335": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.total"
		},
		"336": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.subtotal"
		},
		"337": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.tax_total"
		},
		"338": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_total"
		},
		"339": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_tax_total"
		},
		"340": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO"
		},
		"341": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.id"
		},
		"342": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.title"
		},
		"343": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.subtitle"
		},
		"344": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.thumbnail"
		},
		"345": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.quantity"
		},
		"346": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_id"
		},
		"347": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_title"
		},
		"348": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_description"
		},
		"349": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_subtitle"
		},
		"350": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_type"
		},
		"351": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_collection"
		},
		"352": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_handle"
		},
		"353": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_id"
		},
		"354": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_sku"
		},
		"355": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_barcode"
		},
		"356": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_title"
		},
		"357": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_option_values"
		},
		"358": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.requires_shipping"
		},
		"359": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.is_discountable"
		},
		"360": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.is_tax_inclusive"
		},
		"361": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.compare_at_unit_price"
		},
		"362": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.unit_price"
		},
		"363": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.tax_lines"
		},
		"364": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.adjustments"
		},
		"365": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.cart"
		},
		"366": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.cart_id"
		},
		"367": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.metadata"
		},
		"368": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.created_at"
		},
		"369": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.updated_at"
		},
		"370": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.deleted_at"
		},
		"371": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_total"
		},
		"372": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_subtotal"
		},
		"373": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_tax_total"
		},
		"374": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_total"
		},
		"375": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_subtotal"
		},
		"376": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_tax_total"
		},
		"377": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.total"
		},
		"378": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.subtotal"
		},
		"379": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.tax_total"
		},
		"380": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_total"
		},
		"381": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_tax_total"
		},
		"382": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO"
		},
		"383": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.id"
		},
		"384": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.region_id"
		},
		"385": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.customer_id"
		},
		"386": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.sales_channel_id"
		},
		"387": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.email"
		},
		"388": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.currency_code"
		},
		"389": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_address"
		},
		"390": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.billing_address"
		},
		"391": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.items"
		},
		"392": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_methods"
		},
		"393": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.metadata"
		},
		"394": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.created_at"
		},
		"395": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.updated_at"
		},
		"396": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_total"
		},
		"397": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_subtotal"
		},
		"398": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_tax_total"
		},
		"399": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_total"
		},
		"400": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_subtotal"
		},
		"401": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_tax_total"
		},
		"402": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_total"
		},
		"403": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_subtotal"
		},
		"404": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_tax_total"
		},
		"405": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.total"
		},
		"406": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.subtotal"
		},
		"407": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.tax_total"
		},
		"408": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_total"
		},
		"409": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_discount_total"
		},
		"410": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_tax_total"
		},
		"411": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_total"
		},
		"412": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_tax_total"
		},
		"413": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_total"
		},
		"414": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_subtotal"
		},
		"415": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_tax_total"
		},
		"416": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_total"
		},
		"417": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_subtotal"
		},
		"418": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_tax_total"
		},
		"419": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps"
		},
		"420": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.id"
		},
		"421": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.sales_channel_id"
		},
		"422": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.customer_id"
		},
		"423": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.region_id"
		},
		"424": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.created_at"
		},
		"425": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.updated_at"
		},
		"426": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"427": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"428": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableAddressProps"
		},
		"429": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableAddressProps.id"
		},
		"430": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"431": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"432": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps"
		},
		"433": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.id"
		},
		"434": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.cart_id"
		},
		"435": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.title"
		},
		"436": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.variant_id"
		},
		"437": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.product_id"
		},
		"438": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"439": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"440": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps"
		},
		"441": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.id"
		},
		"442": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.item_id"
		},
		"443": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.promotion_id"
		},
		"444": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.provider_id"
		},
		"445": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.item"
		},
		"446": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"447": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"448": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps"
		},
		"449": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.id"
		},
		"450": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.cart_id"
		},
		"451": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.name"
		},
		"452": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.shipping_option_id"
		},
		"453": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"454": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"455": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps"
		},
		"456": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.id"
		},
		"457": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.shipping_method_id"
		},
		"458": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.promotion_id"
		},
		"459": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.provider_id"
		},
		"460": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.shipping_method"
		},
		"461": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"462": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"463": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps"
		},
		"464": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.id"
		},
		"465": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.description"
		},
		"466": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.code"
		},
		"467": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.tax_rate_id"
		},
		"468": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.provider_id"
		},
		"469": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.item_id"
		},
		"470": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.item"
		},
		"471": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"472": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"473": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps"
		},
		"474": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.id"
		},
		"475": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.description"
		},
		"476": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.code"
		},
		"477": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.tax_rate_id"
		},
		"478": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.provider_id"
		},
		"479": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.shipping_method_id"
		},
		"480": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.shipping_method"
		},
		"481": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"482": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"483": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "legacy_CartDTO"
		},
		"484": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type"
		},
		"485": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.id"
		},
		"486": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.email"
		},
		"487": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.billing_address_id"
		},
		"488": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_address_id"
		},
		"489": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.region_id"
		},
		"490": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.customer_id"
		},
		"491": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.payment_id"
		},
		"492": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.completed_at"
		},
		"493": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.payment_authorized_at"
		},
		"494": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"495": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.context"
		},
		"496": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"497": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"498": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"499": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.discount_total"
		},
		"500": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.raw_discount_total"
		},
		"501": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"502": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"503": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.tax_total"
		},
		"504": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.refunded_total"
		},
		"505": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.total"
		},
		"506": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.subtotal"
		},
		"507": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.refundable_amount"
		},
		"508": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"509": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"510": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO"
		},
		"511": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"512": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"513": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"514": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"515": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"516": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"517": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"518": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"519": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"520": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"521": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"522": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"523": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAddressDTO"
		},
		"524": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAddressDTO.id"
		},
		"525": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"526": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"527": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"528": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"529": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"530": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"531": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"532": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"533": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"534": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"535": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"536": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"537": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAddressDTO"
		},
		"538": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"539": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"540": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"541": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"542": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"543": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"544": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"545": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"546": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"547": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"548": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"549": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"550": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO"
		},
		"551": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.region_id"
		},
		"552": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.customer_id"
		},
		"553": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.sales_channel_id"
		},
		"554": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.email"
		},
		"555": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.currency_code"
		},
		"556": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.shipping_address_id"
		},
		"557": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.billing_address_id"
		},
		"558": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.shipping_address"
		},
		"559": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.billing_address"
		},
		"560": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.metadata"
		},
		"561": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.items"
		},
		"562": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO"
		},
		"563": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.region_id"
		},
		"564": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.customer_id"
		},
		"565": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.sales_channel_id"
		},
		"566": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.email"
		},
		"567": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.currency_code"
		},
		"568": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address_id"
		},
		"569": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address_id"
		},
		"570": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address"
		},
		"571": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address"
		},
		"572": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.metadata"
		},
		"573": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDTO"
		},
		"574": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDTO.id"
		},
		"575": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.region_id"
		},
		"576": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.customer_id"
		},
		"577": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.sales_channel_id"
		},
		"578": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.email"
		},
		"579": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.currency_code"
		},
		"580": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address_id"
		},
		"581": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address_id"
		},
		"582": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address"
		},
		"583": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address"
		},
		"584": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.metadata"
		},
		"585": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO"
		},
		"586": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.code"
		},
		"587": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.amount"
		},
		"588": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.description"
		},
		"589": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.promotion_id"
		},
		"590": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.provider_id"
		},
		"591": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO"
		},
		"592": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.id"
		},
		"593": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.code"
		},
		"594": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.amount"
		},
		"595": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.description"
		},
		"596": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.promotion_id"
		},
		"597": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.provider_id"
		},
		"598": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemAdjustmentDTO"
		},
		"599": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemAdjustmentDTO.item_id"
		},
		"600": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.code"
		},
		"601": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.amount"
		},
		"602": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.description"
		},
		"603": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.promotion_id"
		},
		"604": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.provider_id"
		},
		"605": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemAdjustmentDTO"
		},
		"606": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemAdjustmentDTO.item_id"
		},
		"607": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.id"
		},
		"608": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.code"
		},
		"609": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.amount"
		},
		"610": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.description"
		},
		"611": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.promotion_id"
		},
		"612": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.provider_id"
		},
		"613": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO"
		},
		"614": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.id"
		},
		"615": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.item_id"
		},
		"616": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.code"
		},
		"617": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.amount"
		},
		"618": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.description"
		},
		"619": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.promotion_id"
		},
		"620": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.provider_id"
		},
		"621": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO"
		},
		"622": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"623": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"624": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"625": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"626": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"627": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO"
		},
		"628": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"629": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"630": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"631": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"632": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"633": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"634": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodTaxLineDTO"
		},
		"635": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"636": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"637": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"638": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"639": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"640": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodTaxLineDTO"
		},
		"641": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"642": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"643": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"644": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"645": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"646": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"647": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemTaxLineDTO"
		},
		"648": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"649": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"650": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"651": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"652": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"653": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemTaxLineDTO"
		},
		"654": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"655": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"656": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"657": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"658": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"659": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"660": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO"
		},
		"661": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.title"
		},
		"662": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.subtitle"
		},
		"663": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.thumbnail"
		},
		"664": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.cart_id"
		},
		"665": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.quantity"
		},
		"666": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_id"
		},
		"667": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_title"
		},
		"668": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_description"
		},
		"669": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_subtitle"
		},
		"670": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_type"
		},
		"671": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_collection"
		},
		"672": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_handle"
		},
		"673": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_id"
		},
		"674": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_sku"
		},
		"675": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_barcode"
		},
		"676": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_title"
		},
		"677": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_option_values"
		},
		"678": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.requires_shipping"
		},
		"679": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_discountable"
		},
		"680": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_tax_inclusive"
		},
		"681": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.compare_at_unit_price"
		},
		"682": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.unit_price"
		},
		"683": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.tax_lines"
		},
		"684": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.adjustments"
		},
		"685": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemForCartDTO"
		},
		"686": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemForCartDTO.cart_id"
		},
		"687": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.title"
		},
		"688": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.subtitle"
		},
		"689": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.thumbnail"
		},
		"690": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.quantity"
		},
		"691": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_id"
		},
		"692": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_title"
		},
		"693": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_description"
		},
		"694": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_subtitle"
		},
		"695": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_type"
		},
		"696": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_collection"
		},
		"697": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_handle"
		},
		"698": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_id"
		},
		"699": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_sku"
		},
		"700": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_barcode"
		},
		"701": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_title"
		},
		"702": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_option_values"
		},
		"703": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.requires_shipping"
		},
		"704": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_discountable"
		},
		"705": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_tax_inclusive"
		},
		"706": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.compare_at_unit_price"
		},
		"707": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.unit_price"
		},
		"708": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.tax_lines"
		},
		"709": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.adjustments"
		},
		"710": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO"
		},
		"711": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO.selector"
		},
		"712": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO.data"
		},
		"713": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartWithSelectorDTO"
		},
		"714": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartWithSelectorDTO.selector"
		},
		"715": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartWithSelectorDTO.data"
		},
		"716": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO"
		},
		"717": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.id"
		},
		"718": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.title"
		},
		"719": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.quantity"
		},
		"720": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.unit_price"
		},
		"721": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.metadata"
		},
		"722": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.tax_lines"
		},
		"723": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.adjustments"
		},
		"724": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "cart_id"
		},
		"725": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "variant_id"
		},
		"726": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_id"
		},
		"727": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "subtitle"
		},
		"728": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "thumbnail"
		},
		"729": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_title"
		},
		"730": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_description"
		},
		"731": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_subtitle"
		},
		"732": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_type"
		},
		"733": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_collection"
		},
		"734": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "product_handle"
		},
		"735": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "variant_sku"
		},
		"736": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "variant_barcode"
		},
		"737": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "variant_title"
		},
		"738": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "variant_option_values"
		},
		"739": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "requires_shipping"
		},
		"740": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "is_discountable"
		},
		"741": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "is_tax_inclusive"
		},
		"742": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "compare_at_unit_price"
		},
		"743": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO"
		},
		"744": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.name"
		},
		"745": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.cart_id"
		},
		"746": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.amount"
		},
		"747": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.data"
		},
		"748": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.tax_lines"
		},
		"749": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.adjustments"
		},
		"750": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO"
		},
		"751": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.name"
		},
		"752": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.amount"
		},
		"753": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.data"
		},
		"754": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.tax_lines"
		},
		"755": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.adjustments"
		},
		"756": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO"
		},
		"757": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.id"
		},
		"758": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.name"
		},
		"759": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.amount"
		},
		"760": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.data"
		},
		"761": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.tax_lines"
		},
		"762": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodDTO.adjustments"
		},
		"763": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO"
		},
		"764": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"765": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.code"
		},
		"766": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.amount"
		},
		"767": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.description"
		},
		"768": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.promotion_id"
		},
		"769": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.provider_id"
		},
		"770": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO"
		},
		"771": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.id"
		},
		"772": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.code"
		},
		"773": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.amount"
		},
		"774": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.description"
		},
		"775": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.promotion_id"
		},
		"776": {
			"sourceFileName": "../../../packages/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.provider_id"
		},
		"777": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService"
		},
		"778": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieve"
		},
		"779": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieve"
		},
		"780": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"781": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"782": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"783": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.list"
		},
		"784": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.list"
		},
		"785": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"786": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"787": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"788": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAndCount"
		},
		"789": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAndCount"
		},
		"790": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"791": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"792": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"793": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.create"
		},
		"794": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.create"
		},
		"795": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"796": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"797": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.create"
		},
		"798": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"799": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"800": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.update"
		},
		"801": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.update"
		},
		"802": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"803": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.update"
		},
		"804": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"805": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"806": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"807": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.update"
		},
		"808": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "selector"
		},
		"809": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"810": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"811": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.delete"
		},
		"812": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.delete"
		},
		"813": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartIds"
		},
		"814": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"815": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.delete"
		},
		"816": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"817": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"818": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.delete"
		},
		"819": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"820": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"821": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.delete"
		},
		"822": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"823": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"824": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAddresses"
		},
		"825": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAddresses"
		},
		"826": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"827": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"828": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"829": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"830": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"831": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"832": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"833": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"834": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"835": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"836": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"837": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"838": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"839": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"840": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"841": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"842": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"843": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"844": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"845": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"846": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"847": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"848": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"849": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"850": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveLineItem"
		},
		"851": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveLineItem"
		},
		"852": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "itemId"
		},
		"853": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"854": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"855": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItems"
		},
		"856": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItems"
		},
		"857": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"858": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"859": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"860": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"861": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"862": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"863": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"864": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"865": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"866": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"867": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "items"
		},
		"868": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"869": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"870": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"871": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"872": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"873": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "selector"
		},
		"874": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"875": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"876": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"877": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "lineId"
		},
		"878": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"879": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"880": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethods"
		},
		"881": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethods"
		},
		"882": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"883": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"884": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"885": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"886": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"887": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"888": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"889": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"890": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"891": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"892": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "methods"
		},
		"893": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"894": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemAdjustments"
		},
		"895": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemAdjustments"
		},
		"896": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"897": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"898": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"899": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"900": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"901": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"902": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"903": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"904": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"905": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"906": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"907": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemAdjustments"
		},
		"908": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemAdjustments"
		},
		"909": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"910": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"911": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"912": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodAdjustments"
		},
		"913": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodAdjustments"
		},
		"914": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"915": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"916": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"917": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"918": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"919": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"920": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"921": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"922": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"923": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"924": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"925": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"926": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodAdjustments"
		},
		"927": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodAdjustments"
		},
		"928": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"929": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"930": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"931": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemTaxLines"
		},
		"932": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemTaxLines"
		},
		"933": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"934": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"935": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"936": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"937": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"938": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"939": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"940": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLine"
		},
		"941": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"942": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"943": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"944": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"945": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemTaxLines"
		},
		"946": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemTaxLines"
		},
		"947": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"948": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"949": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"950": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodTaxLines"
		},
		"951": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodTaxLines"
		},
		"952": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"953": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"954": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"955": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"956": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"957": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"958": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"959": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLine"
		},
		"960": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"961": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"962": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"963": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"964": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodTaxLines"
		},
		"965": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodTaxLines"
		},
		"966": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"967": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"968": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"969": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"970": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"971": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"972": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"973": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"974": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"975": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"976": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"977": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"978": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"979": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"980": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"981": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"982": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"983": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"984": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"985": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"986": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"987": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"988": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"989": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"990": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"991": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"992": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"993": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"994": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"995": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"996": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"997": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"998": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"999": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1000": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1001": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"1002": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"1003": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1004": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"1005": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"1006": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1007": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1008": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"1009": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"1010": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1011": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDelete"
		},
		"1012": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDelete"
		},
		"1013": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1014": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1015": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1016": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1017": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restore"
		},
		"1018": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restore"
		},
		"1019": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1020": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1021": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1022": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1023": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteAddresses"
		},
		"1024": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteAddresses"
		},
		"1025": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1026": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1027": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1028": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1029": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreAddresses"
		},
		"1030": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreAddresses"
		},
		"1031": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1032": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1033": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1034": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1035": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItems"
		},
		"1036": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItems"
		},
		"1037": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1038": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1039": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1040": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1041": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItems"
		},
		"1042": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItems"
		},
		"1043": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1044": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1045": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1046": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1047": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethods"
		},
		"1048": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethods"
		},
		"1049": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1050": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1051": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1052": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1053": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethods"
		},
		"1054": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethods"
		},
		"1055": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1056": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1057": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1058": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1059": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemAdjustments"
		},
		"1060": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemAdjustments"
		},
		"1061": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1062": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1063": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1064": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1065": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemAdjustments"
		},
		"1066": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemAdjustments"
		},
		"1067": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1068": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1069": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1070": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1071": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodAdjustments"
		},
		"1072": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodAdjustments"
		},
		"1073": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1074": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1075": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1076": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1077": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodAdjustments"
		},
		"1078": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodAdjustments"
		},
		"1079": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1080": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1081": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1082": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1083": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemTaxLines"
		},
		"1084": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemTaxLines"
		},
		"1085": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1086": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1087": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1088": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1089": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemTaxLines"
		},
		"1090": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemTaxLines"
		},
		"1091": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1092": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1093": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1094": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1095": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodTaxLines"
		},
		"1096": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodTaxLines"
		},
		"1097": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1098": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1099": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1100": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1101": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodTaxLines"
		},
		"1102": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodTaxLines"
		},
		"1103": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1104": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"1105": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"1106": {
			"sourceFileName": "../../../packages/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1114": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO"
		},
		"1115": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.quantity"
		},
		"1116": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_id"
		},
		"1117": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.title"
		},
		"1118": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.subtitle"
		},
		"1119": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.thumbnail"
		},
		"1120": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_id"
		},
		"1121": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_title"
		},
		"1122": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_description"
		},
		"1123": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_subtitle"
		},
		"1124": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_type"
		},
		"1125": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_collection"
		},
		"1126": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_handle"
		},
		"1127": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_sku"
		},
		"1128": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_barcode"
		},
		"1129": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_title"
		},
		"1130": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_option_values"
		},
		"1131": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.requires_shipping"
		},
		"1132": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_discountable"
		},
		"1133": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_tax_inclusive"
		},
		"1134": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_giftcard"
		},
		"1135": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.compare_at_unit_price"
		},
		"1136": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.unit_price"
		},
		"1137": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.metadata"
		},
		"1138": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO"
		},
		"1139": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.cart"
		},
		"1140": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.item"
		},
		"1141": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.update"
		},
		"1142": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO"
		},
		"1143": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.first_name"
		},
		"1144": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.last_name"
		},
		"1145": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.phone"
		},
		"1146": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.company"
		},
		"1147": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_1"
		},
		"1148": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_2"
		},
		"1149": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.city"
		},
		"1150": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.country_code"
		},
		"1151": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.province"
		},
		"1152": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.postal_code"
		},
		"1153": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.metadata"
		},
		"1154": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO"
		},
		"1155": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.region_id"
		},
		"1156": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.customer_id"
		},
		"1157": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.sales_channel_id"
		},
		"1158": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.email"
		},
		"1159": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.currency_code"
		},
		"1160": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address_id"
		},
		"1161": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address_id"
		},
		"1162": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address"
		},
		"1163": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address"
		},
		"1164": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.metadata"
		},
		"1165": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.items"
		},
		"1166": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.promo_codes"
		},
		"1167": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO"
		},
		"1168": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.items"
		},
		"1169": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.cart"
		},
		"1170": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO"
		},
		"1171": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.id"
		},
		"1172": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.promo_codes"
		},
		"1173": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.region_id"
		},
		"1174": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.customer_id"
		},
		"1175": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.sales_channel_id"
		},
		"1176": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.email"
		},
		"1177": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.currency_code"
		},
		"1178": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.metadata"
		},
		"1179": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO"
		},
		"1180": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.cart_id"
		},
		"1181": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.region_id"
		},
		"1182": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.currency_code"
		},
		"1183": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.amount"
		},
		"1184": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.metadata"
		},
		"1185": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO"
		},
		"1186": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.customer"
		},
		"1187": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.product"
		},
		"1188": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.region"
		},
		"1189": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.id"
		},
		"1190": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.region_id"
		},
		"1191": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.customer_id"
		},
		"1192": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.sales_channel_id"
		},
		"1193": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.email"
		},
		"1194": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.currency_code"
		},
		"1195": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_address"
		},
		"1196": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.billing_address"
		},
		"1197": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.items"
		},
		"1198": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_methods"
		},
		"1199": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.metadata"
		},
		"1200": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.created_at"
		},
		"1201": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.updated_at"
		},
		"1202": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_total"
		},
		"1203": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_subtotal"
		},
		"1204": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_tax_total"
		},
		"1205": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_total"
		},
		"1206": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_subtotal"
		},
		"1207": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_tax_total"
		},
		"1208": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_total"
		},
		"1209": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_subtotal"
		},
		"1210": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_tax_total"
		},
		"1211": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.total"
		},
		"1212": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.subtotal"
		},
		"1213": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.tax_total"
		},
		"1214": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_total"
		},
		"1215": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_discount_total"
		},
		"1216": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_tax_total"
		},
		"1217": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_total"
		},
		"1218": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_tax_total"
		},
		"1219": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_total"
		},
		"1220": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_subtotal"
		},
		"1221": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_tax_total"
		},
		"1222": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_total"
		},
		"1223": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_subtotal"
		},
		"1224": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_tax_total"
		},
		"1225": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO"
		},
		"1226": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.cart_id"
		},
		"1227": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.sales_channel_id"
		},
		"1228": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.currency_code"
		},
		"1229": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.shipping_address"
		},
		"1230": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"1231": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "__type.city"
		},
		"1232": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "__type.country_code"
		},
		"1233": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "__type.province"
		},
		"1234": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO"
		},
		"1235": {
			"sourceFileName": "../../../packages/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO.amount"
		},
		"1236": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.id"
		},
		"1237": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.name"
		},
		"1238": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.price_type"
		},
		"1239": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone_id"
		},
		"1240": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile_id"
		},
		"1241": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.provider_id"
		},
		"1242": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_option_type_id"
		},
		"1243": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.data"
		},
		"1244": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.metadata"
		},
		"1245": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone"
		},
		"1246": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile"
		},
		"1247": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillment_provider"
		},
		"1248": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.type"
		},
		"1249": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.rules"
		},
		"1250": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillments"
		},
		"1251": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.created_at"
		},
		"1252": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.updated_at"
		},
		"1253": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.deleted_at"
		},
		"1254": {
			"sourceFileName": "../../../packages/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"1255": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"1256": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"1257": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"1261": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"1262": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"1263": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"1264": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"1265": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"1266": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"1267": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"1268": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"1269": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"1272": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"1273": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"1274": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"1275": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"1276": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"1277": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"1278": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"1279": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"1281": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"1282": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"1283": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"1321": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"1322": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"1323": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"1324": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"1325": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"1326": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"1327": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"1328": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"1329": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"1330": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"1331": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"1332": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"1333": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"1334": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"1335": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"1336": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"1337": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"1338": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"1339": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"1340": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"1341": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"1342": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"1343": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"1344": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"1345": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"1346": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"1347": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"1348": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"1349": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"1350": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"1351": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"1352": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"1353": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"1354": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"1355": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"1356": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"1357": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"1358": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"1359": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"1360": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"1361": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"1362": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"1363": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"1364": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"1365": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"1366": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"1367": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"1368": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"1369": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"1370": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"1371": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"1372": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"1373": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"1374": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"1375": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"1376": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"1377": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"1378": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"1379": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"1380": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams"
		},
		"1381": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1382": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1383": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"1384": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1385": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1388": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"1389": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"1390": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"1391": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"1392": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"1393": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"1394": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"1395": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"1396": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"1397": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"1398": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"1399": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"1400": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.auth_cors"
		},
		"1401": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"1402": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"1403": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"1404": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"1405": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"1406": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"1408": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"1409": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"1410": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"1411": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"1412": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"1413": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"1414": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"1415": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"1416": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"1417": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"1418": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobs_batch_size"
		},
		"1419": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"1420": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"1421": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"1422": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"1423": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"1424": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"1425": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"1426": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"1427": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"1428": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"1438": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"1439": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"1440": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"1441": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"1442": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"1443": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"1444": {
			"sourceFileName": "../../../packages/types/src/customer/index.ts",
			"qualifiedName": ""
		},
		"1445": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO"
		},
		"1446": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.id"
		},
		"1447": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_name"
		},
		"1448": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_shipping"
		},
		"1449": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_billing"
		},
		"1450": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.customer_id"
		},
		"1451": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.company"
		},
		"1452": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.first_name"
		},
		"1453": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.last_name"
		},
		"1454": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_1"
		},
		"1455": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_2"
		},
		"1456": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.city"
		},
		"1457": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.country_code"
		},
		"1458": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.province"
		},
		"1459": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.postal_code"
		},
		"1460": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.phone"
		},
		"1461": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.metadata"
		},
		"1462": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.created_at"
		},
		"1463": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.updated_at"
		},
		"1464": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps"
		},
		"1465": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.id"
		},
		"1466": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.address_name"
		},
		"1467": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.is_default_shipping"
		},
		"1468": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.is_default_billing"
		},
		"1469": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.customer_id"
		},
		"1470": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.customer"
		},
		"1471": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.company"
		},
		"1472": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.first_name"
		},
		"1473": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.last_name"
		},
		"1474": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.address_1"
		},
		"1475": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.address_2"
		},
		"1476": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.city"
		},
		"1477": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.country_code"
		},
		"1478": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.province"
		},
		"1479": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.postal_code"
		},
		"1480": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.phone"
		},
		"1481": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.metadata"
		},
		"1482": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.created_at"
		},
		"1483": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerAddressProps.updated_at"
		},
		"1484": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1485": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1486": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps"
		},
		"1487": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"1488": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"1489": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.customers"
		},
		"1490": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_by"
		},
		"1491": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"1492": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"1493": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1494": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1495": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps"
		},
		"1496": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.id"
		},
		"1497": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.customer_id"
		},
		"1498": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.customer_group_id"
		},
		"1499": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.customer"
		},
		"1500": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.group"
		},
		"1501": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.created_by"
		},
		"1502": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.created_at"
		},
		"1503": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerGroupCustomerProps.updated_at"
		},
		"1504": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1505": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1506": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps"
		},
		"1507": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.id"
		},
		"1508": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.email"
		},
		"1509": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.groups"
		},
		"1510": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.default_billing_address_id"
		},
		"1511": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.default_shipping_address_id"
		},
		"1512": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.company_name"
		},
		"1513": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.first_name"
		},
		"1514": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.last_name"
		},
		"1515": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.has_account"
		},
		"1516": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.created_by"
		},
		"1517": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.created_at"
		},
		"1518": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "FilterableCustomerProps.updated_at"
		},
		"1519": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1520": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1521": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO"
		},
		"1522": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.id"
		},
		"1523": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.name"
		},
		"1524": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.customers"
		},
		"1525": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.metadata"
		},
		"1526": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.created_by"
		},
		"1527": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.deleted_at"
		},
		"1528": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.created_at"
		},
		"1529": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupDTO.updated_at"
		},
		"1530": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO"
		},
		"1531": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.id"
		},
		"1532": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.customer_id"
		},
		"1533": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.customer_group_id"
		},
		"1534": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.customer"
		},
		"1535": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.group"
		},
		"1536": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.created_by"
		},
		"1537": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.created_at"
		},
		"1538": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerGroupCustomerDTO.updated_at"
		},
		"1539": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO"
		},
		"1540": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.id"
		},
		"1541": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.email"
		},
		"1542": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_billing_address_id"
		},
		"1543": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_shipping_address_id"
		},
		"1544": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.company_name"
		},
		"1545": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.first_name"
		},
		"1546": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.last_name"
		},
		"1547": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.addresses"
		},
		"1548": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.phone"
		},
		"1549": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.groups"
		},
		"1550": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"1551": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"1552": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.metadata"
		},
		"1553": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_by"
		},
		"1554": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.deleted_at"
		},
		"1555": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_at"
		},
		"1556": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.updated_at"
		},
		"1557": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "GroupCustomerPair"
		},
		"1558": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.customer_id"
		},
		"1559": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"1560": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "legacy_CustomerDTO"
		},
		"1561": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"1562": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.email"
		},
		"1563": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.billing_address_id"
		},
		"1564": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.shipping_address_id"
		},
		"1565": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.first_name"
		},
		"1566": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.last_name"
		},
		"1567": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.billing_address"
		},
		"1568": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.shipping_address"
		},
		"1569": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.phone"
		},
		"1570": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.has_account"
		},
		"1571": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.groups"
		},
		"1572": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"1573": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"1574": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.orders"
		},
		"1575": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"1576": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"1577": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"1578": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"1579": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"1580": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"1581": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService"
		},
		"1582": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.retrieve"
		},
		"1583": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.retrieve"
		},
		"1584": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerId"
		},
		"1585": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1586": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1587": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.create"
		},
		"1588": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.create"
		},
		"1589": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1590": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1591": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.create"
		},
		"1592": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1593": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1594": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.update"
		},
		"1595": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.update"
		},
		"1596": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerId"
		},
		"1597": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1598": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1599": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.update"
		},
		"1600": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerIds"
		},
		"1601": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1602": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1603": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.update"
		},
		"1604": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1605": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1606": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1607": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.delete"
		},
		"1608": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.delete"
		},
		"1609": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerId"
		},
		"1610": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1611": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.delete"
		},
		"1612": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerIds"
		},
		"1613": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1614": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.delete"
		},
		"1615": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1616": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1617": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.createCustomerGroup"
		},
		"1618": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.createCustomerGroup"
		},
		"1619": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1620": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1621": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.createCustomerGroup"
		},
		"1622": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1623": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1624": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.retrieveCustomerGroup"
		},
		"1625": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.retrieveCustomerGroup"
		},
		"1626": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupId"
		},
		"1627": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1628": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1629": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateCustomerGroups"
		},
		"1630": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateCustomerGroups"
		},
		"1631": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupId"
		},
		"1632": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1633": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1634": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateCustomerGroups"
		},
		"1635": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupIds"
		},
		"1636": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1637": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1638": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateCustomerGroups"
		},
		"1639": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1640": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1641": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1642": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteCustomerGroups"
		},
		"1643": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteCustomerGroups"
		},
		"1644": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupId"
		},
		"1645": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1646": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteCustomerGroups"
		},
		"1647": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupIds"
		},
		"1648": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1649": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteCustomerGroups"
		},
		"1650": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1651": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1652": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addCustomerToGroup"
		},
		"1653": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addCustomerToGroup"
		},
		"1654": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupCustomerPair"
		},
		"1655": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1656": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "__type"
		},
		"1657": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "__type.id"
		},
		"1658": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addCustomerToGroup"
		},
		"1659": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupCustomerPairs"
		},
		"1660": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1661": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "__type"
		},
		"1662": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "__type.id"
		},
		"1663": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.removeCustomerFromGroup"
		},
		"1664": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.removeCustomerFromGroup"
		},
		"1665": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupCustomerPair"
		},
		"1666": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1667": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.removeCustomerFromGroup"
		},
		"1668": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupCustomerPairs"
		},
		"1669": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1670": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addAddresses"
		},
		"1671": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addAddresses"
		},
		"1672": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "addresses"
		},
		"1673": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1674": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.addAddresses"
		},
		"1675": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "address"
		},
		"1676": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1677": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateAddresses"
		},
		"1678": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateAddresses"
		},
		"1679": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "addressId"
		},
		"1680": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1681": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1682": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateAddresses"
		},
		"1683": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "addressIds"
		},
		"1684": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1685": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1686": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.updateAddresses"
		},
		"1687": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1688": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "data"
		},
		"1689": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1690": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteAddresses"
		},
		"1691": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteAddresses"
		},
		"1692": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "addressId"
		},
		"1693": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1694": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteAddresses"
		},
		"1695": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "addressIds"
		},
		"1696": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1697": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.deleteAddresses"
		},
		"1698": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "selector"
		},
		"1699": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1700": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAddresses"
		},
		"1701": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAddresses"
		},
		"1702": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1703": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1704": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1705": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCountAddresses"
		},
		"1706": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCountAddresses"
		},
		"1707": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1708": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1709": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1710": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listCustomerGroupCustomers"
		},
		"1711": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listCustomerGroupCustomers"
		},
		"1712": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1713": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1714": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1715": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.list"
		},
		"1716": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.list"
		},
		"1717": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1718": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1719": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1720": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCount"
		},
		"1721": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCount"
		},
		"1722": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1723": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1724": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1725": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listCustomerGroups"
		},
		"1726": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listCustomerGroups"
		},
		"1727": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1728": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1729": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1730": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCountCustomerGroups"
		},
		"1731": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.listAndCountCustomerGroups"
		},
		"1732": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "filters"
		},
		"1733": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1734": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1735": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.softDelete"
		},
		"1736": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.softDelete"
		},
		"1737": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1738": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerIds"
		},
		"1739": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1740": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1741": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.restore"
		},
		"1742": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.restore"
		},
		"1743": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1744": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "customerIds"
		},
		"1745": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1746": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1747": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.softDeleteCustomerGroups"
		},
		"1748": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.softDeleteCustomerGroups"
		},
		"1749": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1750": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupIds"
		},
		"1751": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1752": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1753": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.restoreCustomerGroups"
		},
		"1754": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "ICustomerModuleService.restoreCustomerGroups"
		},
		"1755": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1756": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "groupIds"
		},
		"1757": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "config"
		},
		"1758": {
			"sourceFileName": "../../../packages/types/src/customer/service.ts",
			"qualifiedName": "sharedContext"
		},
		"1766": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO"
		},
		"1767": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.address_name"
		},
		"1768": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.is_default_shipping"
		},
		"1769": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.is_default_billing"
		},
		"1770": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.customer_id"
		},
		"1771": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.company"
		},
		"1772": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.first_name"
		},
		"1773": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.last_name"
		},
		"1774": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.address_1"
		},
		"1775": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.address_2"
		},
		"1776": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.city"
		},
		"1777": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.country_code"
		},
		"1778": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.province"
		},
		"1779": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.postal_code"
		},
		"1780": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.phone"
		},
		"1781": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerAddressDTO.metadata"
		},
		"1782": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO"
		},
		"1783": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.id"
		},
		"1784": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.address_name"
		},
		"1785": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.is_default_shipping"
		},
		"1786": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.is_default_billing"
		},
		"1787": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.customer_id"
		},
		"1788": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.company"
		},
		"1789": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.first_name"
		},
		"1790": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.last_name"
		},
		"1791": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.address_1"
		},
		"1792": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.address_2"
		},
		"1793": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.city"
		},
		"1794": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.country_code"
		},
		"1795": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.province"
		},
		"1796": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.postal_code"
		},
		"1797": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.phone"
		},
		"1798": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerAddressDTO.metadata"
		},
		"1799": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO"
		},
		"1800": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.company_name"
		},
		"1801": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.first_name"
		},
		"1802": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.last_name"
		},
		"1803": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.email"
		},
		"1804": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.phone"
		},
		"1805": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.created_by"
		},
		"1806": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.addresses"
		},
		"1807": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerDTO.metadata"
		},
		"1808": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO"
		},
		"1809": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.id"
		},
		"1810": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.company_name"
		},
		"1811": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.first_name"
		},
		"1812": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.last_name"
		},
		"1813": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.email"
		},
		"1814": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.phone"
		},
		"1815": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerDTO.metadata"
		},
		"1816": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields"
		},
		"1817": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.company_name"
		},
		"1818": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.first_name"
		},
		"1819": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.last_name"
		},
		"1820": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.email"
		},
		"1821": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.phone"
		},
		"1822": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerUpdatableFields.metadata"
		},
		"1823": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerGroupDTO"
		},
		"1824": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerGroupDTO.name"
		},
		"1825": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerGroupDTO.metadata"
		},
		"1826": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CreateCustomerGroupDTO.created_by"
		},
		"1827": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerGroupUpdatableFields"
		},
		"1828": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerGroupUpdatableFields.name"
		},
		"1829": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "CustomerGroupUpdatableFields.metadata"
		},
		"1830": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerGroupDTO"
		},
		"1831": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerGroupDTO.id"
		},
		"1832": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerGroupDTO.name"
		},
		"1833": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerGroupDTO.customer_ids"
		},
		"1834": {
			"sourceFileName": "../../../packages/types/src/customer/mutations.ts",
			"qualifiedName": "UpdateCustomerGroupDTO.metadata"
		},
		"1835": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"1836": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"1837": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1838": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1840": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1841": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"1842": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"1843": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1844": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"1845": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"1846": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"1847": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"1848": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"1849": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"1850": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"1851": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"1852": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"1853": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"1854": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"1855": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"1856": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"1857": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"1858": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"1859": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"1860": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"1861": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"1862": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"1863": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1864": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"1865": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1866": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1867": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"1868": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"1869": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"1870": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"1871": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"1872": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"1873": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"1874": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"1875": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"1876": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"1877": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"1878": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"1879": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"1880": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1881": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1883": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1884": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1886": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"1887": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"1888": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"1889": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"1890": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"1891": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1892": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1893": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"1894": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"1895": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1896": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1897": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"1898": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"1899": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1900": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1901": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"1902": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"1903": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1904": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1905": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"1906": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"1907": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1908": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"1909": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"1910": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"1911": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1912": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1914": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1915": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1917": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1918": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"1919": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"1920": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"1921": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1922": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1923": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"1924": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"1925": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"1926": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1927": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1928": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"1929": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"1930": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1931": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1932": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1933": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1934": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1935": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"1936": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1937": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1938": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"1939": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1940": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1941": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"1942": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"1943": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"1944": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1945": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1946": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1947": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1948": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1949": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1950": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1951": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1952": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"1953": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1954": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1955": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"1956": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"1957": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"1958": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"1959": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1960": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"1961": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1962": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"1963": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"1964": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1965": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"1966": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1967": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"1968": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"1969": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1970": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1971": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"1972": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"1973": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "id"
		},
		"1974": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1975": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1976": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1977": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1978": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"1979": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1980": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1981": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"1982": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1983": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1984": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"1985": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"1986": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"1987": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1988": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1989": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1990": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1991": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1992": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1993": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1994": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1995": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"1996": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1997": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1998": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"1999": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"2000": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"2001": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2002": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"2003": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"2004": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2005": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "EntityDateColumns"
		},
		"2006": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableEntityDateColumns"
		},
		"2007": {
			"sourceFileName": "../../../packages/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"2008": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"2009": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2010": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2011": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"2012": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"2013": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2014": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"2015": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2016": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"2017": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"2018": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2019": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"2020": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"2021": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EventHandler"
		},
		"2022": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2023": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2024": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"2025": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"2026": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2027": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EmitData"
		},
		"2028": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2029": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"2030": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"2031": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"2032": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2033": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"2034": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2035": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"2036": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2037": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"2038": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"2039": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"2040": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"2041": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"2042": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2043": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"2044": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2045": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"2046": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"2047": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"2048": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2049": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"2050": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2051": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"2052": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"2053": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"2054": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"2055": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"2056": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"2057": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"2058": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"2059": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"2060": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"2061": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"2062": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"2063": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"2064": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"2065": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"2066": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"2067": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"2068": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"2069": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"2070": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"2071": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"2072": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"2073": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"2074": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "event"
		},
		"2075": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"2076": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "options"
		},
		"2077": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"2078": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"2079": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"2080": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"2081": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"2082": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"2083": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"2084": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"2085": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"2086": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"2087": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"2088": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"2089": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"2090": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"2091": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"2092": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"2093": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"2094": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"2095": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"2096": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"2097": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"2098": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"2099": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"2100": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"2101": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"2102": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"2103": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"2104": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"2105": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"2106": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"2107": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"2108": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"2109": {
			"sourceFileName": "../../../packages/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"2110": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"2111": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"2112": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2113": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2114": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"2115": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"2116": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2117": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2118": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"2119": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2120": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"2121": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"2122": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"2123": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"2124": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"2125": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"2126": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"2127": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"2128": {
			"sourceFileName": "../../../packages/types/src/fulfillment/index.ts",
			"qualifiedName": ""
		},
		"2129": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO"
		},
		"2130": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.id"
		},
		"2131": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.fulfillment_id"
		},
		"2132": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.company"
		},
		"2133": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.first_name"
		},
		"2134": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.last_name"
		},
		"2135": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_1"
		},
		"2136": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_2"
		},
		"2137": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.city"
		},
		"2138": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.country_code"
		},
		"2139": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.province"
		},
		"2140": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.postal_code"
		},
		"2141": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.phone"
		},
		"2142": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.metadata"
		},
		"2143": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.created_at"
		},
		"2144": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.updated_at"
		},
		"2145": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.deleted_at"
		},
		"2146": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO"
		},
		"2147": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.id"
		},
		"2148": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.name"
		},
		"2149": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.type"
		},
		"2150": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.metadata"
		},
		"2151": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.service_zones"
		},
		"2152": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.created_at"
		},
		"2153": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.updated_at"
		},
		"2154": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.deleted_at"
		},
		"2155": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps"
		},
		"2156": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.id"
		},
		"2157": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.name"
		},
		"2158": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.type"
		},
		"2159": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.service_zones"
		},
		"2160": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2161": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2162": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO"
		},
		"2163": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.id"
		},
		"2164": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.name"
		},
		"2165": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.type"
		},
		"2166": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.metadata"
		},
		"2167": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.shipping_options"
		},
		"2168": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.created_at"
		},
		"2169": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.updated_at"
		},
		"2170": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.deleted_at"
		},
		"2171": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps"
		},
		"2172": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.id"
		},
		"2173": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.name"
		},
		"2174": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.type"
		},
		"2175": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.shipping_options"
		},
		"2176": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2177": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2178": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO"
		},
		"2179": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.id"
		},
		"2180": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.attribute"
		},
		"2181": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.operator"
		},
		"2182": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.value"
		},
		"2183": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type"
		},
		"2184": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type.value"
		},
		"2185": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option_id"
		},
		"2186": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option"
		},
		"2187": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.created_at"
		},
		"2188": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.updated_at"
		},
		"2189": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.deleted_at"
		},
		"2190": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps"
		},
		"2191": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.id"
		},
		"2192": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.attribute"
		},
		"2193": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.operator"
		},
		"2194": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.value"
		},
		"2195": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2196": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2197": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"2198": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO"
		},
		"2199": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.id"
		},
		"2200": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.name"
		},
		"2201": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.price_type"
		},
		"2202": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone_id"
		},
		"2203": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile_id"
		},
		"2204": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.provider_id"
		},
		"2205": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_option_type_id"
		},
		"2206": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.data"
		},
		"2207": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.metadata"
		},
		"2208": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone"
		},
		"2209": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile"
		},
		"2210": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillment_provider"
		},
		"2211": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.type"
		},
		"2212": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.rules"
		},
		"2213": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillments"
		},
		"2214": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.created_at"
		},
		"2215": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.updated_at"
		},
		"2216": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.deleted_at"
		},
		"2217": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps"
		},
		"2218": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"2219": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"2220": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"2221": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"2222": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"2223": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"2224": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"2225": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2226": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2227": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps"
		},
		"2228": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_id"
		},
		"2229": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_type"
		},
		"2230": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.address"
		},
		"2231": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"2232": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.country_code"
		},
		"2233": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.province_code"
		},
		"2234": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.city"
		},
		"2235": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.postal_expression"
		},
		"2236": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.context"
		},
		"2237": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"2238": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"2239": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"2240": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"2241": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"2242": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"2243": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"2244": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2245": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2246": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO"
		},
		"2247": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.id"
		},
		"2248": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.label"
		},
		"2249": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.description"
		},
		"2250": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.code"
		},
		"2251": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option_id"
		},
		"2252": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option"
		},
		"2253": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.created_at"
		},
		"2254": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.updated_at"
		},
		"2255": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.deleted_at"
		},
		"2256": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps"
		},
		"2257": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.id"
		},
		"2258": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.label"
		},
		"2259": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.description"
		},
		"2260": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.code"
		},
		"2261": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2262": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2263": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO"
		},
		"2264": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.id"
		},
		"2265": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.name"
		},
		"2266": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.metadata"
		},
		"2267": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.fulfillment_sets"
		},
		"2268": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.geo_zones"
		},
		"2269": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.shipping_options"
		},
		"2270": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.created_at"
		},
		"2271": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.updated_at"
		},
		"2272": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.deleted_at"
		},
		"2273": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps"
		},
		"2274": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.id"
		},
		"2275": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.name"
		},
		"2276": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.geo_zones"
		},
		"2277": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.fulfillment_set"
		},
		"2278": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.shipping_options"
		},
		"2279": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2280": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2281": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneType"
		},
		"2282": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO"
		},
		"2283": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.id"
		},
		"2284": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.type"
		},
		"2285": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.country_code"
		},
		"2286": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.province_code"
		},
		"2287": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.city"
		},
		"2288": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.postal_expression"
		},
		"2289": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.metadata"
		},
		"2290": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.created_at"
		},
		"2291": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.updated_at"
		},
		"2292": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.deleted_at"
		},
		"2293": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps"
		},
		"2294": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.id"
		},
		"2295": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.type"
		},
		"2296": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.country_code"
		},
		"2297": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.province_code"
		},
		"2298": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.city"
		},
		"2299": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2300": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2301": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO"
		},
		"2302": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.id"
		},
		"2303": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.name"
		},
		"2304": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.metadata"
		},
		"2305": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.shipping_options"
		},
		"2306": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.created_at"
		},
		"2307": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.updated_at"
		},
		"2308": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.deleted_at"
		},
		"2309": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO"
		},
		"2310": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.id"
		},
		"2311": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.location_id"
		},
		"2312": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.packed_at"
		},
		"2313": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipped_at"
		},
		"2314": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivered_at"
		},
		"2315": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.canceled_at"
		},
		"2316": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.data"
		},
		"2317": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider_id"
		},
		"2318": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option_id"
		},
		"2319": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.metadata"
		},
		"2320": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option"
		},
		"2321": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider"
		},
		"2322": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivery_address"
		},
		"2323": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.items"
		},
		"2324": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.labels"
		},
		"2325": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.created_at"
		},
		"2326": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.updated_at"
		},
		"2327": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.deleted_at"
		},
		"2328": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps"
		},
		"2329": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.id"
		},
		"2330": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.location_id"
		},
		"2331": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.packed_at"
		},
		"2332": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipped_at"
		},
		"2333": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.delivered_at"
		},
		"2334": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.canceled_at"
		},
		"2335": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.provider_id"
		},
		"2336": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipping_option_id"
		},
		"2337": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.created_at"
		},
		"2338": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.updated_at"
		},
		"2339": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"2340": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"2341": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO"
		},
		"2342": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.id"
		},
		"2343": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.title"
		},
		"2344": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.quantity"
		},
		"2345": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.sku"
		},
		"2346": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.barcode"
		},
		"2347": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.line_item_id"
		},
		"2348": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.inventory_item_id"
		},
		"2349": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment_id"
		},
		"2350": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment"
		},
		"2351": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.created_at"
		},
		"2352": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.updated_at"
		},
		"2353": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.deleted_at"
		},
		"2354": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO"
		},
		"2355": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.id"
		},
		"2356": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_number"
		},
		"2357": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_url"
		},
		"2358": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.label_url"
		},
		"2359": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment_id"
		},
		"2360": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment"
		},
		"2361": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.created_at"
		},
		"2362": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.updated_at"
		},
		"2363": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.deleted_at"
		},
		"2364": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO"
		},
		"2365": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.name"
		},
		"2366": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.type"
		},
		"2367": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.metadata"
		},
		"2368": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "UpdateShippingProfileDTO"
		},
		"2369": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "name"
		},
		"2370": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "type"
		},
		"2371": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "metadata"
		},
		"2372": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO"
		},
		"2373": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.label"
		},
		"2374": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.description"
		},
		"2375": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.code"
		},
		"2376": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.shipping_option_id"
		},
		"2377": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "UpdateShippingOptionTypeDTO"
		},
		"2378": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "UpdateShippingOptionTypeDTO.id"
		},
		"2379": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "label"
		},
		"2380": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "description"
		},
		"2381": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "code"
		},
		"2382": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "shipping_option_id"
		},
		"2383": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleOperatorType"
		},
		"2384": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO"
		},
		"2385": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.attribute"
		},
		"2386": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.operator"
		},
		"2387": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.value"
		},
		"2388": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.shipping_option_id"
		},
		"2389": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO"
		},
		"2390": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO.id"
		},
		"2391": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "attribute"
		},
		"2392": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "operator"
		},
		"2393": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "value"
		},
		"2394": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "shipping_option_id"
		},
		"2395": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO"
		},
		"2396": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO.type"
		},
		"2397": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"2398": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"2399": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"2400": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO"
		},
		"2401": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.type"
		},
		"2402": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.province_code"
		},
		"2403": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"2404": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"2405": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"2406": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO"
		},
		"2407": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.type"
		},
		"2408": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.province_code"
		},
		"2409": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.city"
		},
		"2410": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"2411": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"2412": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"2413": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO"
		},
		"2414": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.type"
		},
		"2415": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.province_code"
		},
		"2416": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.city"
		},
		"2417": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.postal_expression"
		},
		"2418": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"2419": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"2420": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"2421": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneDTO"
		},
		"2422": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO"
		},
		"2423": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"2424": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "type"
		},
		"2425": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"2426": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"2427": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"2428": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO"
		},
		"2429": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO.type"
		},
		"2430": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"2431": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"2432": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"2433": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"2434": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO"
		},
		"2435": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.type"
		},
		"2436": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.province_code"
		},
		"2437": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"2438": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"2439": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"2440": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"2441": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO"
		},
		"2442": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.type"
		},
		"2443": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.province_code"
		},
		"2444": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.city"
		},
		"2445": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"2446": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"2447": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"2448": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"2449": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO"
		},
		"2450": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.type"
		},
		"2451": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.province_code"
		},
		"2452": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.city"
		},
		"2453": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.postal_expression"
		},
		"2454": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"2455": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"2456": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"2457": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"2458": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneDTO"
		},
		"2459": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO"
		},
		"2460": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.name"
		},
		"2461": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.fulfillment_set_id"
		},
		"2462": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.geo_zones"
		},
		"2463": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO"
		},
		"2464": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.id"
		},
		"2465": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.name"
		},
		"2466": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.geo_zones"
		},
		"2467": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type"
		},
		"2468": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type.id"
		},
		"2469": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO"
		},
		"2470": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.name"
		},
		"2471": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.price_type"
		},
		"2472": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.service_zone_id"
		},
		"2473": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.shipping_profile_id"
		},
		"2474": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.provider_id"
		},
		"2475": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.type"
		},
		"2476": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.data"
		},
		"2477": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.rules"
		},
		"2478": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO"
		},
		"2479": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.id"
		},
		"2480": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.name"
		},
		"2481": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.price_type"
		},
		"2482": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.service_zone_id"
		},
		"2483": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.shipping_profile_id"
		},
		"2484": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.provider_id"
		},
		"2485": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.type"
		},
		"2486": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"2487": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"2488": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.data"
		},
		"2489": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.rules"
		},
		"2490": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"2491": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"2492": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO"
		},
		"2493": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.name"
		},
		"2494": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.type"
		},
		"2495": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.service_zones"
		},
		"2496": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO"
		},
		"2497": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.id"
		},
		"2498": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.name"
		},
		"2499": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.type"
		},
		"2500": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.service_zones"
		},
		"2501": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type"
		},
		"2502": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type.id"
		},
		"2503": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentOrderDTO"
		},
		"2504": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO"
		},
		"2505": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.location_id"
		},
		"2506": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.packed_at"
		},
		"2507": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipped_at"
		},
		"2508": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivered_at"
		},
		"2509": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.canceled_at"
		},
		"2510": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.data"
		},
		"2511": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.provider_id"
		},
		"2512": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipping_option_id"
		},
		"2513": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.metadata"
		},
		"2514": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivery_address"
		},
		"2515": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.items"
		},
		"2516": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.labels"
		},
		"2517": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.order"
		},
		"2518": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO"
		},
		"2519": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.location_id"
		},
		"2520": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.packed_at"
		},
		"2521": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.shipped_at"
		},
		"2522": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.delivered_at"
		},
		"2523": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.data"
		},
		"2524": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.metadata"
		},
		"2525": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO"
		},
		"2526": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.fulfillment_id"
		},
		"2527": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.company"
		},
		"2528": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.first_name"
		},
		"2529": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.last_name"
		},
		"2530": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_1"
		},
		"2531": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_2"
		},
		"2532": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.city"
		},
		"2533": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.country_code"
		},
		"2534": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.province"
		},
		"2535": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.postal_code"
		},
		"2536": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.phone"
		},
		"2537": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.metadata"
		},
		"2538": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO"
		},
		"2539": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_number"
		},
		"2540": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_url"
		},
		"2541": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.label_url"
		},
		"2542": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.fulfillment_id"
		},
		"2543": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO"
		},
		"2544": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.fulfillment_id"
		},
		"2545": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.title"
		},
		"2546": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.sku"
		},
		"2547": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.quantity"
		},
		"2548": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.barcode"
		},
		"2549": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.line_item_id"
		},
		"2550": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.inventory_item_id"
		},
		"2551": {
			"sourceFileName": "../../../packages/types/src/fulfillment/provider.ts",
			"qualifiedName": "IFulfillmentProvider"
		},
		"2597": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService"
		},
		"2598": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"2599": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"2600": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2601": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2602": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2603": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"2604": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"2605": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2606": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2607": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2608": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"2609": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"2610": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2611": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2612": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2613": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2614": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2615": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2616": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2617": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2618": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2619": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2620": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2621": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2622": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2623": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2624": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2625": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2626": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2627": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2628": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2629": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2630": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2631": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2632": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2633": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2634": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"2635": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"2636": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2637": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"2638": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2639": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2640": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"2641": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"2642": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2643": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"2644": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2645": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2646": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"2647": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"2648": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2649": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2650": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2651": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"2652": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"2653": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2654": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2655": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2656": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"2657": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"2658": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2659": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2660": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2661": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2662": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2663": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2664": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2665": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2666": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2667": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2668": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2669": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2670": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2671": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2672": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2673": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2674": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2675": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2676": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2677": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2678": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2679": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2680": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2681": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2682": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"2683": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"2684": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2685": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"2686": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2687": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2688": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"2689": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"2690": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2691": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"2692": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2693": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2694": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"2695": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"2696": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2697": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2698": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2699": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"2700": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"2701": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2702": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2703": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2704": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"2705": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"2706": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2707": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2708": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2709": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2710": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2711": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2712": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2713": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2714": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2715": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2716": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2717": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2718": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2719": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2720": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2721": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2722": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2723": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2724": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2725": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2726": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2727": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2728": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2729": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2730": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"2731": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"2732": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2733": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"2734": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2735": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2736": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"2737": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"2738": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2739": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"2740": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2741": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2742": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"2743": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"2744": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2745": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2746": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2747": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"2748": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"2749": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2750": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2751": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2752": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"2753": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"2754": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2755": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2756": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2757": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"2758": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"2759": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2760": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2761": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2762": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2763": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2764": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2765": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2766": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2767": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2768": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2769": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2770": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2771": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2772": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2773": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2774": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2775": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2776": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2777": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2778": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2779": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2780": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2781": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2782": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2783": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"2784": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"2785": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2786": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"2787": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2788": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2789": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"2790": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"2791": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2792": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"2793": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2794": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2795": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"2796": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"2797": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2798": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2799": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2800": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"2801": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"2802": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2803": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2804": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2805": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"2806": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"2807": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2808": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2809": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2810": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2811": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2812": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2813": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2814": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2815": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2816": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2817": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2818": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2819": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2820": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2821": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2822": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2823": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2824": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2825": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2826": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2827": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2828": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2829": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2830": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2831": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"2832": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"2833": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2834": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"2835": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2836": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2837": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"2838": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"2839": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2840": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"2841": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2842": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2843": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"2844": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"2845": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2846": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2847": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2848": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"2849": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"2850": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2851": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2852": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2853": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"2854": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"2855": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2856": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2857": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2858": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2859": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2860": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2861": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2862": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2863": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2864": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2865": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"2866": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"2867": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2868": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2869": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"2870": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2871": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2872": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"2873": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"2874": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2875": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2876": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"2877": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2878": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2879": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"2880": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"2881": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2882": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2883": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2884": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"2885": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"2886": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2887": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2888": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2889": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"2890": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"2891": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2892": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2893": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2894": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"2895": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"2896": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2897": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2898": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"2899": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2900": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2901": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"2902": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"2903": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2904": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2905": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2906": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"2907": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"2908": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2909": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2910": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2911": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"2912": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"2913": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2914": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2915": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2916": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"2917": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"2918": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2919": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2920": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"2921": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"2922": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2923": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2924": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2925": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"2926": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"2927": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2928": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2929": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"2930": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"2931": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"2932": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"2933": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"2934": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"2935": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2936": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"2937": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"2938": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionId"
		},
		"2939": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "context"
		},
		"2947": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "AddFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"2948": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"2949": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"2950": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "RemoveFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"2951": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"2952": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.ids"
		},
		"2953": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"2954": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"2955": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"2956": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2957": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2958": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"2959": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"2960": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2961": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2962": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"2963": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"2964": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2965": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2966": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"2967": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"2968": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2969": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2970": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"2971": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2972": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2973": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"2974": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"2975": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"2976": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2977": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2978": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"2979": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"2980": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"2981": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2982": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2983": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"2984": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"2985": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"2986": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2987": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2988": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"2989": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"2990": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"2991": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2992": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2993": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"2994": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"2995": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"2996": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2997": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"2998": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"2999": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"3000": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3001": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3002": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"3003": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"3004": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3005": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3006": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"3007": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"3008": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3009": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"3010": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"3011": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"3012": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"3013": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3014": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3015": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"3016": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"3017": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"3018": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"3019": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE"
		},
		"3020": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"3021": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"3022": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"3023": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"3024": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"3025": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"3026": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3027": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"3028": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"3029": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"3030": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"3031": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"3032": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3033": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"3034": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"3035": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"3036": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3037": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"3038": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"3039": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"3040": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3041": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"3042": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"3043": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"3044": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3045": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"3046": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"3047": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"3048": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3049": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"3050": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"3051": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3052": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"3053": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"3054": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"3055": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"3056": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3057": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"3058": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"3059": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"3060": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"3061": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"3062": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"3063": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"3064": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"3065": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"3066": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"3067": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3068": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"3069": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"3070": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"3071": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"3072": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"3073": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"3074": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3075": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"3076": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"3077": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"3078": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"3079": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3080": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"3081": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"3082": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"3083": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3084": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"3085": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3086": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"3087": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"3088": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"3089": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3090": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3091": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"3092": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"3093": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"3094": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3095": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"3096": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"3097": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"3098": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3099": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"3100": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"3101": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"3102": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3103": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3104": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"3105": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3106": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"3107": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"3108": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"3109": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3110": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"3111": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"3112": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"3113": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"3114": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"3115": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3116": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"3117": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"3118": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"3119": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3120": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"3121": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"3122": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"3123": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3124": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"3125": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3126": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"3127": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"3128": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"3129": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3130": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"3131": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"3132": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"3133": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"3134": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"3135": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"3136": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"3137": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"3138": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"3139": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"3140": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"3141": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"3142": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"3143": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"3144": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3145": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"3146": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"3147": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"3148": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"3149": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"3150": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"3151": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"3152": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"3153": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"3154": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"3155": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"3156": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"3157": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3158": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"3159": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"3160": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3161": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"3163": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"3164": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"3165": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3166": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3167": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"3168": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"3169": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"3177": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService"
		},
		"3178": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"3179": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"3180": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"3181": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"3182": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"3183": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"3184": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3185": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"3186": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"3187": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"3188": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3189": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"3190": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"3191": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"3192": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3193": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3194": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"3195": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3196": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"3197": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"3198": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"3199": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3200": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3201": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"3202": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3203": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"3204": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"3205": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3206": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3207": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"3208": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3209": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3210": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"3211": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"3212": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3213": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3214": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"3215": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3216": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3217": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"3218": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"3219": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"3220": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"3221": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3222": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3223": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"3224": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3225": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"3226": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"3227": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"3228": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"3229": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3230": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3231": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"3232": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3233": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3234": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3235": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"3236": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3237": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3238": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"3239": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3240": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3241": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"3242": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3243": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3244": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"3245": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3246": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"3247": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"3248": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"3249": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"3250": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3251": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3252": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3253": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"3254": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"3255": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"3256": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3257": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3258": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"3259": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"3260": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"3261": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3262": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3263": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"3264": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"3265": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3266": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3267": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"3268": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"3269": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"3270": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TEntity"
		},
		"3271": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"3272": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TContainer"
		},
		"3273": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"3274": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"3275": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"3276": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"3277": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"3278": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"3279": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.provider_name"
		},
		"3280": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"3281": {
			"sourceFileName": "../../../packages/types/src/order/index.ts",
			"qualifiedName": ""
		},
		"3282": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderSummaryDTO"
		},
		"3283": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type"
		},
		"3284": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.total"
		},
		"3285": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.subtotal"
		},
		"3286": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.total_tax"
		},
		"3287": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.ordered_total"
		},
		"3288": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.fulfilled_total"
		},
		"3289": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.returned_total"
		},
		"3290": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.return_request_total"
		},
		"3291": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.write_off_total"
		},
		"3292": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.projected_total"
		},
		"3293": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_total"
		},
		"3294": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_subtotal"
		},
		"3295": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_total_tax"
		},
		"3296": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_total"
		},
		"3297": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_subtotal"
		},
		"3298": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_total_tax"
		},
		"3299": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_projected_total"
		},
		"3300": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.balance"
		},
		"3301": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_balance"
		},
		"3302": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO"
		},
		"3303": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"3304": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"3305": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"3306": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"3307": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"3308": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"3309": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"3310": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"3311": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"3312": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO"
		},
		"3313": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO.shipping_method"
		},
		"3314": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"3315": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"3316": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"3317": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"3318": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"3319": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"3320": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"3321": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"3322": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"3323": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"3324": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO"
		},
		"3325": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO.item"
		},
		"3326": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO.item_id"
		},
		"3327": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"3328": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"3329": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"3330": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"3331": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"3332": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"3333": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"3334": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"3335": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"3336": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO"
		},
		"3337": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"3338": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"3339": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"3340": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"3341": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"3342": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"3343": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"3344": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"3345": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO"
		},
		"3346": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO.shipping_method"
		},
		"3347": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO.shipping_method_id"
		},
		"3348": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"3349": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"3350": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"3351": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"3352": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"3353": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"3354": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"3355": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"3356": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO"
		},
		"3357": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO.item"
		},
		"3358": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO.item_id"
		},
		"3359": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"3360": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"3361": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"3362": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"3363": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"3364": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"3365": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"3366": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"3367": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO"
		},
		"3368": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.id"
		},
		"3369": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.customer_id"
		},
		"3370": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.first_name"
		},
		"3371": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.last_name"
		},
		"3372": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.phone"
		},
		"3373": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.company"
		},
		"3374": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.address_1"
		},
		"3375": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.address_2"
		},
		"3376": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.city"
		},
		"3377": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.country_code"
		},
		"3378": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.province"
		},
		"3379": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.postal_code"
		},
		"3380": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.metadata"
		},
		"3381": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.created_at"
		},
		"3382": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.updated_at"
		},
		"3383": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO"
		},
		"3384": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.id"
		},
		"3385": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.order_id"
		},
		"3386": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.name"
		},
		"3387": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.description"
		},
		"3388": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.unit_price"
		},
		"3389": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.is_tax_inclusive"
		},
		"3390": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.shipping_option_id"
		},
		"3391": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.data"
		},
		"3392": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.metadata"
		},
		"3393": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.tax_lines"
		},
		"3394": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.adjustments"
		},
		"3395": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.created_at"
		},
		"3396": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.updated_at"
		},
		"3397": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.total"
		},
		"3398": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.subtotal"
		},
		"3399": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.tax_total"
		},
		"3400": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.discount_total"
		},
		"3401": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.discount_tax_total"
		},
		"3402": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO"
		},
		"3403": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_total"
		},
		"3404": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_subtotal"
		},
		"3405": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_tax_total"
		},
		"3406": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_total"
		},
		"3407": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_subtotal"
		},
		"3408": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_tax_total"
		},
		"3409": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.total"
		},
		"3410": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.subtotal"
		},
		"3411": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.tax_total"
		},
		"3412": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_total"
		},
		"3413": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_tax_total"
		},
		"3414": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO"
		},
		"3415": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.id"
		},
		"3416": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.title"
		},
		"3417": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.subtitle"
		},
		"3418": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.thumbnail"
		},
		"3419": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_id"
		},
		"3420": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_id"
		},
		"3421": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_title"
		},
		"3422": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_description"
		},
		"3423": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_subtitle"
		},
		"3424": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_type"
		},
		"3425": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_collection"
		},
		"3426": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_handle"
		},
		"3427": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_sku"
		},
		"3428": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_barcode"
		},
		"3429": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_title"
		},
		"3430": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_option_values"
		},
		"3431": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.requires_shipping"
		},
		"3432": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.is_discountable"
		},
		"3433": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.is_tax_inclusive"
		},
		"3434": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.compare_at_unit_price"
		},
		"3435": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.raw_compare_at_unit_price"
		},
		"3436": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.unit_price"
		},
		"3437": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.raw_unit_price"
		},
		"3438": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.tax_lines"
		},
		"3439": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.adjustments"
		},
		"3440": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.detail"
		},
		"3441": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.created_at"
		},
		"3442": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.updated_at"
		},
		"3443": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_total"
		},
		"3444": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_subtotal"
		},
		"3445": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_tax_total"
		},
		"3446": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_total"
		},
		"3447": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_subtotal"
		},
		"3448": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_tax_total"
		},
		"3449": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.total"
		},
		"3450": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.subtotal"
		},
		"3451": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.tax_total"
		},
		"3452": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_total"
		},
		"3453": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_tax_total"
		},
		"3454": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO"
		},
		"3455": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.id"
		},
		"3456": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.item_id"
		},
		"3457": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.item"
		},
		"3458": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.quantity"
		},
		"3459": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_quantity"
		},
		"3460": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.fulfilled_quantity"
		},
		"3461": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_fulfilled_quantity"
		},
		"3462": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.shipped_quantity"
		},
		"3463": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_shipped_quantity"
		},
		"3464": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_requested_quantity"
		},
		"3465": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_requested_quantity"
		},
		"3466": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_received_quantity"
		},
		"3467": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_received_quantity"
		},
		"3468": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_dismissed_quantity"
		},
		"3469": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_dismissed_quantity"
		},
		"3470": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.written_off_quantity"
		},
		"3471": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_written_off_quantity"
		},
		"3472": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.metadata"
		},
		"3473": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.created_at"
		},
		"3474": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.updated_at"
		},
		"3475": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO"
		},
		"3476": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.id"
		},
		"3477": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.version"
		},
		"3478": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.region_id"
		},
		"3479": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.customer_id"
		},
		"3480": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.sales_channel_id"
		},
		"3481": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.email"
		},
		"3482": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.currency_code"
		},
		"3483": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.shipping_address"
		},
		"3484": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.billing_address"
		},
		"3485": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.items"
		},
		"3486": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.shipping_methods"
		},
		"3487": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.transactions"
		},
		"3488": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.summary"
		},
		"3489": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.metadata"
		},
		"3490": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.created_at"
		},
		"3491": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.updated_at"
		},
		"3492": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO"
		},
		"3493": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.id"
		},
		"3494": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.order_id"
		},
		"3495": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.order"
		},
		"3496": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.actions"
		},
		"3497": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.status"
		},
		"3498": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.requested_by"
		},
		"3499": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.requested_at"
		},
		"3500": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.confirmed_by"
		},
		"3501": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.confirmed_at"
		},
		"3502": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_by"
		},
		"3503": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_reason"
		},
		"3504": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.metadata"
		},
		"3505": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_at"
		},
		"3506": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.canceled_by"
		},
		"3507": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.canceled_at"
		},
		"3508": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.created_at"
		},
		"3509": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.updated_at"
		},
		"3510": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO"
		},
		"3511": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.id"
		},
		"3512": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_change_id"
		},
		"3513": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_change"
		},
		"3514": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_id"
		},
		"3515": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order"
		},
		"3516": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.reference"
		},
		"3517": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.reference_id"
		},
		"3518": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.action"
		},
		"3519": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.metadata"
		},
		"3520": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.internal_note"
		},
		"3521": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.created_at"
		},
		"3522": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.updated_at"
		},
		"3523": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO"
		},
		"3524": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.id"
		},
		"3525": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.order_id"
		},
		"3526": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.order"
		},
		"3527": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.amount"
		},
		"3528": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.currency_code"
		},
		"3529": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.reference"
		},
		"3530": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.reference_id"
		},
		"3531": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.metadata"
		},
		"3532": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.created_at"
		},
		"3533": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.updated_at"
		},
		"3534": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps"
		},
		"3535": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.id"
		},
		"3536": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.sales_channel_id"
		},
		"3537": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.customer_id"
		},
		"3538": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.region_id"
		},
		"3539": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.created_at"
		},
		"3540": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.updated_at"
		},
		"3541": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3542": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3543": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderAddressProps"
		},
		"3544": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderAddressProps.id"
		},
		"3545": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3546": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3547": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps"
		},
		"3548": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.id"
		},
		"3549": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.order_id"
		},
		"3550": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.title"
		},
		"3551": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.variant_id"
		},
		"3552": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.product_id"
		},
		"3553": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3554": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3555": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps"
		},
		"3556": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.id"
		},
		"3557": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.item_id"
		},
		"3558": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.promotion_id"
		},
		"3559": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.provider_id"
		},
		"3560": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.item"
		},
		"3561": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3562": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3563": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps"
		},
		"3564": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.id"
		},
		"3565": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.order_id"
		},
		"3566": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.name"
		},
		"3567": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.shipping_option_id"
		},
		"3568": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3569": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3570": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps"
		},
		"3571": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.id"
		},
		"3572": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.shipping_method_id"
		},
		"3573": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.promotion_id"
		},
		"3574": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.provider_id"
		},
		"3575": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.shipping_method"
		},
		"3576": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3577": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3578": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps"
		},
		"3579": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.id"
		},
		"3580": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.description"
		},
		"3581": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.code"
		},
		"3582": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.tax_rate_id"
		},
		"3583": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.provider_id"
		},
		"3584": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.item_id"
		},
		"3585": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.item"
		},
		"3586": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3587": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3588": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps"
		},
		"3589": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.id"
		},
		"3590": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.description"
		},
		"3591": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.code"
		},
		"3592": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.tax_rate_id"
		},
		"3593": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.provider_id"
		},
		"3594": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.shipping_method_id"
		},
		"3595": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.shipping_method"
		},
		"3596": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3597": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3598": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps"
		},
		"3599": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.id"
		},
		"3600": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.order_id"
		},
		"3601": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.status"
		},
		"3602": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.requested_by"
		},
		"3603": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.confirmed_by"
		},
		"3604": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.declined_by"
		},
		"3605": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.canceled_by"
		},
		"3606": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3607": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3608": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps"
		},
		"3609": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.id"
		},
		"3610": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.order_change_id"
		},
		"3611": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.reference"
		},
		"3612": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.reference_id"
		},
		"3613": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3614": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3615": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps"
		},
		"3616": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.id"
		},
		"3617": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.order_id"
		},
		"3618": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.currency_code"
		},
		"3619": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.reference"
		},
		"3620": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.reference_id"
		},
		"3621": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3622": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3623": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO"
		},
		"3624": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"3625": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"3626": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"3627": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"3628": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"3629": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"3630": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"3631": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"3632": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"3633": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"3634": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"3635": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"3636": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAddressDTO"
		},
		"3637": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAddressDTO.id"
		},
		"3638": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"3639": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"3640": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"3641": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"3642": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"3643": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"3644": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"3645": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"3646": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"3647": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"3648": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"3649": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"3650": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAddressDTO"
		},
		"3651": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"3652": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"3653": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"3654": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"3655": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"3656": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"3657": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"3658": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"3659": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"3660": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"3661": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"3662": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"3663": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO"
		},
		"3664": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.region_id"
		},
		"3665": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.customer_id"
		},
		"3666": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.sales_channel_id"
		},
		"3667": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.status"
		},
		"3668": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.email"
		},
		"3669": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.currency_code"
		},
		"3670": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_address_id"
		},
		"3671": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.billing_address_id"
		},
		"3672": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_address"
		},
		"3673": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.billing_address"
		},
		"3674": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.no_notification"
		},
		"3675": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.items"
		},
		"3676": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_methods"
		},
		"3677": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.transactions"
		},
		"3678": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.metadata"
		},
		"3679": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO"
		},
		"3680": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.id"
		},
		"3681": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.version"
		},
		"3682": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.region_id"
		},
		"3683": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.customer_id"
		},
		"3684": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.sales_channel_id"
		},
		"3685": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.status"
		},
		"3686": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.email"
		},
		"3687": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.no_notification"
		},
		"3688": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.metadata"
		},
		"3689": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO"
		},
		"3690": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.code"
		},
		"3691": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.amount"
		},
		"3692": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.description"
		},
		"3693": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.promotion_id"
		},
		"3694": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.provider_id"
		},
		"3695": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO"
		},
		"3696": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.id"
		},
		"3697": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.code"
		},
		"3698": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.amount"
		},
		"3699": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.description"
		},
		"3700": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.promotion_id"
		},
		"3701": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.provider_id"
		},
		"3702": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemAdjustmentDTO"
		},
		"3703": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemAdjustmentDTO.item_id"
		},
		"3704": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.code"
		},
		"3705": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.amount"
		},
		"3706": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.description"
		},
		"3707": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.promotion_id"
		},
		"3708": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.provider_id"
		},
		"3709": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemAdjustmentDTO"
		},
		"3710": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemAdjustmentDTO.item_id"
		},
		"3711": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.id"
		},
		"3712": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.code"
		},
		"3713": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.amount"
		},
		"3714": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.description"
		},
		"3715": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.promotion_id"
		},
		"3716": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.provider_id"
		},
		"3717": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO"
		},
		"3718": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.id"
		},
		"3719": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.item_id"
		},
		"3720": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.code"
		},
		"3721": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.amount"
		},
		"3722": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.description"
		},
		"3723": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.promotion_id"
		},
		"3724": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.provider_id"
		},
		"3725": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO"
		},
		"3726": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"3727": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"3728": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"3729": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"3730": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"3731": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO"
		},
		"3732": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"3733": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"3734": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"3735": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"3736": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"3737": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"3738": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodTaxLineDTO"
		},
		"3739": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"3740": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"3741": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"3742": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"3743": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"3744": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodTaxLineDTO"
		},
		"3745": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"3746": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"3747": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"3748": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"3749": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"3750": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"3751": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemTaxLineDTO"
		},
		"3752": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"3753": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"3754": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"3755": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"3756": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"3757": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemTaxLineDTO"
		},
		"3758": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"3759": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"3760": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"3761": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"3762": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"3763": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"3764": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO"
		},
		"3765": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.title"
		},
		"3766": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.subtitle"
		},
		"3767": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.thumbnail"
		},
		"3768": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.order_id"
		},
		"3769": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.quantity"
		},
		"3770": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_id"
		},
		"3771": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_title"
		},
		"3772": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_description"
		},
		"3773": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_subtitle"
		},
		"3774": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_type"
		},
		"3775": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_collection"
		},
		"3776": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_handle"
		},
		"3777": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_id"
		},
		"3778": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_sku"
		},
		"3779": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_barcode"
		},
		"3780": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_title"
		},
		"3781": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_option_values"
		},
		"3782": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.requires_shipping"
		},
		"3783": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_discountable"
		},
		"3784": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_tax_inclusive"
		},
		"3785": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.compare_at_unit_price"
		},
		"3786": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.unit_price"
		},
		"3787": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.tax_lines"
		},
		"3788": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.adjustments"
		},
		"3789": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemForOrderDTO"
		},
		"3790": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemForOrderDTO.order_id"
		},
		"3791": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.title"
		},
		"3792": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.subtitle"
		},
		"3793": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.thumbnail"
		},
		"3794": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.quantity"
		},
		"3795": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_id"
		},
		"3796": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_title"
		},
		"3797": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_description"
		},
		"3798": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_subtitle"
		},
		"3799": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_type"
		},
		"3800": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_collection"
		},
		"3801": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_handle"
		},
		"3802": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_id"
		},
		"3803": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_sku"
		},
		"3804": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_barcode"
		},
		"3805": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_title"
		},
		"3806": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_option_values"
		},
		"3807": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.requires_shipping"
		},
		"3808": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_discountable"
		},
		"3809": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_tax_inclusive"
		},
		"3810": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.compare_at_unit_price"
		},
		"3811": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.unit_price"
		},
		"3812": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.tax_lines"
		},
		"3813": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.adjustments"
		},
		"3814": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO"
		},
		"3815": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO.selector"
		},
		"3816": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO.data"
		},
		"3817": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO"
		},
		"3818": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.id"
		},
		"3819": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.title"
		},
		"3820": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.quantity"
		},
		"3821": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.unit_price"
		},
		"3822": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.tax_lines"
		},
		"3823": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.adjustments"
		},
		"3824": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_id"
		},
		"3825": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_id"
		},
		"3826": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "subtitle"
		},
		"3827": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "thumbnail"
		},
		"3828": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_title"
		},
		"3829": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_description"
		},
		"3830": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_subtitle"
		},
		"3831": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_type"
		},
		"3832": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_collection"
		},
		"3833": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_handle"
		},
		"3834": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_sku"
		},
		"3835": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_barcode"
		},
		"3836": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_title"
		},
		"3837": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_option_values"
		},
		"3838": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "requires_shipping"
		},
		"3839": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "is_discountable"
		},
		"3840": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "is_tax_inclusive"
		},
		"3841": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "compare_at_unit_price"
		},
		"3842": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "order_id"
		},
		"3843": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO"
		},
		"3844": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.name"
		},
		"3845": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.shipping_method_id"
		},
		"3846": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.order_id"
		},
		"3847": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.amount"
		},
		"3848": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.data"
		},
		"3849": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.tax_lines"
		},
		"3850": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.adjustments"
		},
		"3851": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO"
		},
		"3852": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.id"
		},
		"3853": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.name"
		},
		"3854": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.shipping_method_id"
		},
		"3855": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.amount"
		},
		"3856": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.data"
		},
		"3857": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.tax_lines"
		},
		"3858": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.adjustments"
		},
		"3859": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO"
		},
		"3860": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"3861": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.code"
		},
		"3862": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.amount"
		},
		"3863": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.description"
		},
		"3864": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.promotion_id"
		},
		"3865": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.provider_id"
		},
		"3866": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO"
		},
		"3867": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.id"
		},
		"3868": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.code"
		},
		"3869": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.amount"
		},
		"3870": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.description"
		},
		"3871": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.promotion_id"
		},
		"3872": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.provider_id"
		},
		"3873": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO"
		},
		"3874": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.order_id"
		},
		"3875": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.description"
		},
		"3876": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.internal_note"
		},
		"3877": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.requested_by"
		},
		"3878": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.requested_at"
		},
		"3879": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.metadata"
		},
		"3880": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO"
		},
		"3881": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.id"
		},
		"3882": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.status"
		},
		"3883": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.description"
		},
		"3884": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.internal_note"
		},
		"3885": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.requested_by"
		},
		"3886": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.requested_at"
		},
		"3887": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.confirmed_by"
		},
		"3888": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.confirmed_at"
		},
		"3889": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_by"
		},
		"3890": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_reason"
		},
		"3891": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_at"
		},
		"3892": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.canceled_by"
		},
		"3893": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.metadata"
		},
		"3894": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO"
		},
		"3895": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.id"
		},
		"3896": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.canceled_by"
		},
		"3897": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.metadata"
		},
		"3898": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO"
		},
		"3899": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.id"
		},
		"3900": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.declined_by"
		},
		"3901": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.metadata"
		},
		"3902": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO"
		},
		"3903": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.id"
		},
		"3904": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.confirmed_by"
		},
		"3905": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.metadata"
		},
		"3906": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO"
		},
		"3907": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.order_change_id"
		},
		"3908": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.reference"
		},
		"3909": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.reference_id"
		},
		"3910": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.action"
		},
		"3911": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.internal_note"
		},
		"3912": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.metadata"
		},
		"3913": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO"
		},
		"3914": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.id"
		},
		"3915": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.reference"
		},
		"3916": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.reference_id"
		},
		"3917": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.action"
		},
		"3918": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.internal_note"
		},
		"3919": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.metadata"
		},
		"3920": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO"
		},
		"3921": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.order_id"
		},
		"3922": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.amount"
		},
		"3923": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.currency_code"
		},
		"3924": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.reference"
		},
		"3925": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.reference_id"
		},
		"3926": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.metadata"
		},
		"3927": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO"
		},
		"3928": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.id"
		},
		"3929": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.amount"
		},
		"3930": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.currency_code"
		},
		"3931": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.reference"
		},
		"3932": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.reference_id"
		},
		"3933": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.metadata"
		},
		"3934": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO"
		},
		"3935": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.id"
		},
		"3936": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.order_id"
		},
		"3937": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.version"
		},
		"3938": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.item_id"
		},
		"3939": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.quantity"
		},
		"3940": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.fulfilled_quantity"
		},
		"3941": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_requested_quantity"
		},
		"3942": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_received_quantity"
		},
		"3943": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_dismissed_quantity"
		},
		"3944": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.written_off_quantity"
		},
		"3945": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.metadata"
		},
		"3946": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO"
		},
		"3947": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO.selector"
		},
		"3948": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO.data"
		},
		"3949": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService"
		},
		"3950": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieve"
		},
		"3951": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieve"
		},
		"3952": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"3953": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"3954": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3955": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.list"
		},
		"3956": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.list"
		},
		"3957": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"3958": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"3959": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3960": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAndCount"
		},
		"3961": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAndCount"
		},
		"3962": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"3963": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"3964": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3965": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"3966": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"3967": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3968": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3969": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"3970": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3971": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3972": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"3973": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"3974": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3975": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"3976": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"3977": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3978": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3979": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"3980": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"3981": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3982": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3983": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"3984": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"3985": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderIds"
		},
		"3986": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3987": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"3988": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"3989": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3990": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAddresses"
		},
		"3991": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAddresses"
		},
		"3992": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"3993": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"3994": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3995": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"3996": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"3997": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"3998": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3999": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"4000": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4001": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4002": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"4003": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"4004": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4005": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4006": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"4007": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4008": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4009": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"4010": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"4011": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "ids"
		},
		"4012": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4013": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"4014": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "ids"
		},
		"4015": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4016": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieveLineItem"
		},
		"4017": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieveLineItem"
		},
		"4018": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemId"
		},
		"4019": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4020": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4021": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItems"
		},
		"4022": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItems"
		},
		"4023": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4024": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4025": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4026": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"4027": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"4028": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4029": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"4030": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4031": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"4032": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4033": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "items"
		},
		"4034": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4035": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"4036": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"4037": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4038": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"4039": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4040": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4041": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4042": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"4043": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "lineId"
		},
		"4044": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4045": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4046": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"4047": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"4048": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemIds"
		},
		"4049": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4050": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"4051": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemIds"
		},
		"4052": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4053": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"4054": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4055": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4056": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"4057": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"4058": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4059": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4060": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4061": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"4062": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderDetailId"
		},
		"4063": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4064": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4065": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"4066": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderDetailIdOrDataOrSelector"
		},
		"4067": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4068": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4069": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethods"
		},
		"4070": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethods"
		},
		"4071": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4072": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4073": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4074": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"4075": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"4076": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4077": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"4078": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4079": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"4080": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4081": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methods"
		},
		"4082": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4083": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"4084": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"4085": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methodIds"
		},
		"4086": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4087": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"4088": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methodIds"
		},
		"4089": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4090": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"4091": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4092": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4093": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemAdjustments"
		},
		"4094": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemAdjustments"
		},
		"4095": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4096": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4097": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4098": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"4099": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"4100": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4101": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"4102": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4103": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"4104": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4105": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4106": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemAdjustments"
		},
		"4107": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemAdjustments"
		},
		"4108": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4109": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4110": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4111": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"4112": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"4113": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"4114": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4115": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"4116": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"4117": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4118": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"4119": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4120": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4121": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodAdjustments"
		},
		"4122": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodAdjustments"
		},
		"4123": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4124": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4125": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4126": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"4127": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"4128": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4129": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"4130": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4131": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"4132": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4133": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4134": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4135": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodAdjustments"
		},
		"4136": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodAdjustments"
		},
		"4137": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4138": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4139": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4140": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"4141": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"4142": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"4143": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4144": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"4145": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentId"
		},
		"4146": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4147": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"4148": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4149": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4150": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemTaxLines"
		},
		"4151": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemTaxLines"
		},
		"4152": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4153": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4154": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4155": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"4156": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"4157": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4158": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"4159": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLine"
		},
		"4160": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"4161": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4162": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4163": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4164": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemTaxLines"
		},
		"4165": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemTaxLines"
		},
		"4166": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4167": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4168": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4169": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"4170": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"4171": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"4172": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4173": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"4174": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"4175": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4176": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"4177": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4178": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4179": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodTaxLines"
		},
		"4180": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodTaxLines"
		},
		"4181": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"4182": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"4183": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4184": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"4185": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"4186": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4187": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"4188": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLine"
		},
		"4189": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"4190": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4191": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4192": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4193": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodTaxLines"
		},
		"4194": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodTaxLines"
		},
		"4195": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4196": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"4197": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4198": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"4199": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"4200": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"4201": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4202": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"4203": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"4204": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4205": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"4206": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"4207": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4208": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"4209": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"4210": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4211": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4212": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"4213": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4214": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4215": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"4216": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4217": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4218": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"4219": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"4220": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4221": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4222": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"4223": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4224": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4225": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"4226": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4227": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4228": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"4229": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4230": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4231": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"4232": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"4233": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4234": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4235": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"4236": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4237": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4238": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"4239": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4240": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4241": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"4242": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4243": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4244": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"4245": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"4246": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4247": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4248": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"4249": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4250": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4251": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"4252": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4253": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4254": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"4255": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4256": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4257": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.applyPendingOrderActions"
		},
		"4258": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.applyPendingOrderActions"
		},
		"4259": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"4260": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4261": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addOrderAction"
		},
		"4262": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addOrderAction"
		},
		"4263": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"4264": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4272": {
			"sourceFileName": "../../../packages/types/src/promotion/index.ts",
			"qualifiedName": ""
		},
		"4273": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTypeValues"
		},
		"4274": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTargetTypeValues"
		},
		"4275": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodAllocationValues"
		},
		"4276": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO"
		},
		"4277": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.id"
		},
		"4278": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.type"
		},
		"4279": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_type"
		},
		"4280": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.allocation"
		},
		"4281": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.value"
		},
		"4282": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.max_quantity"
		},
		"4283": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules_min_quantity"
		},
		"4284": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.apply_to_quantity"
		},
		"4285": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.promotion"
		},
		"4286": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_rules"
		},
		"4287": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules"
		},
		"4288": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO"
		},
		"4289": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.type"
		},
		"4290": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_type"
		},
		"4291": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.allocation"
		},
		"4292": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.value"
		},
		"4293": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.max_quantity"
		},
		"4294": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"4295": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.apply_to_quantity"
		},
		"4296": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.promotion"
		},
		"4297": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_rules"
		},
		"4298": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules"
		},
		"4299": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO"
		},
		"4300": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.id"
		},
		"4301": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.type"
		},
		"4302": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.target_type"
		},
		"4303": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.allocation"
		},
		"4304": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.value"
		},
		"4305": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.max_quantity"
		},
		"4306": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"4307": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.apply_to_quantity"
		},
		"4308": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.promotion"
		},
		"4309": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "FilterableApplicationMethodProps"
		},
		"4310": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "FilterableApplicationMethodProps.id"
		},
		"4311": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "FilterableApplicationMethodProps.type"
		},
		"4312": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "FilterableApplicationMethodProps.target_type"
		},
		"4313": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "FilterableApplicationMethodProps.allocation"
		},
		"4314": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4315": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4316": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO"
		},
		"4317": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.id"
		},
		"4318": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.name"
		},
		"4319": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.description"
		},
		"4320": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.currency"
		},
		"4321": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.campaign_identifier"
		},
		"4322": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.starts_at"
		},
		"4323": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.ends_at"
		},
		"4324": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.budget"
		},
		"4325": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps"
		},
		"4326": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.id"
		},
		"4327": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.campaign_identifier"
		},
		"4328": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4329": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4330": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetTypeValues"
		},
		"4331": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO"
		},
		"4332": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.id"
		},
		"4333": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.type"
		},
		"4334": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.limit"
		},
		"4335": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.used"
		},
		"4336": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "FilterableCampaignBudgetProps"
		},
		"4337": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "FilterableCampaignBudgetProps.id"
		},
		"4338": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "FilterableCampaignBudgetProps.type"
		},
		"4339": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4340": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4341": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActions"
		},
		"4342": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "UsageComputedActions"
		},
		"4343": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction"
		},
		"4344": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.action"
		},
		"4345": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.code"
		},
		"4346": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction"
		},
		"4347": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.action"
		},
		"4348": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.item_id"
		},
		"4349": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.amount"
		},
		"4350": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.code"
		},
		"4351": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.description"
		},
		"4352": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction"
		},
		"4353": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.action"
		},
		"4354": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.adjustment_id"
		},
		"4355": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.description"
		},
		"4356": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.code"
		},
		"4357": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment"
		},
		"4358": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.action"
		},
		"4359": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.shipping_method_id"
		},
		"4360": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.amount"
		},
		"4361": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.code"
		},
		"4362": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.description"
		},
		"4363": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment"
		},
		"4364": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.action"
		},
		"4365": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.adjustment_id"
		},
		"4366": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.code"
		},
		"4367": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine"
		},
		"4368": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.id"
		},
		"4369": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.code"
		},
		"4370": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine"
		},
		"4371": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.id"
		},
		"4372": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.quantity"
		},
		"4373": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.subtotal"
		},
		"4374": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.adjustments"
		},
		"4375": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine"
		},
		"4376": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.id"
		},
		"4377": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.subtotal"
		},
		"4378": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.adjustments"
		},
		"4379": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext"
		},
		"4380": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.items"
		},
		"4381": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.shipping_methods"
		},
		"4382": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionOptions"
		},
		"4383": {
			"sourceFileName": "../../../packages/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionOptions.prevent_auto_promotions"
		},
		"4384": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionTypeValues"
		},
		"4385": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO"
		},
		"4386": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.id"
		},
		"4387": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.code"
		},
		"4388": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.type"
		},
		"4389": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.is_automatic"
		},
		"4390": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.application_method"
		},
		"4391": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.rules"
		},
		"4392": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign"
		},
		"4393": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO"
		},
		"4394": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.code"
		},
		"4395": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.type"
		},
		"4396": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.is_automatic"
		},
		"4397": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.application_method"
		},
		"4398": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.rules"
		},
		"4399": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign"
		},
		"4400": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign_id"
		},
		"4401": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO"
		},
		"4402": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.id"
		},
		"4403": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.is_automatic"
		},
		"4404": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.code"
		},
		"4405": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.type"
		},
		"4406": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.application_method"
		},
		"4407": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.campaign_id"
		},
		"4408": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps"
		},
		"4409": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.id"
		},
		"4410": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.code"
		},
		"4411": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.budget_id"
		},
		"4412": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.is_automatic"
		},
		"4413": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.type"
		},
		"4414": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4415": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4416": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleOperatorValues"
		},
		"4417": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO"
		},
		"4418": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.id"
		},
		"4419": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.description"
		},
		"4420": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.attribute"
		},
		"4421": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.operator"
		},
		"4422": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.values"
		},
		"4423": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO"
		},
		"4424": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.description"
		},
		"4425": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.attribute"
		},
		"4426": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.operator"
		},
		"4427": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.values"
		},
		"4428": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO"
		},
		"4429": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.id"
		},
		"4430": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.description"
		},
		"4431": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.attribute"
		},
		"4432": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.operator"
		},
		"4433": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.values"
		},
		"4434": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "RemovePromotionRuleDTO"
		},
		"4435": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "RemovePromotionRuleDTO.id"
		},
		"4436": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps"
		},
		"4437": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps.id"
		},
		"4438": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4439": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4440": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleTypes"
		},
		"4441": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO"
		},
		"4442": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.id"
		},
		"4443": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.value"
		},
		"4444": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "CreatePromotionRuleValueDTO"
		},
		"4445": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "CreatePromotionRuleValueDTO.value"
		},
		"4446": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "CreatePromotionRuleValueDTO.promotion_rule"
		},
		"4447": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "UpdatePromotionRuleValueDTO"
		},
		"4448": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "UpdatePromotionRuleValueDTO.id"
		},
		"4449": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "FilterablePromotionRuleValueProps"
		},
		"4450": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "FilterablePromotionRuleValueProps.id"
		},
		"4451": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4452": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4453": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO"
		},
		"4454": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.type"
		},
		"4455": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.limit"
		},
		"4456": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.used"
		},
		"4457": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO"
		},
		"4458": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.id"
		},
		"4459": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.type"
		},
		"4460": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.limit"
		},
		"4461": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.used"
		},
		"4462": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO"
		},
		"4463": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.name"
		},
		"4464": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.description"
		},
		"4465": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.currency"
		},
		"4466": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.campaign_identifier"
		},
		"4467": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.starts_at"
		},
		"4468": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.ends_at"
		},
		"4469": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.budget"
		},
		"4470": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.promotions"
		},
		"4471": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO"
		},
		"4472": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.id"
		},
		"4473": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.name"
		},
		"4474": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.description"
		},
		"4475": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.currency"
		},
		"4476": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.campaign_identifier"
		},
		"4477": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.starts_at"
		},
		"4478": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.ends_at"
		},
		"4479": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.budget"
		},
		"4480": {
			"sourceFileName": "../../../packages/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.promotions"
		},
		"4481": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService"
		},
		"4482": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"4483": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"4484": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "computedActions"
		},
		"4485": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"4486": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"4487": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionCodesToApply"
		},
		"4488": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "applicationContext"
		},
		"4489": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "options"
		},
		"4490": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.create"
		},
		"4491": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.create"
		},
		"4492": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4493": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4494": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.create"
		},
		"4495": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4496": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4497": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.update"
		},
		"4498": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.update"
		},
		"4499": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4500": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4501": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.update"
		},
		"4502": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4503": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4504": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.list"
		},
		"4505": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.list"
		},
		"4506": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"4507": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4508": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4509": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCount"
		},
		"4510": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCount"
		},
		"4511": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"4512": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4513": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4514": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieve"
		},
		"4515": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieve"
		},
		"4516": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"4517": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4518": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4519": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.delete"
		},
		"4520": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.delete"
		},
		"4521": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"4522": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4523": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.delete"
		},
		"4524": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"4525": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4526": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDelete"
		},
		"4527": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDelete"
		},
		"4528": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4529": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"4530": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4531": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4532": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restore"
		},
		"4533": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restore"
		},
		"4534": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4535": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"4536": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4537": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4538": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"4539": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"4540": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4541": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"4542": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4543": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"4544": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"4545": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4546": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"4547": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4548": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"4549": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"4550": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4551": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"4552": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4553": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"4554": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"4555": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4556": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"4557": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4558": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"4559": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"4560": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4561": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"4562": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4563": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"4564": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"4565": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"4566": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"4567": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4568": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"4569": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"4570": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4571": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4572": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"4573": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4574": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4575": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"4576": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"4577": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4578": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4579": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"4580": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4581": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4582": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"4583": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"4584": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"4585": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4586": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4587": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"4588": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"4589": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"4590": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4591": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"4592": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"4593": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"4594": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4595": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4596": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"4597": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"4598": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"4599": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4600": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4601": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"4602": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"4603": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"4604": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4605": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4606": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"4607": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"4608": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"4609": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4610": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"4611": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"4612": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4613": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"4614": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"4615": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4616": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"4617": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4618": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4619": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"4620": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"4621": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4622": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"4623": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"4624": {
			"sourceFileName": "../../../packages/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4632": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "AddPromotionRulesWorkflowDTO"
		},
		"4633": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"4634": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"4635": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"4636": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"4637": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"4638": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rules"
		},
		"4639": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "RemovePromotionRulesWorkflowDTO"
		},
		"4640": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"4641": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"4642": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"4643": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"4644": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"4645": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_ids"
		},
		"4646": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "UpdatePromotionRulesWorkflowDTO"
		},
		"4647": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"4648": {
			"sourceFileName": "../../../packages/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"4649": {
			"sourceFileName": "../../../packages/types/src/region__legacy/index.ts",
			"qualifiedName": ""
		},
		"4650": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "RegionDTO__legacy"
		},
		"4651": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.name"
		},
		"4652": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.currency_code"
		},
		"4653": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"4654": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_code"
		},
		"4655": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.gift_cards_taxable"
		},
		"4656": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.automatic_taxes"
		},
		"4657": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_provider_id"
		},
		"4658": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"4659": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"4660": {
			"sourceFileName": "../../../packages/types/src/sales-channel/index.ts",
			"qualifiedName": ""
		},
		"4661": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO"
		},
		"4662": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel_id"
		},
		"4663": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.location_id"
		},
		"4664": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel"
		},
		"4665": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO"
		},
		"4666": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.id"
		},
		"4667": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.name"
		},
		"4668": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.description"
		},
		"4669": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.is_disabled"
		},
		"4670": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.metadata"
		},
		"4671": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.locations"
		},
		"4672": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps"
		},
		"4673": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.id"
		},
		"4674": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.name"
		},
		"4675": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.is_disabled"
		},
		"4676": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4677": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4678": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO"
		},
		"4679": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.name"
		},
		"4680": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.description"
		},
		"4681": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.is_disabled"
		},
		"4682": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO"
		},
		"4683": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.name"
		},
		"4684": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.description"
		},
		"4685": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.is_disabled"
		},
		"4686": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.metadata"
		},
		"4687": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO"
		},
		"4688": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.id"
		},
		"4689": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.name"
		},
		"4690": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.description"
		},
		"4691": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.is_disabled"
		},
		"4692": {
			"sourceFileName": "../../../packages/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.metadata"
		},
		"4693": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService"
		},
		"4694": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.create"
		},
		"4695": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.create"
		},
		"4696": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4697": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4698": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.create"
		},
		"4699": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4700": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4701": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.update"
		},
		"4702": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.update"
		},
		"4703": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "channelId"
		},
		"4704": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4705": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4706": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.update"
		},
		"4707": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "selector"
		},
		"4708": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4709": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4710": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsert"
		},
		"4711": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsert"
		},
		"4712": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4713": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4714": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsert"
		},
		"4715": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"4716": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4717": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.delete"
		},
		"4718": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.delete"
		},
		"4719": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ids"
		},
		"4720": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4721": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.delete"
		},
		"4722": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"4723": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4724": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieve"
		},
		"4725": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieve"
		},
		"4726": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"4727": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"4728": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4729": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.list"
		},
		"4730": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.list"
		},
		"4731": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"4732": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"4733": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4734": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCount"
		},
		"4735": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCount"
		},
		"4736": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"4737": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"4738": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4739": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDelete"
		},
		"4740": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDelete"
		},
		"4741": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4742": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"4743": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"4744": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4745": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restore"
		},
		"4746": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restore"
		},
		"4747": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4748": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"4749": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"4750": {
			"sourceFileName": "../../../packages/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4758": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"4759": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"4760": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"4761": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"4762": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"4763": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"4764": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"4765": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"4766": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"4767": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"4768": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"4769": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"4770": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"4771": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4772": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"4773": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"4774": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"4775": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4776": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"4777": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"4778": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4779": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"4780": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"4781": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"4782": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"4783": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4784": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"4785": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"4786": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"4787": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"4788": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4789": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"4790": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"4791": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"4792": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4793": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"4794": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"4795": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4796": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"4797": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"4798": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"4799": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"4800": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"4801": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"4802": {
			"sourceFileName": "../../../packages/types/src/tax/index.ts",
			"qualifiedName": ""
		},
		"4803": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO"
		},
		"4804": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.id"
		},
		"4805": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.rate"
		},
		"4806": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.code"
		},
		"4807": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.name"
		},
		"4808": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.metadata"
		},
		"4809": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.tax_region_id"
		},
		"4810": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_combinable"
		},
		"4811": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_default"
		},
		"4812": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_at"
		},
		"4813": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.updated_at"
		},
		"4814": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.deleted_at"
		},
		"4815": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_by"
		},
		"4816": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxProviderDTO"
		},
		"4817": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxProviderDTO.id"
		},
		"4818": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxProviderDTO.is_enabled"
		},
		"4819": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps"
		},
		"4820": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.id"
		},
		"4821": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.tax_region_id"
		},
		"4822": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.rate"
		},
		"4823": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.code"
		},
		"4824": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.name"
		},
		"4825": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_at"
		},
		"4826": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.updated_at"
		},
		"4827": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_by"
		},
		"4828": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4829": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4830": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO"
		},
		"4831": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.id"
		},
		"4832": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.country_code"
		},
		"4833": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.province_code"
		},
		"4834": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.parent_id"
		},
		"4835": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.metadata"
		},
		"4836": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_at"
		},
		"4837": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.updated_at"
		},
		"4838": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_by"
		},
		"4839": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.deleted_at"
		},
		"4840": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps"
		},
		"4841": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.id"
		},
		"4842": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.country_code"
		},
		"4843": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.province_code"
		},
		"4844": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.parent_id"
		},
		"4845": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.metadata"
		},
		"4846": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_at"
		},
		"4847": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.updated_at"
		},
		"4848": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_by"
		},
		"4849": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4850": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4851": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO"
		},
		"4852": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.id"
		},
		"4853": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference"
		},
		"4854": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference_id"
		},
		"4855": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate_id"
		},
		"4856": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate"
		},
		"4857": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.metadata"
		},
		"4858": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_at"
		},
		"4859": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.updated_at"
		},
		"4860": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_by"
		},
		"4861": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps"
		},
		"4862": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference"
		},
		"4863": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference_id"
		},
		"4864": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate_id"
		},
		"4865": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate"
		},
		"4866": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.metadata"
		},
		"4867": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_at"
		},
		"4868": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.updated_at"
		},
		"4869": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_by"
		},
		"4870": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4871": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4872": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO"
		},
		"4873": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.id"
		},
		"4874": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_id"
		},
		"4875": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_name"
		},
		"4876": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_category_id"
		},
		"4877": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_categories"
		},
		"4878": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_sku"
		},
		"4879": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type"
		},
		"4880": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type_id"
		},
		"4881": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.quantity"
		},
		"4882": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.unit_price"
		},
		"4883": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.currency_code"
		},
		"4884": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO"
		},
		"4885": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.id"
		},
		"4886": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.shipping_option_id"
		},
		"4887": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.unit_price"
		},
		"4888": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.currency_code"
		},
		"4889": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext"
		},
		"4890": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.address"
		},
		"4891": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"4892": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"4893": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.province_code"
		},
		"4894": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"4895": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"4896": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.city"
		},
		"4897": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"4898": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.customer"
		},
		"4899": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"4900": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.id"
		},
		"4901": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.email"
		},
		"4902": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"4903": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.is_return"
		},
		"4904": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO"
		},
		"4905": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO.line_item_id"
		},
		"4906": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"4907": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"4908": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"4909": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"4910": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"4911": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO"
		},
		"4912": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO.shipping_line_id"
		},
		"4913": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"4914": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"4915": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"4916": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"4917": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"4918": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO"
		},
		"4919": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.tax_region_id"
		},
		"4920": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rate"
		},
		"4921": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.code"
		},
		"4922": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.name"
		},
		"4923": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rules"
		},
		"4924": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.is_default"
		},
		"4925": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.created_by"
		},
		"4926": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.metadata"
		},
		"4927": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO"
		},
		"4928": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.id"
		},
		"4929": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.rate"
		},
		"4930": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.code"
		},
		"4931": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.name"
		},
		"4932": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.is_default"
		},
		"4933": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.created_by"
		},
		"4934": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.metadata"
		},
		"4935": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO"
		},
		"4936": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rate"
		},
		"4937": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.code"
		},
		"4938": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.name"
		},
		"4939": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rules"
		},
		"4940": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_default"
		},
		"4941": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_combinable"
		},
		"4942": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.updated_by"
		},
		"4943": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.metadata"
		},
		"4944": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO"
		},
		"4945": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.country_code"
		},
		"4946": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.province_code"
		},
		"4947": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.parent_id"
		},
		"4948": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.metadata"
		},
		"4949": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.created_by"
		},
		"4950": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.default_tax_rate"
		},
		"4951": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type"
		},
		"4952": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.rate"
		},
		"4953": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.code"
		},
		"4954": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"4955": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.metadata"
		},
		"4956": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO"
		},
		"4957": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference"
		},
		"4958": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference_id"
		},
		"4959": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.tax_rate_id"
		},
		"4960": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.metadata"
		},
		"4961": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.created_by"
		},
		"4962": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService"
		},
		"4963": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"4964": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"4965": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"4966": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"4967": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4968": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"4969": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"4970": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"4971": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"4972": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4973": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"4974": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"4975": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"4976": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"4977": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4978": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"4979": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"4980": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"4981": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4982": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"4983": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"4984": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4985": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"4986": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"4987": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"4988": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"4989": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4990": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"4991": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"4992": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"4993": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4994": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"4995": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "selector"
		},
		"4996": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"4997": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4998": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"4999": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"5000": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5001": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5002": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"5003": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5004": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5005": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"5006": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"5007": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"5008": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5009": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"5010": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"5011": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5012": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"5013": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"5014": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5015": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"5016": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5017": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5018": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"5019": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"5020": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5021": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5022": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"5023": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5024": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5025": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"5026": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"5027": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"5028": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5029": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"5030": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionId"
		},
		"5031": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5032": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"5033": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"5034": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"5035": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5036": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5037": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"5038": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"5039": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5040": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5041": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"5042": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"5043": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5044": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"5045": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"5046": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleId"
		},
		"5047": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5048": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"5049": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"5050": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5051": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"5052": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"5053": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"5054": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5055": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5056": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"5057": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"5058": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "items"
		},
		"5059": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "calculationContext"
		},
		"5060": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5061": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"5062": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"5063": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5064": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"5065": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5066": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5067": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"5068": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"5069": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5070": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"5071": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5072": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5073": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"5074": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"5075": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5076": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"5077": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5078": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5079": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"5080": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"5081": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5082": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"5083": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5084": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5085": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"5086": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"5087": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5088": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"5089": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"5090": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5098": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ShippingTaxCalculationLine"
		},
		"5099": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type"
		},
		"5100": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type.shipping_line"
		},
		"5101": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type.rates"
		},
		"5102": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ItemTaxCalculationLine"
		},
		"5103": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type"
		},
		"5104": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type.line_item"
		},
		"5105": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "__type.rates"
		},
		"5106": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider"
		},
		"5107": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getIdentifier"
		},
		"5108": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getIdentifier"
		},
		"5109": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getTaxLines"
		},
		"5110": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getTaxLines"
		},
		"5111": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "itemLines"
		},
		"5112": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "shippingLines"
		},
		"5113": {
			"sourceFileName": "../../../packages/types/src/tax/provider.ts",
			"qualifiedName": "context"
		},
		"5114": {
			"sourceFileName": "../../../packages/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"5115": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"5116": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"5117": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"5118": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"5119": {
			"sourceFileName": "../../../packages/types/src/user/index.ts",
			"qualifiedName": ""
		},
		"5120": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO"
		},
		"5121": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.id"
		},
		"5122": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.email"
		},
		"5123": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.first_name"
		},
		"5124": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.last_name"
		},
		"5125": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.avatar_url"
		},
		"5126": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.metadata"
		},
		"5127": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.created_at"
		},
		"5128": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.updated_at"
		},
		"5129": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "UserDTO.deleted_at"
		},
		"5130": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableUserProps"
		},
		"5131": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableUserProps.id"
		},
		"5132": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableUserProps.email"
		},
		"5133": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableUserProps.first_name"
		},
		"5134": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableUserProps.last_name"
		},
		"5135": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5136": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5137": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO"
		},
		"5138": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.id"
		},
		"5139": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.email"
		},
		"5140": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.accepted"
		},
		"5141": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.token"
		},
		"5142": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.expires_at"
		},
		"5143": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.metadata"
		},
		"5144": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.created_at"
		},
		"5145": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.updated_at"
		},
		"5146": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "InviteDTO.deleted_at"
		},
		"5147": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableInviteProps"
		},
		"5148": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableInviteProps.id"
		},
		"5149": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableInviteProps.email"
		},
		"5150": {
			"sourceFileName": "../../../packages/types/src/user/common.ts",
			"qualifiedName": "FilterableInviteProps.expires_at"
		},
		"5151": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5152": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5153": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO"
		},
		"5154": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO.email"
		},
		"5155": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO.first_name"
		},
		"5156": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO.last_name"
		},
		"5157": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO.avatar_url"
		},
		"5158": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateUserDTO.metadata"
		},
		"5159": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "UpdateUserDTO"
		},
		"5160": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "UpdateUserDTO.id"
		},
		"5161": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "metadata"
		},
		"5162": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "first_name"
		},
		"5163": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "last_name"
		},
		"5164": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "avatar_url"
		},
		"5165": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateInviteDTO"
		},
		"5166": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateInviteDTO.email"
		},
		"5167": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateInviteDTO.accepted"
		},
		"5168": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "CreateInviteDTO.metadata"
		},
		"5169": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "UpdateInviteDTO"
		},
		"5170": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "UpdateInviteDTO.id"
		},
		"5171": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "metadata"
		},
		"5172": {
			"sourceFileName": "../../../packages/types/src/user/mutations.ts",
			"qualifiedName": "accepted"
		},
		"5173": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService"
		},
		"5174": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.validateInviteToken"
		},
		"5175": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.validateInviteToken"
		},
		"5176": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "token"
		},
		"5177": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5178": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.refreshInviteTokens"
		},
		"5179": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.refreshInviteTokens"
		},
		"5180": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "inviteIds"
		},
		"5181": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5182": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.retrieve"
		},
		"5183": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.retrieve"
		},
		"5184": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "id"
		},
		"5185": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5186": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5187": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.list"
		},
		"5188": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.list"
		},
		"5189": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "filters"
		},
		"5190": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5191": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5192": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listAndCount"
		},
		"5193": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listAndCount"
		},
		"5194": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "filters"
		},
		"5195": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5196": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5197": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.create"
		},
		"5198": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.create"
		},
		"5199": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5200": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5201": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.create"
		},
		"5202": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5203": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5204": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.update"
		},
		"5205": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.update"
		},
		"5206": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5207": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5208": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.update"
		},
		"5209": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5210": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5211": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.delete"
		},
		"5212": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.delete"
		},
		"5213": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "ids"
		},
		"5214": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5215": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.softDelete"
		},
		"5216": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.softDelete"
		},
		"5217": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5218": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "userIds"
		},
		"5219": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5220": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5221": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.restore"
		},
		"5222": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.restore"
		},
		"5223": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5224": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "userIds"
		},
		"5225": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5226": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5227": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.retrieveInvite"
		},
		"5228": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.retrieveInvite"
		},
		"5229": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "id"
		},
		"5230": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5231": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5232": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listInvites"
		},
		"5233": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listInvites"
		},
		"5234": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "filters"
		},
		"5235": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5236": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5237": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listAndCountInvites"
		},
		"5238": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.listAndCountInvites"
		},
		"5239": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "filters"
		},
		"5240": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5241": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5242": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.createInvites"
		},
		"5243": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.createInvites"
		},
		"5244": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5245": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5246": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.createInvites"
		},
		"5247": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5248": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5249": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.updateInvites"
		},
		"5250": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.updateInvites"
		},
		"5251": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5252": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5253": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.updateInvites"
		},
		"5254": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "data"
		},
		"5255": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5256": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.deleteInvites"
		},
		"5257": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.deleteInvites"
		},
		"5258": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "ids"
		},
		"5259": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5260": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.softDeleteInvites"
		},
		"5261": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.softDeleteInvites"
		},
		"5262": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5263": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "inviteIds"
		},
		"5264": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5265": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5266": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.restoreInvites"
		},
		"5267": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "IUserModuleService.restoreInvites"
		},
		"5268": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5269": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "inviteIds"
		},
		"5270": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "config"
		},
		"5271": {
			"sourceFileName": "../../../packages/types/src/user/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5279": {
			"sourceFileName": "../../../packages/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"5280": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/index.ts",
			"qualifiedName": ""
		},
		"5281": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO"
		},
		"5282": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO.variant_id"
		},
		"5283": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO.quantity"
		},
		"5284": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO"
		},
		"5285": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.region_id"
		},
		"5286": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.country_code"
		},
		"5287": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.items"
		},
		"5288": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.context"
		},
		"5289": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.sales_channel_id"
		},
		"5290": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address_id"
		},
		"5291": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address_id"
		},
		"5292": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address"
		},
		"5293": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address"
		},
		"5294": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.customer_id"
		},
		"5295": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.email"
		},
		"5296": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"5297": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"5298": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"5299": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"5300": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"5301": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"5302": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"5303": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"5304": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"5305": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"5306": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"5307": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"5308": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"5309": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"5310": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"5311": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules_count"
		},
		"5312": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"5313": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"5314": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"5315": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"5316": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"5317": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"5318": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"5319": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"5320": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"5321": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"5322": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"5323": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"5324": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_attribute"
		},
		"5325": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"5326": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"5327": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"5328": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"5329": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"5330": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"5331": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"5332": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"5333": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"5334": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"5335": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"5336": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"5337": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"5338": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"5339": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"5340": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"5341": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"5342": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"5343": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"5344": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"5345": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"5346": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"5347": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"5348": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"5349": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"5350": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"5351": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"5352": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"5353": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"5354": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"5355": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"5356": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"5357": {
			"sourceFileName": "../../../packages/types/src/workflow/user/index.ts",
			"qualifiedName": ""
		},
		"5358": {
			"sourceFileName": "../../../packages/types/src/workflow/user/create-user.ts",
			"qualifiedName": "CreateUsersWorkflowInputDTO"
		},
		"5359": {
			"sourceFileName": "../../../packages/types/src/workflow/user/create-user.ts",
			"qualifiedName": "CreateUsersWorkflowInputDTO.users"
		},
		"5360": {
			"sourceFileName": "../../../packages/types/src/workflow/user/update-user.ts",
			"qualifiedName": "UpdateUsersWorkflowInputDTO"
		},
		"5361": {
			"sourceFileName": "../../../packages/types/src/workflow/user/update-user.ts",
			"qualifiedName": "UpdateUsersWorkflowInputDTO.updates"
		},
		"5362": {
			"sourceFileName": "../../../packages/types/src/workflow/user/delete-user.ts",
			"qualifiedName": "DeleteUserWorkflowInput"
		},
		"5363": {
			"sourceFileName": "../../../packages/types/src/workflow/user/delete-user.ts",
			"qualifiedName": "DeleteUserWorkflowInput.ids"
		},
		"5364": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"5365": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"5366": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"5367": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"5368": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"5369": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"5370": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"5371": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_user_id"
		},
		"5372": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"5373": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"5374": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"5375": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"5376": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"5377": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"5378": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"5379": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"5380": {
			"sourceFileName": "../../../packages/types/src/api-key/index.ts",
			"qualifiedName": ""
		},
		"5381": {
			"sourceFileName": "../../../packages/types/src/store/index.ts",
			"qualifiedName": ""
		},
		"5382": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO"
		},
		"5383": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.id"
		},
		"5384": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.name"
		},
		"5385": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.supported_currency_codes"
		},
		"5386": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_currency_code"
		},
		"5387": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_sales_channel_id"
		},
		"5388": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_region_id"
		},
		"5389": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_location_id"
		},
		"5390": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.metadata"
		},
		"5391": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.created_at"
		},
		"5392": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.updated_at"
		},
		"5393": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps"
		},
		"5394": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps.id"
		},
		"5395": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps.name"
		},
		"5396": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5397": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5398": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO"
		},
		"5399": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.name"
		},
		"5400": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.supported_currency_codes"
		},
		"5401": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_currency_code"
		},
		"5402": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_sales_channel_id"
		},
		"5403": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_region_id"
		},
		"5404": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_location_id"
		},
		"5405": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.metadata"
		},
		"5406": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO"
		},
		"5407": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.id"
		},
		"5408": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.name"
		},
		"5409": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.supported_currency_codes"
		},
		"5410": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_currency_code"
		},
		"5411": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_sales_channel_id"
		},
		"5412": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_region_id"
		},
		"5413": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_location_id"
		},
		"5414": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.metadata"
		},
		"5415": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO"
		},
		"5416": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.name"
		},
		"5417": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.supported_currency_codes"
		},
		"5418": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_currency_code"
		},
		"5419": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_sales_channel_id"
		},
		"5420": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_region_id"
		},
		"5421": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_location_id"
		},
		"5422": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.metadata"
		},
		"5423": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService"
		},
		"5424": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"5425": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"5426": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5427": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5428": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"5429": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5430": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5431": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"5432": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"5433": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5434": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5435": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"5436": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5437": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5438": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"5439": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"5440": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"5441": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5442": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5443": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"5444": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "selector"
		},
		"5445": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"5446": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5447": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"5448": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"5449": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "ids"
		},
		"5450": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5451": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"5452": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"5453": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5454": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.retrieve"
		},
		"5455": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.retrieve"
		},
		"5456": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"5457": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"5458": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5459": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.list"
		},
		"5460": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.list"
		},
		"5461": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "filters"
		},
		"5462": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"5463": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5464": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.listAndCount"
		},
		"5465": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.listAndCount"
		},
		"5466": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "filters"
		},
		"5467": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"5468": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5469": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.softDelete"
		},
		"5470": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.softDelete"
		},
		"5471": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5472": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "storeIds"
		},
		"5473": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"5474": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5475": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.restore"
		},
		"5476": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.restore"
		},
		"5477": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5478": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "storeIds"
		},
		"5479": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"5480": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5488": {
			"sourceFileName": "../../../packages/types/src/currency/index.ts",
			"qualifiedName": ""
		},
		"5489": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "CurrencyDTO"
		},
		"5490": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "CurrencyDTO.code"
		},
		"5491": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "CurrencyDTO.symbol"
		},
		"5492": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "CurrencyDTO.symbol_native"
		},
		"5493": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "CurrencyDTO.name"
		},
		"5494": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "FilterableCurrencyProps"
		},
		"5495": {
			"sourceFileName": "../../../packages/types/src/currency/common/currency.ts",
			"qualifiedName": "FilterableCurrencyProps.code"
		},
		"5496": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5497": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5498": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService"
		},
		"5499": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.retrieve"
		},
		"5500": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.retrieve"
		},
		"5501": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "code"
		},
		"5502": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "config"
		},
		"5503": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5504": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.list"
		},
		"5505": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.list"
		},
		"5506": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "filters"
		},
		"5507": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "config"
		},
		"5508": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5509": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.listAndCount"
		},
		"5510": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "ICurrencyModuleService.listAndCount"
		},
		"5511": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "filters"
		},
		"5512": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "config"
		},
		"5513": {
			"sourceFileName": "../../../packages/types/src/currency/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5521": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"5522": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"5523": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"5524": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"5525": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"5526": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"5527": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"5528": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"5529": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"5530": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"5531": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"5532": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"5533": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"5534": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"5535": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"5536": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"5537": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"5538": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"5539": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5540": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"5541": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"5542": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"5543": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"5544": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"5545": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"5546": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"5547": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"5548": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"5549": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"5550": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"5551": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"5552": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"5553": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"5554": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"5555": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5556": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"5557": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"5558": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"5559": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"5560": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"5561": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5562": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"5563": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"5564": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"5565": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"5566": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"5567": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"5568": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"5569": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"5570": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"5571": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"5572": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"5573": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"5574": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"5575": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5576": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"5577": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"5578": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"5579": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"5580": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5581": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"5583": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"5584": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"5585": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"5586": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5587": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"5589": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"5590": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"5592": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5593": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"5594": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"5595": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"5596": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"5597": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"5598": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"5599": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"5600": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"5601": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"5602": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"5603": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"5604": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule"
		},
		"5605": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"5606": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"5607": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"5608": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"5609": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5610": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"5611": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"5612": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"5613": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"5614": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5615": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"5616": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"5617": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"5618": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"5619": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5620": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"5621": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"5622": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"5623": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"5624": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5625": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"5626": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"5627": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"5628": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5629": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"5630": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"5631": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"5632": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"5633": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5634": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"5635": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"5636": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"5637": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"5638": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"5646": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"5647": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.NOT_PAID"
		},
		"5648": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.AWAITING"
		},
		"5649": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.AUTHORIZED"
		},
		"5650": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.PARTIALLY_AUTHORIZED"
		},
		"5651": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.CANCELED"
		},
		"5652": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"5653": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.AUTHORIZED"
		},
		"5654": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.PENDING"
		},
		"5655": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.REQUIRES_MORE"
		},
		"5656": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.ERROR"
		},
		"5657": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.CANCELED"
		},
		"5658": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO"
		},
		"5659": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.id"
		},
		"5660": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.currency_code"
		},
		"5661": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.region_id"
		},
		"5662": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.amount"
		},
		"5663": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.authorized_amount"
		},
		"5664": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.refunded_amount"
		},
		"5665": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.completed_at"
		},
		"5666": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.created_at"
		},
		"5667": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.updated_at"
		},
		"5668": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.metadata"
		},
		"5669": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.status"
		},
		"5670": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_providers"
		},
		"5671": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_sessions"
		},
		"5672": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payments"
		},
		"5673": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps"
		},
		"5674": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.id"
		},
		"5675": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.region_id"
		},
		"5676": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.created_at"
		},
		"5677": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.updated_at"
		},
		"5678": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5679": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5680": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps"
		},
		"5681": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.id"
		},
		"5682": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.currency_code"
		},
		"5683": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.amount"
		},
		"5684": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.provider_id"
		},
		"5685": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.payment_collection_id"
		},
		"5686": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.region_id"
		},
		"5687": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.created_at"
		},
		"5688": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.updated_at"
		},
		"5689": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.deleted_at"
		},
		"5690": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5691": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5692": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps"
		},
		"5693": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.id"
		},
		"5694": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.currency_code"
		},
		"5695": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.amount"
		},
		"5696": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.payment_id"
		},
		"5697": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.created_at"
		},
		"5698": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.updated_at"
		},
		"5699": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.deleted_at"
		},
		"5700": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5701": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5702": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps"
		},
		"5703": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.id"
		},
		"5704": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.currency_code"
		},
		"5705": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.amount"
		},
		"5706": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.payment_id"
		},
		"5707": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.created_at"
		},
		"5708": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.updated_at"
		},
		"5709": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.deleted_at"
		},
		"5710": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5711": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5712": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO"
		},
		"5713": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.id"
		},
		"5714": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.amount"
		},
		"5715": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.authorized_amount"
		},
		"5716": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.currency_code"
		},
		"5717": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.provider_id"
		},
		"5718": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.cart_id"
		},
		"5719": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_id"
		},
		"5720": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_edit_id"
		},
		"5721": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.customer_id"
		},
		"5722": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.data"
		},
		"5723": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.created_at"
		},
		"5724": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.updated_at"
		},
		"5725": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_at"
		},
		"5726": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.canceled_at"
		},
		"5727": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_amount"
		},
		"5728": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunded_amount"
		},
		"5729": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captures"
		},
		"5730": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunds"
		},
		"5731": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection"
		},
		"5732": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_session"
		},
		"5733": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps"
		},
		"5734": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.id"
		},
		"5735": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.session_id"
		},
		"5736": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.customer_id"
		},
		"5737": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.cart_id"
		},
		"5738": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_id"
		},
		"5739": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_edit_id"
		},
		"5740": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.created_at"
		},
		"5741": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.updated_at"
		},
		"5742": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.captured_at"
		},
		"5743": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.canceled_at"
		},
		"5744": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5745": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5746": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO"
		},
		"5747": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.id"
		},
		"5748": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.amount"
		},
		"5749": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_at"
		},
		"5750": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_by"
		},
		"5751": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.payment"
		},
		"5752": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO"
		},
		"5753": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.id"
		},
		"5754": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.amount"
		},
		"5755": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_at"
		},
		"5756": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_by"
		},
		"5757": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.payment"
		},
		"5758": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO"
		},
		"5759": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.id"
		},
		"5760": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.amount"
		},
		"5761": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.currency_code"
		},
		"5762": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.provider_id"
		},
		"5763": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.data"
		},
		"5764": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.context"
		},
		"5765": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.status"
		},
		"5766": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.authorized_at"
		},
		"5767": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection"
		},
		"5768": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment"
		},
		"5769": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO"
		},
		"5770": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.id"
		},
		"5771": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.is_enabled"
		},
		"5772": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps"
		},
		"5773": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.id"
		},
		"5774": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.is_enabled"
		},
		"5775": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"5776": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"5777": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO"
		},
		"5778": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.region_id"
		},
		"5779": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.currency_code"
		},
		"5780": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.amount"
		},
		"5781": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.metadata"
		},
		"5782": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentCollectionDTO"
		},
		"5783": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentCollectionDTO.id"
		},
		"5784": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "region_id"
		},
		"5785": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "currency_code"
		},
		"5786": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "amount"
		},
		"5787": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "metadata"
		},
		"5788": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO"
		},
		"5789": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.id"
		},
		"5790": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.region_id"
		},
		"5791": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.currency_code"
		},
		"5792": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.amount"
		},
		"5793": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.metadata"
		},
		"5794": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields"
		},
		"5795": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.region_id"
		},
		"5796": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.currency_code"
		},
		"5797": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.amount"
		},
		"5798": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.metadata"
		},
		"5799": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO"
		},
		"5800": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.amount"
		},
		"5801": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.currency_code"
		},
		"5802": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.provider_id"
		},
		"5803": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.data"
		},
		"5804": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.payment_session_id"
		},
		"5805": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.payment_collection_id"
		},
		"5806": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.cart_id"
		},
		"5807": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.order_id"
		},
		"5808": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.order_edit_id"
		},
		"5809": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentDTO.customer_id"
		},
		"5810": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO"
		},
		"5811": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.id"
		},
		"5812": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.cart_id"
		},
		"5813": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_id"
		},
		"5814": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_edit_id"
		},
		"5815": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.customer_id"
		},
		"5816": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO"
		},
		"5817": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.amount"
		},
		"5818": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.payment_id"
		},
		"5819": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.captured_by"
		},
		"5820": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO"
		},
		"5821": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.amount"
		},
		"5822": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.payment_id"
		},
		"5823": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.created_by"
		},
		"5824": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO"
		},
		"5825": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.provider_id"
		},
		"5826": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.currency_code"
		},
		"5827": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.amount"
		},
		"5828": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.data"
		},
		"5829": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.context"
		},
		"5830": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO"
		},
		"5831": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.id"
		},
		"5832": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.data"
		},
		"5833": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.currency_code"
		},
		"5834": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.amount"
		},
		"5835": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.context"
		},
		"5836": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentProviderDTO"
		},
		"5837": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentProviderDTO.id"
		},
		"5838": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentProviderDTO.is_enabled"
		},
		"5839": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload"
		},
		"5840": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.provider"
		},
		"5841": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.payload"
		},
		"5842": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"5843": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"5844": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"5845": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"5846": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentAddressDTO"
		},
		"5847": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentCustomerDTO"
		},
		"5848": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions"
		},
		"5849": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions.AUTHORIZED"
		},
		"5850": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions.SUCCESSFUL"
		},
		"5851": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions.FAILED"
		},
		"5852": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions.NOT_SUPPORTED"
		},
		"5853": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderContext"
		},
		"5854": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.billing_address"
		},
		"5855": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.email"
		},
		"5856": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.resource_id"
		},
		"5857": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.customer"
		},
		"5858": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.extra"
		},
		"5859": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "CreatePaymentProviderSession"
		},
		"5860": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5861": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.context"
		},
		"5862": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.amount"
		},
		"5863": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.currency_code"
		},
		"5864": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "UpdatePaymentProviderSession"
		},
		"5865": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5866": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.context"
		},
		"5867": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"5868": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.amount"
		},
		"5869": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.currency_code"
		},
		"5870": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderSessionResponse"
		},
		"5871": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"5872": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderAuthorizeResponse"
		},
		"5873": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5874": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.status"
		},
		"5875": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"5876": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderDataInput"
		},
		"5877": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5878": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.provider_id"
		},
		"5879": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"5880": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderError"
		},
		"5881": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderError.error"
		},
		"5882": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderError.code"
		},
		"5883": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderError.detail"
		},
		"5884": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "WebhookActionData"
		},
		"5885": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5886": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.resource_id"
		},
		"5887": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.amount"
		},
		"5888": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "WebhookActionResult"
		},
		"5889": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5890": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.action"
		},
		"5891": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type"
		},
		"5892": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.action"
		},
		"5893": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"5894": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider"
		},
		"5897": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.initiatePayment"
		},
		"5898": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.initiatePayment"
		},
		"5899": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "data"
		},
		"5900": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.updatePayment"
		},
		"5901": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.updatePayment"
		},
		"5902": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "context"
		},
		"5903": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.deletePayment"
		},
		"5904": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.deletePayment"
		},
		"5905": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5906": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.authorizePayment"
		},
		"5907": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.authorizePayment"
		},
		"5908": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5909": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "context"
		},
		"5910": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.capturePayment"
		},
		"5911": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.capturePayment"
		},
		"5912": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5913": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.refundPayment"
		},
		"5914": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.refundPayment"
		},
		"5915": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5916": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "refundAmount"
		},
		"5917": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.retrievePayment"
		},
		"5918": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.retrievePayment"
		},
		"5919": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5920": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.cancelPayment"
		},
		"5921": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.cancelPayment"
		},
		"5922": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5923": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.getPaymentStatus"
		},
		"5924": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.getPaymentStatus"
		},
		"5925": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"5926": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.getWebhookActionAndData"
		},
		"5927": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "IPaymentProvider.getWebhookActionAndData"
		},
		"5928": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "data"
		},
		"5929": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"5930": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"5931": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"5932": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"5933": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService"
		},
		"5934": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"5935": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"5936": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5937": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5938": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"5939": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5940": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5941": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"5942": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"5943": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5944": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"5945": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5946": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"5947": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"5948": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"5949": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"5950": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5951": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"5952": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"5953": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"5954": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"5955": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5956": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"5957": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"5958": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5959": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5960": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5961": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"5962": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "selector"
		},
		"5963": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5964": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5965": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"5966": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"5967": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5968": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5969": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"5970": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5971": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5972": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"5973": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"5974": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5975": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5976": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"5977": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5978": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5979": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"5980": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"5981": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5982": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5983": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"5984": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5985": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5986": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"5987": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"5988": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"5989": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5990": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5991": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"5992": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"5993": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"5994": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5995": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"5996": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"5997": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"5998": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5999": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"6000": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"6001": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"6002": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "context"
		},
		"6003": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6004": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"6005": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"6006": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6007": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6008": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6009": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"6010": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"6011": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6012": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6013": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6014": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"6015": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"6016": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6017": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6018": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"6019": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"6020": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6021": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6022": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"6023": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"6024": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6025": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6026": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"6027": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"6028": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentId"
		},
		"6029": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6030": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"6031": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"6032": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6033": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6034": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6035": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"6036": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"6037": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6038": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6039": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6040": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"6041": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"6042": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6043": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6044": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6045": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"6046": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"6047": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6055": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions"
		},
		"6056": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_delay"
		},
		"6057": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_retries"
		},
		"6058": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO"
		},
		"6059": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.id"
		},
		"6060": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency_code"
		},
		"6061": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.amount"
		},
		"6062": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.min_quantity"
		},
		"6063": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.max_quantity"
		},
		"6064": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.price_set_money_amount"
		},
		"6065": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.created_at"
		},
		"6066": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.updated_at"
		},
		"6067": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.deleted_at"
		},
		"6068": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO"
		},
		"6069": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"6070": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"6071": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"6072": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"6073": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"6074": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO"
		},
		"6075": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"6076": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"6077": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"6078": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"6079": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"6080": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps"
		},
		"6081": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.id"
		},
		"6082": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.currency_code"
		},
		"6083": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6084": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6085": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"6086": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"6087": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"6088": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"6089": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"6090": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"6091": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO"
		},
		"6092": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.id"
		},
		"6093": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.title"
		},
		"6094": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.starts_at"
		},
		"6095": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.status"
		},
		"6096": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.ends_at"
		},
		"6097": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules_count"
		},
		"6098": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_set_money_amounts"
		},
		"6099": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.money_amounts"
		},
		"6100": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rule_types"
		},
		"6101": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules"
		},
		"6102": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_list_rules"
		},
		"6103": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"6104": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"6105": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.rules"
		},
		"6106": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"6107": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"6108": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"6109": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"6110": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"6111": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO"
		},
		"6112": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.price_set_id"
		},
		"6113": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.rules"
		},
		"6114": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"6115": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"6116": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"6117": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"6118": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"6119": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceSetPriceRules"
		},
		"6120": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRules"
		},
		"6121": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"6122": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.title"
		},
		"6123": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.description"
		},
		"6124": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"6125": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"6126": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"6127": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.type"
		},
		"6128": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules_count"
		},
		"6129": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"6130": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"6131": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO"
		},
		"6132": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.id"
		},
		"6133": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.title"
		},
		"6134": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.description"
		},
		"6135": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.starts_at"
		},
		"6136": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.ends_at"
		},
		"6137": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.status"
		},
		"6138": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules_count"
		},
		"6139": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules"
		},
		"6140": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"6141": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"6142": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.starts_at"
		},
		"6143": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.ends_at"
		},
		"6144": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"6145": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.rules_count"
		},
		"6146": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6147": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6148": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps"
		},
		"6149": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.id"
		},
		"6150": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.value"
		},
		"6151": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.rule_type"
		},
		"6152": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.price_list_id"
		},
		"6153": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6154": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6155": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps"
		},
		"6156": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.id"
		},
		"6157": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.value"
		},
		"6158": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.price_list_rule_id"
		},
		"6159": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6160": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6161": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO"
		},
		"6162": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.id"
		},
		"6163": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.value"
		},
		"6164": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.rule_type"
		},
		"6165": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list"
		},
		"6166": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list_rule_values"
		},
		"6167": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"6168": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_type_id"
		},
		"6169": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_type"
		},
		"6170": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.price_list_id"
		},
		"6171": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.price_list"
		},
		"6172": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO"
		},
		"6173": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.id"
		},
		"6174": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.price_list_id"
		},
		"6175": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.rule_type_id"
		},
		"6176": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.price_list"
		},
		"6177": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.rule_type"
		},
		"6178": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO"
		},
		"6179": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.id"
		},
		"6180": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.value"
		},
		"6181": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.price_list_rule"
		},
		"6182": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO"
		},
		"6183": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.value"
		},
		"6184": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.price_list_rule_id"
		},
		"6185": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.price_list_rule"
		},
		"6186": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO"
		},
		"6187": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.id"
		},
		"6188": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.value"
		},
		"6189": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.price_list_rule_id"
		},
		"6190": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO"
		},
		"6191": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.price_list_id"
		},
		"6192": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.prices"
		},
		"6193": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO"
		},
		"6194": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.price_list_id"
		},
		"6195": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.prices"
		},
		"6196": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO"
		},
		"6197": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.price_list_id"
		},
		"6198": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.rules"
		},
		"6199": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO"
		},
		"6200": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.price_list_id"
		},
		"6201": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.rules"
		},
		"6202": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO"
		},
		"6203": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.id"
		},
		"6204": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_id"
		},
		"6205": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set"
		},
		"6206": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type_id"
		},
		"6207": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type"
		},
		"6208": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.value"
		},
		"6209": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.priority"
		},
		"6210": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_money_amount_id"
		},
		"6211": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_list_id"
		},
		"6212": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.created_at"
		},
		"6213": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.updated_at"
		},
		"6214": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.deleted_at"
		},
		"6215": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO"
		},
		"6216": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_id"
		},
		"6217": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.rule_type_id"
		},
		"6218": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.value"
		},
		"6219": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.priority"
		},
		"6220": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_money_amount_id"
		},
		"6221": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO"
		},
		"6222": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.id"
		},
		"6223": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_id"
		},
		"6224": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.rule_type_id"
		},
		"6225": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.value"
		},
		"6226": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.priority"
		},
		"6227": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_money_amount_id"
		},
		"6228": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_list_id"
		},
		"6229": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps"
		},
		"6230": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.id"
		},
		"6231": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.name"
		},
		"6232": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.price_set_id"
		},
		"6233": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.rule_type_id"
		},
		"6234": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6235": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6236": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingRepositoryService"
		},
		"6237": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingRepositoryService.calculatePrices"
		},
		"6238": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingRepositoryService.calculatePrices"
		},
		"6239": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "pricingFilters"
		},
		"6240": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "pricingContext"
		},
		"6241": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "context"
		},
		"6242": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext"
		},
		"6243": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"6244": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters"
		},
		"6245": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters.id"
		},
		"6246": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO"
		},
		"6247": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.id"
		},
		"6248": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.money_amounts"
		},
		"6249": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.rule_types"
		},
		"6250": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO"
		},
		"6251": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.id"
		},
		"6252": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_set_id"
		},
		"6253": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.amount"
		},
		"6254": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.currency_code"
		},
		"6255": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.min_quantity"
		},
		"6256": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.max_quantity"
		},
		"6257": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_list_type"
		},
		"6258": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_list_id"
		},
		"6259": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet"
		},
		"6260": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.id"
		},
		"6261": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_price_list"
		},
		"6262": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_amount"
		},
		"6263": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_price_list"
		},
		"6264": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_amount"
		},
		"6265": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.currency_code"
		},
		"6266": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_price"
		},
		"6267": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"6268": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.money_amount_id"
		},
		"6269": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"6270": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"6271": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"6272": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"6273": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_price"
		},
		"6274": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"6275": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.money_amount_id"
		},
		"6276": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"6277": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"6278": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"6279": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"6280": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO"
		},
		"6281": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO.priceSetId"
		},
		"6282": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO.rules"
		},
		"6283": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"6284": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.attribute"
		},
		"6285": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO"
		},
		"6286": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO.rules"
		},
		"6287": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"6288": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"6289": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"6290": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"6291": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"6292": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO"
		},
		"6293": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.priceSetId"
		},
		"6294": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.prices"
		},
		"6295": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO"
		},
		"6296": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO.id"
		},
		"6297": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO.rules"
		},
		"6298": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO"
		},
		"6299": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.rules"
		},
		"6300": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"6301": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.rule_attribute"
		},
		"6302": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.prices"
		},
		"6303": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO"
		},
		"6304": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.id"
		},
		"6305": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps"
		},
		"6306": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.id"
		},
		"6307": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.money_amounts"
		},
		"6308": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6309": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6310": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO"
		},
		"6311": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.id"
		},
		"6312": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.title"
		},
		"6313": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_set"
		},
		"6314": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_list"
		},
		"6315": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_set_id"
		},
		"6316": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_rules"
		},
		"6317": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.money_amount"
		},
		"6318": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.created_at"
		},
		"6319": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.updated_at"
		},
		"6320": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.deleted_at"
		},
		"6321": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO"
		},
		"6322": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.id"
		},
		"6323": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.title"
		},
		"6324": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.price_set"
		},
		"6325": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.money_amount"
		},
		"6326": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO"
		},
		"6327": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.title"
		},
		"6328": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.price_set"
		},
		"6329": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.price_list"
		},
		"6330": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.money_amount"
		},
		"6331": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.rules_count"
		},
		"6332": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps"
		},
		"6333": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.id"
		},
		"6334": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.price_set_id"
		},
		"6335": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.price_list_id"
		},
		"6336": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6337": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6338": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO"
		},
		"6339": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.id"
		},
		"6340": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.price_set"
		},
		"6341": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.rule_type"
		},
		"6342": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.value"
		},
		"6343": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO"
		},
		"6344": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO.price_set"
		},
		"6345": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO.rule_type"
		},
		"6346": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO"
		},
		"6347": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.id"
		},
		"6348": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.price_set"
		},
		"6349": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.rule_type"
		},
		"6350": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps"
		},
		"6351": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.id"
		},
		"6352": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.rule_type_id"
		},
		"6353": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.price_set_id"
		},
		"6354": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6355": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6356": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO"
		},
		"6357": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.id"
		},
		"6358": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.name"
		},
		"6359": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.rule_attribute"
		},
		"6360": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.default_priority"
		},
		"6361": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.created_at"
		},
		"6362": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.updated_at"
		},
		"6363": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO"
		},
		"6364": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.id"
		},
		"6365": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.name"
		},
		"6366": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.rule_attribute"
		},
		"6367": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.default_priority"
		},
		"6368": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO"
		},
		"6369": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.id"
		},
		"6370": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.name"
		},
		"6371": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.rule_attribute"
		},
		"6372": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.default_priority"
		},
		"6373": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps"
		},
		"6374": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.id"
		},
		"6375": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.name"
		},
		"6376": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.rule_attribute"
		},
		"6377": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6378": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6379": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"6380": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"6381": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO"
		},
		"6382": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.id"
		},
		"6383": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.name"
		},
		"6384": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.currency_code"
		},
		"6385": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.automatic_taxes"
		},
		"6386": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.countries"
		},
		"6387": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.metadata"
		},
		"6388": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.created_at"
		},
		"6389": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionDTO.updated_at"
		},
		"6390": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO"
		},
		"6391": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.id"
		},
		"6392": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.iso_2"
		},
		"6393": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.iso_3"
		},
		"6394": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.num_code"
		},
		"6395": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.name"
		},
		"6396": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "RegionCountryDTO.display_name"
		},
		"6397": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps"
		},
		"6398": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.id"
		},
		"6399": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.name"
		},
		"6400": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.currency_code"
		},
		"6401": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.metadata"
		},
		"6402": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.created_at"
		},
		"6403": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionProps.updated_at"
		},
		"6404": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6405": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6406": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps"
		},
		"6407": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.id"
		},
		"6408": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.iso_2"
		},
		"6409": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.iso_3"
		},
		"6410": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.num_code"
		},
		"6411": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.name"
		},
		"6412": {
			"sourceFileName": "../../../packages/types/src/region/common.ts",
			"qualifiedName": "FilterableRegionCountryProps.display_name"
		},
		"6413": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6414": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6415": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO"
		},
		"6416": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO.name"
		},
		"6417": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO.currency_code"
		},
		"6418": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO.automatic_taxes"
		},
		"6419": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO.countries"
		},
		"6420": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "CreateRegionDTO.metadata"
		},
		"6421": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO"
		},
		"6422": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.id"
		},
		"6423": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.name"
		},
		"6424": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.currency_code"
		},
		"6425": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.automatic_taxes"
		},
		"6426": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.countries"
		},
		"6427": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpsertRegionDTO.metadata"
		},
		"6428": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO"
		},
		"6429": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO.name"
		},
		"6430": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO.currency_code"
		},
		"6431": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO.automatic_taxes"
		},
		"6432": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO.countries"
		},
		"6433": {
			"sourceFileName": "../../../packages/types/src/region/mutations.ts",
			"qualifiedName": "UpdateRegionDTO.metadata"
		},
		"6434": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService"
		},
		"6435": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.create"
		},
		"6436": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.create"
		},
		"6437": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6438": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6439": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.create"
		},
		"6440": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6441": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6442": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.upsert"
		},
		"6443": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.upsert"
		},
		"6444": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6445": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6446": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.upsert"
		},
		"6447": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6448": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6449": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.update"
		},
		"6450": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.update"
		},
		"6451": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "id"
		},
		"6452": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6453": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6454": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.update"
		},
		"6455": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "selector"
		},
		"6456": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "data"
		},
		"6457": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6458": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.delete"
		},
		"6459": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.delete"
		},
		"6460": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "ids"
		},
		"6461": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6462": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.delete"
		},
		"6463": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "id"
		},
		"6464": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6465": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.retrieve"
		},
		"6466": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.retrieve"
		},
		"6467": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "id"
		},
		"6468": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6469": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6470": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.list"
		},
		"6471": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.list"
		},
		"6472": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "filters"
		},
		"6473": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6474": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6475": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listAndCount"
		},
		"6476": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listAndCount"
		},
		"6477": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "filters"
		},
		"6478": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6479": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6480": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.retrieveCountry"
		},
		"6481": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.retrieveCountry"
		},
		"6482": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "countryId"
		},
		"6483": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6484": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6485": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listCountries"
		},
		"6486": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listCountries"
		},
		"6487": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "filters"
		},
		"6488": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6489": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6490": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listAndCountCountries"
		},
		"6491": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.listAndCountCountries"
		},
		"6492": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "filters"
		},
		"6493": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6494": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6495": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.softDelete"
		},
		"6496": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.softDelete"
		},
		"6497": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6498": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "regionIds"
		},
		"6499": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6500": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6501": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.restore"
		},
		"6502": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "IRegionModuleService.restore"
		},
		"6503": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6504": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "regionIds"
		},
		"6505": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "config"
		},
		"6506": {
			"sourceFileName": "../../../packages/types/src/region/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6514": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"6515": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"6516": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"6517": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"6518": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"6519": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"6520": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"6521": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"6523": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"6524": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6525": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6526": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"6527": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6528": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6529": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"6530": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6531": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6532": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6533": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6534": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"6535": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"6536": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"6537": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"6538": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"6539": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"6540": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"6541": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"6542": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"6543": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6544": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"6545": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"6546": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"6547": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"6548": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"6549": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"6550": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"6551": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"6553": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"6554": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"6555": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"6556": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"6557": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"6558": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"6559": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"6560": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"6561": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"6562": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"6563": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6564": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"6565": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6566": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"6567": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6568": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"6569": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6570": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"6572": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6573": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"6574": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"6575": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"6576": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"6577": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"6578": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"6579": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"6580": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"6581": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"6582": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"6583": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"6584": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"6585": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"6586": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"6587": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"6588": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"6589": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"6590": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"6591": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"6592": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"6593": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"6594": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"6595": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"6596": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"6597": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"6598": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO"
		},
		"6599": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.type"
		},
		"6600": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"6601": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"6602": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"6603": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"6604": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"6605": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"6606": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"6607": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"6608": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"6609": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"6610": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"6611": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"6612": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"6613": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"6614": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"6615": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"6616": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"6617": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"6618": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6619": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6620": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6621": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"6622": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6623": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"6624": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6625": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"6626": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6627": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"6628": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6629": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"6630": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6631": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"6632": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6633": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"6634": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6635": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"6636": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}