{
	"id": 0,
	"name": "payment-provider",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 4,
			"name": "AbstractPaymentProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 10,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "new AbstractPaymentProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your Payment Provider to have access to different services in Medusa through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection).\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs,\nyou can initialize it in the constructor and use it in other methods in the service.\n\nAdditionally, if you’re creating your Payment Provider as an external plugin to be installed on any Medusa backend and you want to access the options added for the plugin,\nyou can access it in the constructor. The options are passed as a second parameter."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyPaymentService extends AbstractPaymentProvider {\n  // ...\n  constructor(container, options) {\n    super(container)\n    // you can access options here\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 12,
									"name": "TConfig",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this payment processor is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "AbstractPaymentProvider.TConfig",
										"refersToTypeParameter": true
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"target": 4,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "AbstractPaymentProvider.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "AbstractPaymentProvider",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 15,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection)"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
							"qualifiedName": "MedusaContainer"
						},
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 16,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this payment processor is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12,
						"name": "TConfig",
						"package": "@medusajs/utils",
						"qualifiedName": "AbstractPaymentProvider.TConfig",
						"refersToTypeParameter": true
					},
					"defaultValue": "..."
				},
				{
					"id": 9,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`PaymentProvider`"
							},
							{
								"kind": "text",
								"text": " entity has 2 properties: "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`is_installed`"
							},
							{
								"kind": "text",
								"text": ". The "
							},
							{
								"kind": "code",
								"text": "`identifier`"
							},
							{
								"kind": "text",
								"text": " property in the payment provider service is used when the payment provider is added to the database.\n\nThe value of this property is also used to reference the payment provider throughout Medusa.\nFor example, it is used to [add a payment provider](https://docs.medusajs.com/api/admin#regions_postregionsregionpaymentproviders) to a region.\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nclass MyPaymentService extends AbstractPaymentProvider {\n  static identifier = \"my-payment\"\n  // ...\n}\n```"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 20,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 21,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.capturePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.capturePayment"
					}
				},
				{
					"id": 22,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 23,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 24,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 25,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 26,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 27,
															"name": "status",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/payment/common.ts",
																	"qualifiedName": "PaymentSessionStatus"
																},
																"name": "PaymentSessionStatus",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 28,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																27,
																28
															]
														}
													]
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.authorizePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.authorizePayment"
					}
				},
				{
					"id": 29,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 30,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 31,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.cancelPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.cancelPayment"
					}
				},
				{
					"id": 32,
					"name": "initiatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "initiatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 34,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/payment/provider.ts",
											"qualifiedName": "CreatePaymentProviderSession"
										},
										"name": "CreatePaymentProviderSession",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderSessionResponse"
												},
												"name": "PaymentProviderSessionResponse",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.initiatePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.initiatePayment"
					}
				},
				{
					"id": 35,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 36,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 37,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.deletePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.deletePayment"
					}
				},
				{
					"id": 38,
					"name": "getPaymentStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 39,
							"name": "getPaymentStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 40,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/payment/common.ts",
											"qualifiedName": "PaymentSessionStatus"
										},
										"name": "PaymentSessionStatus",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.getPaymentStatus"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.getPaymentStatus"
					}
				},
				{
					"id": 41,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 42,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 43,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 44,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.refundPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.refundPayment"
					}
				},
				{
					"id": 45,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 46,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.retrievePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.retrievePayment"
					}
				},
				{
					"id": 48,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 50,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/payment/provider.ts",
											"qualifiedName": "UpdatePaymentProviderSession"
										},
										"name": "UpdatePaymentProviderSession",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderError"
												},
												"name": "PaymentProviderError",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/payment/provider.ts",
													"qualifiedName": "PaymentProviderSessionResponse"
												},
												"name": "PaymentProviderSessionResponse",
												"package": "@medusajs/types"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.updatePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.updatePayment"
					}
				},
				{
					"id": 51,
					"name": "getWebhookActionAndData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 52,
							"name": "getWebhookActionAndData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 53,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 54,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 55,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Parsed webhook body"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 56,
													"name": "rawData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Raw request body"
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														]
													}
												},
												{
													"id": 57,
													"name": "headers",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														55,
														56,
														57
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/payment/provider.ts",
											"qualifiedName": "WebhookActionResult"
										},
										"name": "WebhookActionResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IPaymentProvider.getWebhookActionAndData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IPaymentProvider.getWebhookActionAndData"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10
					]
				},
				{
					"title": "Properties",
					"children": [
						15,
						16,
						9
					]
				},
				{
					"title": "Methods",
					"children": [
						19,
						22,
						29,
						32,
						35,
						38,
						41,
						45,
						48,
						51
					]
				}
			],
			"typeParameters": [
				{
					"id": 58,
					"name": "TConfig",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/types/src/payment/provider.ts",
						"qualifiedName": "IPaymentProvider"
					},
					"name": "IPaymentProvider",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1,
			"name": "isPaymentProviderError",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2,
					"name": "isPaymentProviderError",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 3,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "obj",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/payment/provider.ts",
								"qualifiedName": "PaymentProviderError"
							},
							"name": "PaymentProviderError",
							"package": "@medusajs/types"
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				4
			]
		},
		{
			"title": "Functions",
			"children": [
				1
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "isPaymentProviderError"
		},
		"2": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "isPaymentProviderError"
		},
		"3": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "obj"
		},
		"4": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider"
		},
		"9": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.identifier"
		},
		"10": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.__constructor"
		},
		"11": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider"
		},
		"12": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.TConfig"
		},
		"13": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "container"
		},
		"14": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "config"
		},
		"15": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.container"
		},
		"16": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.config"
		},
		"19": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.capturePayment"
		},
		"20": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.capturePayment"
		},
		"21": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"22": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.authorizePayment"
		},
		"23": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.authorizePayment"
		},
		"24": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"25": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "context"
		},
		"26": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "__type"
		},
		"27": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "__type.status"
		},
		"28": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "__type.data"
		},
		"29": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.cancelPayment"
		},
		"30": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.cancelPayment"
		},
		"31": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"32": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.initiatePayment"
		},
		"33": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.initiatePayment"
		},
		"34": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "context"
		},
		"35": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.deletePayment"
		},
		"36": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.deletePayment"
		},
		"37": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"38": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.getPaymentStatus"
		},
		"39": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.getPaymentStatus"
		},
		"40": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"41": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.refundPayment"
		},
		"42": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.refundPayment"
		},
		"43": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"44": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "refundAmount"
		},
		"45": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.retrievePayment"
		},
		"46": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.retrievePayment"
		},
		"47": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "paymentSessionData"
		},
		"48": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.updatePayment"
		},
		"49": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.updatePayment"
		},
		"50": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "context"
		},
		"51": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.getWebhookActionAndData"
		},
		"52": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.getWebhookActionAndData"
		},
		"53": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "data"
		},
		"54": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"55": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"56": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"57": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"58": {
			"sourceFileName": "../../../packages/utils/src/payment/abstract-payment-provider.ts",
			"qualifiedName": "AbstractPaymentProvider.TConfig"
		}
	}
}