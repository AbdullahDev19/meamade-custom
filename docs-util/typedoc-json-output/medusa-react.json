{
	"id": 14037,
	"name": "medusa-react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 14038,
			"name": "Providers",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": ":::info\n\nThis is an experimental feature.\n\n:::\n\n"
					},
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes React Context Providers that facilitate building custom storefronts."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 14039,
					"name": "Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 14207,
							"name": "useCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14208,
									"name": "useCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 14212,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ".\n\nThe context provides helper functions and mutations for managing the cart and checkout. You can refer to the following guides for examples on how to use them:\n\n- [How to Add Cart Functionality](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)\n- [How to Implement Checkout Flow](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-checkout-flow)"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/Cart.ts\"\nimport * as React from \"react\"\n\nimport { useCart } from \"medusa-react\"\n\nconst Cart = () => {\n  const handleClick = () => {\n    createCart.mutate({}) // create an empty cart\n  }\n\n  const { cart, createCart } = useCart()\n\n  return (\n    <div>\n      {createCart.isLoading && <div>Loading...</div>}\n      {!cart?.id && (\n        <button onClick={handleClick}>\n          Create cart\n        </button>\n      )}\n      {cart?.id && (\n        <div>Cart ID: {cart.id}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you retrieve the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation and "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state object using the "
													},
													{
														"kind": "code",
														"text": "`useCart`"
													},
													{
														"kind": "text",
														"text": " hook. \nIf the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " is not set, a button is shown. When the button is clicked, the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation is executed, which interacts with the backend and creates a new cart.\n\nAfter the cart is created, the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state variable is set and its ID is shown instead of the button.\n\n:::note\n\nThe example above does not store in the browser the ID of the cart created, so the cart’s data will be gone on refresh. \nYou would have to do that using the browser’s [Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\n\n:::"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14194,
										"name": "CartContext",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 14212,
							"name": "CartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14213,
									"name": "CartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": " makes use of some of the hooks already exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to perform cart operations on the Medusa backend. \nYou can use it to create a cart, start the checkout flow, authorize payment sessions, and so on.\n\nIt also manages one single global piece of state which represents a cart, exactly like the one created on your Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 14115
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useCart",
												"target": 14207,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to get access to cart operations and data."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { CartProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <CartProvider>\n        <Storefront />\n      </CartProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14214,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14209,
												"name": "CartProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								14207,
								14212
							]
						}
					]
				},
				{
					"id": 14040,
					"name": "Medusa",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 14104,
							"name": "useMedusa",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14105,
									"name": "useMedusa",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook gives you access to context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 14115,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ". It's useful if you want access to the \n[Medusa JS Client](https://docs.medusajs.com/js-client/overview)."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer, useMedusa } from \"medusa-react\"\n\nconst CustomerLogin = () => {\n  const { client } = useMedusa()\n  const { refetch: refetchCustomer } = useMeCustomer()\n  // ...\n\n  const handleLogin = (\n    email: string,\n    password: string\n  ) => {\n    client.auth.authenticate({\n      email,\n      password\n    })\n    .then(() => {\n      // customer is logged-in successfully\n      refetchCustomer()\n    })\n    .catch(() => {\n      // an error occurred.\n    })\n  }\n\n  // ...\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14102,
										"name": "MedusaContextState",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 14115,
							"name": "MedusaProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14116,
									"name": "MedusaProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": " must be used at the highest possible point in the React component tree. Using any of "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": "'s hooks or providers requires having "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": "\nhigher in the component tree."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <Storefront />\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you wrap the "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component with the "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": ". "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " is assumed to be the top-level component of your storefront, but you can place "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " at any point in your tree. Only children of "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " can benefit from its hooks.\n\nThe "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component and its child components can now use hooks exposed by Medusa React."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14117,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14106,
												"name": "MedusaProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								14104,
								14115
							]
						}
					]
				},
				{
					"id": 14041,
					"name": "Session Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 14189,
							"name": "SessionCartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14190,
									"name": "SessionCartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unlike the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 14212
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " never interacts with the Medusa backend. It can be used to implement the user experience related to managing a cart’s items. \nIts state variables are JavaScript objects living in the browser, but are in no way communicated with the backend.\n\nYou can use the "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " as a lightweight client-side cart functionality. It’s not stored in any database or on the Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 14115
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useSessionCart",
												"target": 14192,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook to get access to client-side cart item functionalities."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { SessionProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <SessionProvider>\n        <Storefront />\n      </SessionProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14191,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14186,
												"name": "SessionCartProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 14192,
							"name": "useSessionCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 14193,
									"name": "useSessionCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "SessionCartProvider",
												"target": 14189,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "The following example assumes that you've added "
													},
													{
														"kind": "code",
														"text": "`SessionCartProvider`"
													},
													{
														"kind": "text",
														"text": " previously in the React components tree:\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx title=\"src/Products.ts\"\nconst Products = () => {\n  const { addItem } = useSessionCart()\n  // ...\n\n  function addToCart(variant: ProductVariant) {\n    addItem({\n      variant: variant,\n      quantity: 1,\n    })\n  }\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14127,
										"name": "SessionCartContextState",
										"package": "medusa-react"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								14189,
								14192
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						14039,
						14040,
						14041
					]
				}
			]
		},
		{
			"id": 14042,
			"name": "Utilities",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes a set of utility functions that are mainly used to retrieve or format the price of a product variant."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 14222,
					"name": "formatVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 14223,
							"name": "formatVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14224,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14215,
										"name": "FormatVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 14229,
					"name": "computeVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 14230,
							"name": "computeVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the amount without formatting. \nFor example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ". This method is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 14222,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed price of the variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { computeVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {computeVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14231,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to compute the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14225,
										"name": "ComputeVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 14232,
					"name": "getVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 14233,
							"name": "getVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function is used to retrieve a variant's price in a region. It doesn't take into account taxes or any options, so you typically wouldn't need this function on its own.\nIt's used by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 14229,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " function to retrieve the variant's price in a region before computing the correct price for the options provided."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The variant's price in a region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { getVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {getVariantPrice(\n                  variant,\n                  region, // should be retrieved earlier\n                )}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14234,
									"name": "variant",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The variant's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14255,
										"name": "ProductVariantInfo",
										"package": "medusa-react"
									}
								},
								{
									"id": 14235,
									"name": "region",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The region's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14256,
										"name": "RegionInfo",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 14241,
					"name": "computeAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 14242,
							"name": "computeAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the amount without formatting. For example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ".\nThis function is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatAmount",
										"target": 14252,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting.\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 14229,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed amount."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/MyComponent.ts\"\nimport React from \"react\"\nimport { computeAmount } from \"medusa-react\"\n\nconst MyComponent = () => {\n  // ...\n  return (\n    <div>\n      {computeAmount({\n        amount,\n        region, // should be retrieved earlier\n      })}\n    </div>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14243,
									"name": "params0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options to compute the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14236,
										"name": "ComputeAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 14252,
					"name": "formatAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 14253,
							"name": "formatAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 14222,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 14254,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14244,
										"name": "FormatAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						14222,
						14229,
						14232,
						14241,
						14252
					]
				}
			]
		},
		{
			"id": 14043,
			"name": "Hooks",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14044,
					"name": "Admin",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 14045,
							"name": "Auth",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Auth API Routes](https://docs.medusajs.com/api/admin#auth_getauth).\n\nThey allow admin users to manage their session, such as login or log out.\nYou can send authenticated requests for an admin user either using the Cookie header, their API token, or the JWT Token.\nWhen you log the admin user in using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": " hook, Medusa React will automatically attach the\ncookie header in all subsequent requests.\n\nRelated Guide: [How to implement user profiles](https://docs.medusajs.com/modules/users/admin/manage-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14273,
									"name": "useAdminLogin",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14274,
											"name": "useAdminLogin",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to log a User in using their credentials. If the user is authenticated successfully, \nthe cookie is automatically attached to subsequent requests sent with other hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminLogin } from \"medusa-react\"\n\nconst Login = () => {\n  const adminLogin = useAdminLogin()\n  // ...\n\n  const handleLogin = () => {\n    adminLogin.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14275,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
																	"qualifiedName": "AdminPostAuthReq"
																},
																"name": "AdminPostAuthReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																	"qualifiedName": "AdminAuthRes"
																},
																"name": "AdminAuthRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
															"qualifiedName": "AdminPostAuthReq"
														},
														"name": "AdminPostAuthReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14276,
									"name": "useAdminDeleteSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14277,
											"name": "useAdminDeleteSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to Log out the user and remove their authentication session. This will only work if you're using Cookie session for authentication. If the API token is still passed in the header,\nthe user is still authorized to perform admin functionalities in other API Routes.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 14273
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSession } from \"medusa-react\"\n\nconst Logout = () => {\n  const adminLogout = useAdminDeleteSession()\n  // ...\n\n  const handleLogout = () => {\n    adminLogout.mutate(undefined, {\n      onSuccess: () => {\n        // user logged out.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Logout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14278,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14258,
									"name": "useAdminGetSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14259,
											"name": "useAdminGetSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to get the currently logged in user's details. Can also be used to check if there is an authenticated user.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 14273
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetSession } from \"medusa-react\"\n\nconst Profile = () => {\n  const { user, isLoading } = useAdminGetSession()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.email}</span>}\n    </div>\n  )\n}\n\nexport default Profile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14260,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_auth"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14261,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14263,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14262,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14263,
																		14262
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14264,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14266,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14265,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14266,
																		14265
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14267,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14269,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14268,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14269,
																		14268
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14270,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14272,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14271,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14272,
																		14271
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14273,
										14276,
										14258
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14258
									]
								},
								{
									"title": "Mutations",
									"children": [
										14273,
										14276
									]
								}
							]
						},
						{
							"id": 14046,
							"name": "Batch Jobs",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Batch Job API Routes](https://docs.medusajs.com/api/admin#batch-jobs).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA batch job is a task that is performed by the Medusa backend asynchronusly. For example, the Import Product feature is implemented using batch jobs.\nThe methods in this class allow admins to manage the batch jobs and their state.\n\nRelated Guide: [How to import products](https://docs.medusajs.com/modules/products/admin/import-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14326,
									"name": "useAdminCreateBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14327,
											"name": "useAdminCreateBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Batch Job to be executed asynchronously in the Medusa backend. If "
													},
													{
														"kind": "code",
														"text": "`dry_run`"
													},
													{
														"kind": "text",
														"text": " is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": ", the batch job will not be executed until the it is confirmed,\nwhich can be done using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminConfirmBatchJob",
														"target": 14333,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateBatchJob } from \"medusa-react\"\n\nconst CreateBatchJob = () => {\n  const createBatchJob = useAdminCreateBatchJob()\n  // ...\n\n  const handleCreateBatchJob = () => {\n    createBatchJob.mutate({\n      type: \"publish-products\",\n      context: {},\n      dry_run: true\n    }, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateBatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14328,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
																	"qualifiedName": "AdminPostBatchesReq"
																},
																"name": "AdminPostBatchesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
															"qualifiedName": "AdminPostBatchesReq"
														},
														"name": "AdminPostBatchesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14329,
									"name": "useAdminCancelBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14330,
											"name": "useAdminCancelBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a batch job as canceled. When a batch job is canceled, the processing of the batch job doesn’t automatically stop."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const cancelBatchJob = useAdminCancelBatchJob(batchJobId)\n  // ...\n\n  const handleCancel = () => {\n    cancelBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14331,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14332,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14280,
									"name": "useAdminBatchJobs",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14281,
											"name": "useAdminBatchJobs",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Batch Jobs. The batch jobs can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`type`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`confirmed_at`"
													},
													{
														"kind": "text",
														"text": ". The batch jobs can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14282,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved batch jobs."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/list-batch-jobs.d.ts",
															"qualifiedName": "AdminGetBatchParams"
														},
														"name": "AdminGetBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14283,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobListRes"
																		},
																		"name": "AdminBatchJobListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14284,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14285,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14285
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14286,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14291,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14290,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14287,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14288,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14289,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14291,
																		14290,
																		14287,
																		14288,
																		14289
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14292,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14297,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14296,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14293,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14294,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14295,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14297,
																		14296,
																		14293,
																		14294,
																		14295
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14298,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14303,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14302,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14299,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14300,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14301,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14303,
																		14302,
																		14299,
																		14300,
																		14301
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14304,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14309,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14308,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14305,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14306,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14307,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14309,
																		14308,
																		14305,
																		14306,
																		14307
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14310,
									"name": "useAdminBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14311,
											"name": "useAdminBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a batch job."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const { batch_job, isLoading } = useAdminBatchJob(batchJobId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_job && <span>{batch_job.created_by}</span>}\n    </div>\n  )\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14312,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14313,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14314,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14316,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14315,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14316,
																		14315
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14317,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14319,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14318,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14319,
																		14318
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14320,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14322,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14321,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14322,
																		14321
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14323,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14325,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14324,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14325,
																		14324
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14326,
										14329,
										14280,
										14310
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14280,
										14310
									]
								},
								{
									"title": "Mutations",
									"children": [
										14326,
										14329
									]
								}
							]
						},
						{
							"id": 14047,
							"name": "Claims",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Order API Routes related to claims](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA claim represents a return or replacement request of order items. It allows refunding the customer or replacing some or all of its\norder items with new items.\n\nRelated Guide: [How to manage claims](https://docs.medusajs.com/modules/orders/admin/manage-claims)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14337,
									"name": "useAdminCreateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14338,
											"name": "useAdminCreateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a claim for an order. If a return shipping method is specified, a return will also be created and associated with the claim. If the claim's type is "
													},
													{
														"kind": "code",
														"text": "`refund`"
													},
													{
														"kind": "text",
														"text": ",\nthe refund is processed as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateClaim = ({ orderId }: Props) => {\n  const createClaim = useAdminCreateClaim(orderId)\n  // ...\n\n  const handleCreate = (itemId: string) => {\n    createClaim.mutate({\n      type: \"refund\",\n      claim_items: [\n        {\n          item_id: itemId,\n          quantity: 1,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateClaim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14339,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14340,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsReq"
																},
																"name": "AdminPostOrdersOrderClaimsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
															"qualifiedName": "AdminPostOrdersOrderClaimsReq"
														},
														"name": "AdminPostOrdersOrderClaimsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14344,
									"name": "useAdminUpdateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14345,
											"name": "useAdminUpdateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a claim's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const updateClaim = useAdminUpdateClaim(orderId)\n  // ...\n\n  const handleUpdate = () => {\n    updateClaim.mutate({\n      claim_id: claimId,\n      no_notification: false\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14346,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14347,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 14341,
																"name": "AdminUpdateClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 14341,
														"name": "AdminUpdateClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14348,
									"name": "useAdminCancelClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14349,
											"name": "useAdminCancelClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim and change its status. A claim can't be canceled if it has a refund, if its fulfillments haven't been canceled, \nof if its associated return hasn't been canceled."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The claim's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelClaim = useAdminCancelClaim(orderId)\n  // ...\n\n  const handleCancel = () => {\n    cancelClaim.mutate(claimId)\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14350,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14351,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14355,
									"name": "useAdminFulfillClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14356,
											"name": "useAdminFulfillClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Claim, and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": " depending on whether all the items were fulfilled.\nIt may also change the status to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": " if any actions are required."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const fulfillClaim = useAdminFulfillClaim(orderId)\n  // ...\n\n  const handleFulfill = () => {\n    fulfillClaim.mutate({\n      claim_id: claimId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14357,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14358,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 14352,
																"name": "AdminFulfillClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 14352,
														"name": "AdminFulfillClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14363,
									"name": "useAdminCancelClaimFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14364,
											"name": "useAdminCancelClaimFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaimFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelFulfillment = useAdminCancelClaimFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (fulfillmentId: string) => {\n    cancelFulfillment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14365,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14366,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 14359,
																"name": "AdminCancelClaimFulfillmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 14359,
														"name": "AdminCancelClaimFulfillmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14367,
									"name": "useAdminCreateClaimShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14368,
											"name": "useAdminCreateClaimShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for the claim and mark its fulfillment as shipped. If the shipment is created successfully, this changes the claim's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaimShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const createShipment = useAdminCreateClaimShipment(orderId)\n  // ...\n\n  const handleCreateShipment = (fulfillmentId: string) => {\n    createShipment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14369,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14370,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																		},
																		"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14371,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14372,
																					"name": "claim_id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "The claim's ID."
																							}
																						]
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14372
																					]
																				}
																			]
																		}
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																},
																"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 14373,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 14374,
																			"name": "claim_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The claim's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				14374
																			]
																		}
																	]
																}
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14337,
										14344,
										14348,
										14355,
										14363,
										14367
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										14337,
										14344,
										14348,
										14355,
										14363,
										14367
									]
								}
							]
						},
						{
							"id": 14048,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Collection API Routes](https://docs.medusajs.com/api/admin#product-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14422,
									"name": "useAdminCreateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14423,
											"name": "useAdminCreateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCollection } from \"medusa-react\"\n\nconst CreateCollection = () => {\n  const createCollection = useAdminCreateCollection()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14424,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsReq"
																},
																"name": "AdminPostCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsReq"
														},
														"name": "AdminPostCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14425,
									"name": "useAdminUpdateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14426,
											"name": "useAdminUpdateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const updateCollection = useAdminUpdateCollection(collectionId)\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14427,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14428,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsCollectionReq"
																},
																"name": "AdminPostCollectionsCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsCollectionReq"
														},
														"name": "AdminPostCollectionsCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14429,
									"name": "useAdminDeleteCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14430,
											"name": "useAdminDeleteCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product collection. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const deleteCollection = useAdminDeleteCollection(collectionId)\n  // ...\n\n  const handleDelete = (title: string) => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14431,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14432,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14433,
									"name": "useAdminAddProductsToCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14434,
											"name": "useAdminAddProductsToCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const addProducts = useAdminAddProductsToCollection(collectionId)\n  // ...\n\n  const handleAddProducts = (productIds: string[]) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14435,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14436,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
																	"qualifiedName": "AdminPostProductsToCollectionReq"
																},
																"name": "AdminPostProductsToCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
															"qualifiedName": "AdminPostProductsToCollectionReq"
														},
														"name": "AdminPostProductsToCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14437,
									"name": "useAdminRemoveProductsFromCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14438,
											"name": "useAdminRemoveProductsFromCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a collection. This would not delete the product, \nonly the association between the product and the collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRemoveProductsFromCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const removeProducts = useAdminRemoveProductsFromCollection(collectionId)\n  // ...\n\n  const handleRemoveProducts = (productIds: string[]) => {\n    removeProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ id, object, removed_products }) => {\n        console.log(removed_products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14439,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14440,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																		},
																		"name": "AdminDeleteProductsFromCollectionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionReq"
																},
																"name": "AdminDeleteProductsFromCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																},
																"name": "AdminDeleteProductsFromCollectionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
															"qualifiedName": "AdminDeleteProductsFromCollectionReq"
														},
														"name": "AdminDeleteProductsFromCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14376,
									"name": "useAdminCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14377,
											"name": "useAdminCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": ".\nThe collections can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, isLoading } = useAdminCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, limit, offset, isLoading } = useAdminCollections({\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14378,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/list-collections.d.ts",
															"qualifiedName": "AdminGetCollectionsParams"
														},
														"name": "AdminGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14379,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsListRes"
																		},
																		"name": "AdminCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14380,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14381,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14381
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14382,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14387,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14386,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14383,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14384,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14385,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14387,
																		14386,
																		14383,
																		14384,
																		14385
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14388,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14393,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14392,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14389,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14390,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14391,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14393,
																		14392,
																		14389,
																		14390,
																		14391
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14399,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14398,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14395,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14396,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14397,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14399,
																		14398,
																		14395,
																		14396,
																		14397
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14405,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14404,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14401,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14402,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14403,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14405,
																		14404,
																		14401,
																		14402,
																		14403
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14406,
									"name": "useAdminCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14407,
											"name": "useAdminCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection by its ID. The products associated with it are expanded and returned as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useAdminCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14408,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14409,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14410,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14412,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14411,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14412,
																		14411
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14413,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14415,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14414,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14415,
																		14414
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14416,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14418,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14417,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14418,
																		14417
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14421,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14420,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14421,
																		14420
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14422,
										14425,
										14429,
										14433,
										14437,
										14376,
										14406
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14376,
										14406
									]
								},
								{
									"title": "Mutations",
									"children": [
										14422,
										14425,
										14429,
										14433,
										14437
									]
								}
							]
						},
						{
							"id": 14049,
							"name": "Currencies",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Currency API Routes](https://docs.medusajs.com/api/admin#currencies).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA store can use unlimited currencies, and each region must be associated with at least one currency.\nCurrencies are defined within the Medusa backend. The methods in this class allow admins to list and update currencies.\n\nRelated Guide: [How to manage currencies](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-currencies)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14441,
									"name": "useAdminUpdateCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14442,
											"name": "useAdminUpdateCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a currency's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCurrency } from \"medusa-react\"\n\ntype Props = {\n  currencyCode: string\n}\n\nconst Currency = ({ currencyCode }: Props) => {\n  const updateCurrency = useAdminUpdateCurrency(currencyCode)\n  // ...\n\n  const handleUpdate = (includes_tax: boolean) => {\n    updateCurrency.mutate({\n      includes_tax,\n    }, {\n      onSuccess: ({ currency }) => {\n        console.log(currency)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Currency\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14443,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currency's code."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14444,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesRes"
																		},
																		"name": "AdminCurrenciesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
																	"qualifiedName": "AdminPostCurrenciesCurrencyReq"
																},
																"name": "AdminPostCurrenciesCurrencyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																	"qualifiedName": "AdminCurrenciesRes"
																},
																"name": "AdminCurrenciesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
															"qualifiedName": "AdminPostCurrenciesCurrencyReq"
														},
														"name": "AdminPostCurrenciesCurrencyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14446,
									"name": "useAdminCurrencies",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14447,
											"name": "useAdminCurrencies",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of currencies. The currencies can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": ". \nThe currencies can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list currencies:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, isLoading } = useAdminCurrencies()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, limit, offset, isLoading } = useAdminCurrencies({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14448,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved currencies."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/list-currencies.d.ts",
															"qualifiedName": "AdminGetCurrenciesParams"
														},
														"name": "AdminGetCurrenciesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14449,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesListRes"
																		},
																		"name": "AdminCurrenciesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_currencies"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14450,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14451,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14451
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14452,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14457,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14456,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14453,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14454,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14455,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14457,
																		14456,
																		14453,
																		14454,
																		14455
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14458,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14463,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14462,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14459,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14460,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14461,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14463,
																		14462,
																		14459,
																		14460,
																		14461
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14464,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14469,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14468,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14465,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14466,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14467,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14469,
																		14468,
																		14465,
																		14466,
																		14467
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14470,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14475,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14474,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14471,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14472,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14473,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14475,
																		14474,
																		14471,
																		14472,
																		14473
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14441,
										14446
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										14441
									]
								},
								{
									"title": "Queries",
									"children": [
										14446
									]
								}
							]
						},
						{
							"id": 14050,
							"name": "Custom",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This class is used to send requests custom API Routes. All its method\nare available in the JS Client under the "
									},
									{
										"kind": "code",
										"text": "`medusa.admin.custom`"
									},
									{
										"kind": "text",
										"text": " property."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14483,
									"name": "useAdminCustomPost",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14484,
											"name": "useAdminCustomPost",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`POST`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TPayload - The payload based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TPayload`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomPost } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype PostRequest = {\n  title: string\n}\ntype PostResponse = {\n  post: Post\n}\n\nconst Custom = () => {\n  const customPost = useAdminCustomPost\n  <PostRequest, PostResponse>(\n    \"/blog/posts\",\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customPost.mutate({\n      title\n    }, {\n      onSuccess: ({ post }) => {\n        console.log(post)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 14485,
													"name": "TPayload",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted body parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 14486,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response, which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 14487,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14488,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 14489,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 14490,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 14486,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 14485,
																"name": "TPayload",
																"package": "medusa-react",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 14486,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 14485,
														"name": "TPayload",
														"package": "medusa-react",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14476,
									"name": "useAdminCustomDelete",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14477,
											"name": "useAdminCustomDelete",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`DELETE`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type provided for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomDelete } from \"medusa-react\"\n\ntype Props = {\n  customId: string\n}\n\nconst Custom = ({ customId }: Props) => {\n  const customDelete = useAdminCustomDelete(\n    `/blog/posts/${customId}`,\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customDelete.mutate(void 0, {\n      onSuccess: () => {\n        // Delete action successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 14478,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The response's type which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 14479,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14480,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 14481,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 14482,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 14478,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 14478,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14491,
									"name": "useAdminCustomQuery",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14492,
											"name": "useAdminCustomQuery",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`GET`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TQuery - The query parameters based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TQuery`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomQuery } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype RequestQuery = {\n  title: string\n}\n\ntype ResponseData = {\n  posts: Post\n}\n\nconst Custom = () => {\n  const { data, isLoading } = useAdminCustomQuery\n    <RequestQuery, ResponseData>(\n      \"/blog/posts\",\n      [\"posts\"],\n      {\n        title: \"My post\"\n      }\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {data?.posts && !data.posts.length && (\n        <span>No Post</span>\n      )}\n      {data?.posts && data.posts?.length > 0 && (\n        <ul>\n          {data.posts.map((post) => (\n            <li key={post.id}>{post.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 14493,
													"name": "TQuery",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted query parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 14494,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 14495,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14496,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 14497,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Query parameters to pass to the request."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 14493,
														"name": "TQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 14498,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 14494,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "undefined"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
																				"qualifiedName": "QueryKey"
																			},
																			"name": "QueryKey",
																			"package": "@tanstack/query-core"
																		},
																		{
																			"type": "reference",
																			"target": 14493,
																			"name": "TQuery",
																			"package": "medusa-react",
																			"refersToTypeParameter": true
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14499,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14500,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 14494,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14500
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14501,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14502,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 14494,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14502
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14503,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14504,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 14494,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14504
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14505,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14506,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 14494,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14506
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14483,
										14476,
										14491
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										14476,
										14483,
										14491
									]
								}
							]
						},
						{
							"id": 14051,
							"name": "Customer Groups",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer Group API Routes](https://docs.medusajs.com/api/admin#customer-groups).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nCustomer Groups can be used to organize customers that share similar data or attributes into dedicated groups.\nThis can be useful for different purposes such as setting a different price for a specific customer group.\n\nRelated Guide: [How to manage customer groups](https://docs.medusajs.com/modules/customers/admin/manage-customer-groups)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14628,
									"name": "useAdminCreateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14629,
											"name": "useAdminCreateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomerGroup } from \"medusa-react\"\n\nconst CreateCustomerGroup = () => {\n  const createCustomerGroup = useAdminCreateCustomerGroup()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14630,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsReq"
																},
																"name": "AdminPostCustomerGroupsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsReq"
														},
														"name": "AdminPostCustomerGroupsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14631,
									"name": "useAdminUpdateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14632,
											"name": "useAdminUpdateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer group's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const updateCustomerGroup = useAdminUpdateCustomerGroup(\n    customerGroupId\n  )\n  // ..\n\n  const handleUpdate = (name: string) => {\n    updateCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14633,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14634,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupReq"
																},
																"name": "AdminPostCustomerGroupsGroupReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupReq"
														},
														"name": "AdminPostCustomerGroupsGroupReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14635,
									"name": "useAdminDeleteCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14636,
											"name": "useAdminDeleteCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a customer group. This doesn't delete the customers associated with the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const deleteCustomerGroup = useAdminDeleteCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleDeleteCustomerGroup = () => {\n    deleteCustomerGroup.mutate()\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14637,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14638,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14639,
									"name": "useAdminAddCustomersToCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14640,
											"name": "useAdminAddCustomersToCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook adds a list of customers to a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddCustomersToCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const addCustomers = useAdminAddCustomersToCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleAddCustomers= (customerId: string) => {\n    addCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14641,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14642,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
																},
																"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
														},
														"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14643,
									"name": "useAdminRemoveCustomersFromCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14644,
											"name": "useAdminRemoveCustomersFromCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of customers from a customer group. This doesn't delete the customer, \nonly the association between the customer and the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveCustomersFromCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const removeCustomers = \n    useAdminRemoveCustomersFromCustomerGroup(\n      customerGroupId\n    )\n  // ...\n\n  const handleRemoveCustomer = (customerId: string) => {\n    removeCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14645,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14646,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
																	"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
																},
																"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
															"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
														},
														"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14541,
									"name": "useAdminCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14542,
											"name": "useAdminCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a customer group by its ID. You can expand the customer group's relations or \nselect the fields that should be returned."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { customer_group, isLoading } = useAdminCustomerGroup(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_group && <span>{customer_group.name}</span>}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14543,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14544,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved customer group."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/get-customer-group.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsGroupParams"
														},
														"name": "AdminGetCustomerGroupsGroupParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14545,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14546,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14548,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14547,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14548,
																		14547
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14549,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14551,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14550,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14551,
																		14550
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14552,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14554,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14553,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14554,
																		14553
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14555,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14557,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14556,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14557,
																		14556
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14558,
									"name": "useAdminCustomerGroups",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14559,
											"name": "useAdminCustomerGroups",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customer groups. The customer groups can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": ". \nThe customer groups can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    limit,\n    offset,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\",\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14560,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customer groups."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/list-customer-groups.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsParams"
														},
														"name": "AdminGetCustomerGroupsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14561,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsListRes"
																		},
																		"name": "AdminCustomerGroupsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14562,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14563,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14563
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14564,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14569,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14568,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14565,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14566,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14567,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14569,
																		14568,
																		14565,
																		14566,
																		14567
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14570,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14575,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14574,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14571,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14572,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14573,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14575,
																		14574,
																		14571,
																		14572,
																		14573
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14576,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14581,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14580,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14577,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14578,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14579,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14581,
																		14580,
																		14577,
																		14578,
																		14579
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14582,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14587,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14586,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14583,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14584,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14585,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14587,
																		14586,
																		14583,
																		14584,
																		14585
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14588,
									"name": "useAdminCustomerGroupCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14589,
											"name": "useAdminCustomerGroupCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customers in a customer group. The customers can be filtered \nby the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " field. The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroupCustomers } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { \n    customers, \n    isLoading,\n  } = useAdminCustomerGroupCustomers(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14590,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14591,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14592,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 14593,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 14594,
																						"name": "limit",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.limit"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n50\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 14595,
																						"name": "offset",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.offset"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n0\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 14596,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindParams.expand"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 14597,
																						"name": "fields",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindParams.fields"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 14598,
																						"name": "q",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Search term used to search customers' email, first name, last name."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 14599,
																						"name": "has_account",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by whether they have an account."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					},
																					{
																						"id": 14600,
																						"name": "groups",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by the customer's customer groups."
																								}
																							]
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 14601,
																						"name": "order",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
																								},
																								{
																									"kind": "code",
																									"text": "`-`"
																								},
																								{
																									"kind": "text",
																									"text": "."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 14602,
																						"name": "created_at",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Date filters to apply on the customers' "
																								},
																								{
																									"kind": "code",
																									"text": "`created_at`"
																								},
																								{
																									"kind": "text",
																									"text": " date."
																								}
																							]
																						},
																						"type": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																								"qualifiedName": "DateComparisonOperator"
																							},
																							"name": "DateComparisonOperator",
																							"package": "@medusajs/medusa"
																						}
																					},
																					{
																						"id": 14603,
																						"name": "updated_at",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Date filters to apply on the customers' "
																								},
																								{
																									"kind": "code",
																									"text": "`updated_at`"
																								},
																								{
																									"kind": "text",
																									"text": " date."
																								}
																							]
																						},
																						"type": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																								"qualifiedName": "DateComparisonOperator"
																							},
																							"name": "DateComparisonOperator",
																							"package": "@medusajs/medusa"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							14594,
																							14595,
																							14596,
																							14597,
																							14598,
																							14599,
																							14600,
																							14601,
																							14602,
																							14603
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14604,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14609,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14608,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14605,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14606,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14607,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14609,
																		14608,
																		14605,
																		14606,
																		14607
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14610,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14615,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14614,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14611,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14612,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14613,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14615,
																		14614,
																		14611,
																		14612,
																		14613
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14616,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14621,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14620,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14617,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14618,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14619,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14621,
																		14620,
																		14617,
																		14618,
																		14619
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14622,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14627,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14626,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14623,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14624,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14625,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14627,
																		14626,
																		14623,
																		14624,
																		14625
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14628,
										14631,
										14635,
										14639,
										14643,
										14541,
										14558,
										14588
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14541,
										14558,
										14588
									]
								},
								{
									"title": "Mutations",
									"children": [
										14628,
										14631,
										14635,
										14639,
										14643
									]
								}
							]
						},
						{
							"id": 14052,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer API Routes](https://docs.medusajs.com/api/admin#customers).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage customers](https://docs.medusajs.com/modules/customers/admin/manage-customers)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14694,
									"name": "useAdminCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14695,
											"name": "useAdminCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer as an admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\nconst CreateCustomer = () => {\n  const createCustomer = useAdminCreateCustomer()\n  // ...\n\n  const handleCreate = (customerData: CustomerData) => {\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14696,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersReq"
																},
																"name": "AdminPostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
															"qualifiedName": "AdminPostCustomersReq"
														},
														"name": "AdminPostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14697,
									"name": "useAdminUpdateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14698,
											"name": "useAdminUpdateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useAdminUpdateCustomer(customerId)\n  // ...\n\n  const handleUpdate = (customerData: CustomerData) => {\n    updateCustomer.mutate(customerData)\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14699,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14700,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersCustomerReq"
																},
																"name": "AdminPostCustomersCustomerReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
															"qualifiedName": "AdminPostCustomersCustomerReq"
														},
														"name": "AdminPostCustomersCustomerReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14648,
									"name": "useAdminCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14649,
											"name": "useAdminCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Customers. The customers can be filtered by fields such as \n"
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`groups`"
													},
													{
														"kind": "text",
														"text": ". The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customers:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { customers, isLoading } = useAdminCustomers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can specify relations to be retrieved within each customer. In addition, by default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. \nYou can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { \n    customers, \n    limit,\n    offset,\n    isLoading\n  } = useAdminCustomers({\n    expand: \"billing_address\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14650,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14651,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14652,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14653,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14653
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14654,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14659,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14658,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14655,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14656,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14657,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14659,
																		14658,
																		14655,
																		14656,
																		14657
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14660,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14665,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14664,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14661,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14662,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14663,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14665,
																		14664,
																		14661,
																		14662,
																		14663
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14666,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14670,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14667,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14668,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14669,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14671,
																		14670,
																		14667,
																		14668,
																		14669
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14672,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14677,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14676,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14673,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14674,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14675,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14677,
																		14676,
																		14673,
																		14674,
																		14675
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14678,
									"name": "useAdminCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14679,
											"name": "useAdminCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomer } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const { customer, isLoading } = useAdminCustomer(\n    customerId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && <span>{customer.first_name}</span>}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14680,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14681,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14682,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14684,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14683,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14684,
																		14683
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14685,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14687,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14686,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14687,
																		14686
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14688,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14690,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14689,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14690,
																		14689
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14693,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14692,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14693,
																		14692
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14694,
										14697,
										14648,
										14678
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14648,
										14678
									]
								},
								{
									"title": "Mutations",
									"children": [
										14694,
										14697
									]
								}
							]
						},
						{
							"id": 14053,
							"name": "Discounts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Discount API Routes](https://docs.medusajs.com/api/admin#discounts).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create discounts with conditions and rules, providing them with advanced settings for variety of cases.\nThe methods in this class can be used to manage discounts, their conditions, resources, and more.\n\nRelated Guide: [How to manage discounts](https://docs.medusajs.com/modules/discounts/admin/manage-discounts)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14805,
									"name": "useAdminAddDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14806,
											"name": "useAdminAddDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. \nFor example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add resources to a discount condition:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations to include in the returned discount:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n    {\n      expand: \"rule\"\n    }\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14807,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14808,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14809,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14810,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14811,
									"name": "useAdminDeleteDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14812,
											"name": "useAdminDeleteDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook remove a batch of resources from a discount condition. This will only remove the association between the resource and \nthe discount condition, not the resource itself."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const deleteConditionResource = useAdminDeleteDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteConditionResource.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14813,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14814,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14815,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
																	"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
															"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14816,
									"name": "useAdminCreateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14817,
											"name": "useAdminCreateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount with a given set of rules that defines how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateDiscount,\n} from \"medusa-react\"\nimport { \n  AllocationType, \n  DiscountRuleType,\n} from \"@medusajs/medusa\"\n\nconst CreateDiscount = () => {\n  const createDiscount = useAdminCreateDiscount()\n  // ...\n\n  const handleCreate = (\n    currencyCode: string,\n    regionId: string\n  ) => {\n    // ...\n    createDiscount.mutate({\n      code: currencyCode,\n      rule: {\n        type: DiscountRuleType.FIXED,\n        value: 10,\n        allocation: AllocationType.ITEM,\n      },\n      regions: [\n          regionId,\n      ],\n      is_dynamic: false,\n      is_disabled: false,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDiscount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14818,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsReq"
																},
																"name": "AdminPostDiscountsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsReq"
														},
														"name": "AdminPostDiscountsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14819,
									"name": "useAdminUpdateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14820,
											"name": "useAdminUpdateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a discount with a given set of rules that define how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const updateDiscount = useAdminUpdateDiscount(discountId)\n  // ...\n\n  const handleUpdate = (isDisabled: boolean) => {\n    updateDiscount.mutate({\n      is_disabled: isDisabled,\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14821,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14822,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountReq"
																},
																"name": "AdminPostDiscountsDiscountReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountReq"
														},
														"name": "AdminPostDiscountsDiscountReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14823,
									"name": "useAdminDeleteDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14824,
											"name": "useAdminDeleteDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount. Deleting the discount will make it unavailable for customers to use."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDiscount } from \"medusa-react\"\n\nconst Discount = () => {\n  const deleteDiscount = useAdminDeleteDiscount(discount_id)\n  // ...\n\n  const handleDelete = () => {\n    deleteDiscount.mutate()\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14825,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14826,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14827,
									"name": "useAdminDiscountAddRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14828,
											"name": "useAdminDiscountAddRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a Region to the list of Regions a Discount can be used in."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to add."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountAddRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const addRegion = useAdminDiscountAddRegion(discountId)\n  // ...\n\n  const handleAdd = (regionId: string) => {\n    addRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14829,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14830,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14831,
									"name": "useAdminDiscountRemoveRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14832,
											"name": "useAdminDiscountRemoveRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a Region from the list of Regions that a Discount can be used in. \nThis does not delete a region, only the association between it and the discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteRegion = useAdminDiscountRemoveRegion(discountId)\n  // ...\n\n  const handleDelete = (regionId: string) => {\n    deleteRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14833,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14834,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14835,
									"name": "useAdminCreateDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14836,
											"name": "useAdminCreateDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a dynamic unique code that can map to a parent discount. This is useful if you want to \nautomatically generate codes with the same rules and conditions."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createDynamicDiscount = useAdminCreateDynamicDiscountCode(discountId)\n  // ...\n\n  const handleCreate = (\n    code: string,\n    usageLimit: number\n  ) => {\n    createDynamicDiscount.mutate({\n      code,\n      usage_limit: usageLimit\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14837,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14838,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
																},
																"name": "AdminPostDiscountsDiscountDynamicCodesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
														},
														"name": "AdminPostDiscountsDiscountDynamicCodesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14839,
									"name": "useAdminDeleteDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14840,
											"name": "useAdminDeleteDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a dynamic code from a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the dynamic discount to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteDynamicDiscount = useAdminDeleteDynamicDiscountCode(discountId)\n  // ...\n\n  const handleDelete = (code: string) => {\n    deleteDynamicDiscount.mutate(code, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14841,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14842,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14843,
									"name": "useAdminDiscountCreateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14844,
											"name": "useAdminDiscountCreateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", \nthe "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { DiscountConditionOperator } from \"@medusajs/medusa\"\nimport { useAdminDiscountCreateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createCondition = useAdminDiscountCreateCondition(discountId)\n  // ...\n\n  const handleCreateCondition = (\n    operator: DiscountConditionOperator,\n    products: string[]\n  ) => {\n    createCondition.mutate({\n      operator,\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14845,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14846,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditions"
																},
																"name": "AdminPostDiscountsDiscountConditions",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditions"
														},
														"name": "AdminPostDiscountsDiscountConditions",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14847,
									"name": "useAdminDiscountUpdateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14848,
											"name": "useAdminDiscountUpdateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Update a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's \ntype is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountUpdateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const update = useAdminDiscountUpdateCondition(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleUpdate = (\n    products: string[]\n  ) => {\n    update.mutate({\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14849,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14850,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14851,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
																},
																"name": "AdminPostDiscountsDiscountConditionsCondition",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
														},
														"name": "AdminPostDiscountsDiscountConditionsCondition",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14852,
									"name": "useAdminDiscountRemoveCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14853,
											"name": "useAdminDiscountRemoveCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount condition. This doesn't delete resources associated to the discount condition."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the condition to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteCondition = useAdminDiscountRemoveCondition(\n    discountId\n  )\n  // ...\n\n  const handleDelete = (\n    conditionId: string\n  ) => {\n    deleteCondition.mutate(conditionId, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(deleted)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14854,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14855,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14724,
									"name": "useAdminDiscounts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14725,
											"name": "useAdminDiscounts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Discounts. The discounts can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`rule`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`is_dynamic`"
													},
													{
														"kind": "text",
														"text": ".\nThe discounts can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts({\n    expand: \"rule\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const {\n    discounts,\n    limit,\n    offset,\n    isLoading\n  } = useAdminDiscounts({\n    expand: \"rule\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14726,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved discounts."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/list-discounts.d.ts",
															"qualifiedName": "AdminGetDiscountsParams"
														},
														"name": "AdminGetDiscountsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14727,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsListRes"
																		},
																		"name": "AdminDiscountsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14728,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14729,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14729
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14730,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14735,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14734,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14731,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14732,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14733,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14735,
																		14734,
																		14731,
																		14732,
																		14733
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14736,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14741,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14740,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14737,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14738,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14739,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14741,
																		14740,
																		14737,
																		14738,
																		14739
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14742,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14747,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14746,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14743,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14744,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14745,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14747,
																		14746,
																		14743,
																		14744,
																		14745
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14748,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14753,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14752,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14749,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14750,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14751,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14753,
																		14752,
																		14749,
																		14750,
																		14751
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14754,
									"name": "useAdminDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14755,
											"name": "useAdminDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const { discount, isLoading } = useAdminDiscount(\n    discountId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14756,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14757,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-discount.d.ts",
															"qualifiedName": "AdminGetDiscountParams"
														},
														"name": "AdminGetDiscountParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14758,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14759,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14761,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14760,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14761,
																		14760
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14762,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14764,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14763,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14764,
																		14763
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14765,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14767,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14766,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14767,
																		14766
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14768,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14770,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14769,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14770,
																		14769
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14771,
									"name": "useAdminGetDiscountByCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14772,
											"name": "useAdminGetDiscountByCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ",\nthe resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountByCode } from \"medusa-react\"\n\ntype Props = {\n  discountCode: string\n}\n\nconst Discount = ({ discountCode }: Props) => {\n  const { discount, isLoading } = useAdminGetDiscountByCode(\n    discountCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14773,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The code of the discount."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14774,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14775,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14777,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14776,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14777,
																		14776
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14778,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14780,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14779,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14780,
																		14779
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14781,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14783,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14782,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14783,
																		14782
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14784,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14786,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14785,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14786,
																		14785
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14787,
									"name": "useAdminGetDiscountCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14788,
											"name": "useAdminGetDiscountCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retries a Discount Condition's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  discountConditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  discountConditionId\n}: Props) => {\n  const {\n    discount_condition,\n    isLoading\n  } = useAdminGetDiscountCondition(\n    discountId,\n    discountConditionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount_condition && (\n        <span>{discount_condition.type}</span>\n      )}\n    </div>\n  )\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14789,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14790,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14791,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount condition."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-condition.d.ts",
															"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
														},
														"name": "AdminGetDiscountsDiscountConditionsConditionParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14792,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountConditionsRes"
																		},
																		"name": "AdminDiscountConditionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_discounts"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "condition"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14793,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14795,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14794,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14795,
																		14794
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14796,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14798,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14797,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14798,
																		14797
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14799,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14801,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14800,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14801,
																		14800
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14802,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14804,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14803,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14804,
																		14803
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14805,
										14811,
										14816,
										14819,
										14823,
										14827,
										14831,
										14835,
										14839,
										14843,
										14847,
										14852,
										14724,
										14754,
										14771,
										14787
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14724,
										14754,
										14771,
										14787
									]
								},
								{
									"title": "Mutations",
									"children": [
										14805,
										14811,
										14816,
										14819,
										14823,
										14827,
										14831,
										14835,
										14839,
										14843,
										14847,
										14852
									]
								}
							]
						},
						{
							"id": 14054,
							"name": "Draft Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Draft Order API Routes](https://docs.medusajs.com/api/admin#draft-orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA draft order is an order created manually by the admin. It allows admins to create orders without direct involvement from the customer.\n\nRelated Guide: [How to manage draft orders](https://docs.medusajs.com/modules/orders/admin/manage-draft-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14903,
									"name": "useAdminCreateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14904,
											"name": "useAdminCreateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Draft Order. A draft order is not transformed into an order until payment is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDraftOrder } from \"medusa-react\"\n\ntype DraftOrderData = {\n  email: string\n  region_id: string\n  items: {\n    quantity: number,\n    variant_id: string\n  }[]\n  shipping_methods: {\n    option_id: string\n    price: number\n  }[]\n}\n\nconst CreateDraftOrder = () => {\n  const createDraftOrder = useAdminCreateDraftOrder()\n  // ...\n\n  const handleCreate = (data: DraftOrderData) => {\n    createDraftOrder.mutate(data, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14905,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersReq"
																},
																"name": "AdminPostDraftOrdersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersReq"
														},
														"name": "AdminPostDraftOrdersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14906,
									"name": "useAdminUpdateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14907,
											"name": "useAdminUpdateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateDraftOrder = useAdminUpdateDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (email: string) => {\n    updateDraftOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14908,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14909,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14910,
									"name": "useAdminDeleteDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14911,
											"name": "useAdminDeleteDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteDraftOrder = useAdminDeleteDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteDraftOrder.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14912,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14913,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14914,
									"name": "useAdminDraftOrderRegisterPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14915,
											"name": "useAdminDraftOrderRegisterPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook capture the draft order's payment. This will also set the draft order's status to "
													},
													{
														"kind": "code",
														"text": "`completed`"
													},
													{
														"kind": "text",
														"text": " and create an order from the draft order. The payment is captured through Medusa's system payment,\nwhich is manual payment that isn't integrated with any third-party payment provider. It is assumed that the payment capturing is handled manually by the admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRegisterPayment } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const registerPayment = useAdminDraftOrderRegisterPayment(\n    draftOrderId\n  )\n  // ...\n\n  const handlePayment = () => {\n    registerPayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14916,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14917,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																		},
																		"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																},
																"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14918,
									"name": "useAdminDraftOrderAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14919,
											"name": "useAdminDraftOrderAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Line Item in the Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const addLineItem = useAdminDraftOrderAddLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleAdd = (quantity: number) => {\n    addLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14920,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14921,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14922,
									"name": "useAdminDraftOrderRemoveLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14923,
											"name": "useAdminDraftOrderRemoveLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Line Item from a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the line item to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRemoveLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteLineItem = useAdminDraftOrderRemoveLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteLineItem.mutate(itemId, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14924,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14925,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14929,
									"name": "useAdminDraftOrderUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14930,
											"name": "useAdminDraftOrderUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Line Item in a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateLineItem = useAdminDraftOrderUpdateLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (\n    itemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      item_id: itemId,\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14931,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14932,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 14926,
																"name": "AdminDraftOrderUpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 14926,
														"name": "AdminDraftOrderUpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14857,
									"name": "useAdminDraftOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14858,
											"name": "useAdminDraftOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an list of Draft Orders. The draft orders can be filtered by parameters such as "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". The draft orders can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list draft orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { draft_orders, isLoading } = useAdminDraftOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { \n    draft_orders, \n    limit,\n    offset,\n    isLoading\n  } = useAdminDraftOrders({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14859,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved draft orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/list-draft-orders.d.ts",
															"qualifiedName": "AdminGetDraftOrdersParams"
														},
														"name": "AdminGetDraftOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14860,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersListRes"
																		},
																		"name": "AdminDraftOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14861,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14862,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14862
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14863,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14868,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14867,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14864,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14865,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14866,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14868,
																		14867,
																		14864,
																		14865,
																		14866
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14869,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14874,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14873,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14870,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14871,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14872,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14874,
																		14873,
																		14870,
																		14871,
																		14872
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14875,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14880,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14879,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14876,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14877,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14878,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14880,
																		14879,
																		14876,
																		14877,
																		14878
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14881,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14886,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14885,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14882,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14883,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14884,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14886,
																		14885,
																		14882,
																		14883,
																		14884
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14887,
									"name": "useAdminDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14888,
											"name": "useAdminDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const { \n    draft_order, \n    isLoading, \n  } = useAdminDraftOrder(draftOrderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_order && <span>{draft_order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14889,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14890,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14891,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14893,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14892,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14893,
																		14892
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14894,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14896,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14895,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14896,
																		14895
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14897,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14899,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14898,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14899,
																		14898
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14900,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14902,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14901,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14902,
																		14901
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14903,
										14906,
										14910,
										14914,
										14918,
										14922,
										14929,
										14857,
										14887
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14857,
										14887
									]
								},
								{
									"title": "Mutations",
									"children": [
										14903,
										14906,
										14910,
										14914,
										14918,
										14922,
										14929
									]
								}
							]
						},
						{
							"id": 14055,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Gift Card API Routes](https://docs.medusajs.com/api/admin#gift-cards).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create gift cards and send them directly to customers, specifying options like their balance, region, and more.\nThese gift cards are different than the saleable gift cards in a store, which are created and managed through "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAdminCreateProduct",
										"target": 15863
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-custom-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 14980,
									"name": "useAdminCreateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14981,
											"name": "useAdminCreateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a gift card that can redeemed by its unique code. The Gift Card is only valid within one region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateGiftCard } from \"medusa-react\"\n\nconst CreateCustomGiftCards = () => {\n  const createGiftCard = useAdminCreateGiftCard()\n  // ...\n  \n  const handleCreate = (\n    regionId: string, \n    value: number\n  ) => {\n    createGiftCard.mutate({\n      region_id: regionId,\n      value,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14982,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsReq"
																},
																"name": "AdminPostGiftCardsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsReq"
														},
														"name": "AdminPostGiftCardsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14983,
									"name": "useAdminUpdateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14984,
											"name": "useAdminUpdateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const updateGiftCard = useAdminUpdateGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleUpdate = (regionId: string) => {\n    updateGiftCard.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14985,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14986,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsGiftCardReq"
																},
																"name": "AdminPostGiftCardsGiftCardReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsGiftCardReq"
														},
														"name": "AdminPostGiftCardsGiftCardReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14987,
									"name": "useAdminDeleteGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14988,
											"name": "useAdminDeleteGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a gift card. Once deleted, it can't be used by customers."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const deleteGiftCard = useAdminDeleteGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleDelete = () => {\n    deleteGiftCard.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14989,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14990,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14934,
									"name": "useAdminGiftCards",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14935,
											"name": "useAdminGiftCards",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of gift cards. The gift cards can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " \nparameter. The gift cards can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list gift cards:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { gift_cards, isLoading } = useAdminGiftCards()\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { \n    gift_cards, \n    limit,\n    offset,\n    isLoading\n  } = useAdminGiftCards({\n    limit: 20,\n    offset: 0\n  })\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14936,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved gift cards."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/list-gift-cards.d.ts",
															"qualifiedName": "AdminGetGiftCardsParams"
														},
														"name": "AdminGetGiftCardsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14937,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsListRes"
																		},
																		"name": "AdminGiftCardsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14938,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14939,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14939
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14940,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14945,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14944,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14941,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14942,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14943,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14945,
																		14944,
																		14941,
																		14942,
																		14943
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14946,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14951,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14950,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14947,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14948,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14949,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14951,
																		14950,
																		14947,
																		14948,
																		14949
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14952,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14957,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14956,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14953,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14954,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14955,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14957,
																		14956,
																		14953,
																		14954,
																		14955
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14958,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14963,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14962,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14959,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14960,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 14961,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14963,
																		14962,
																		14959,
																		14960,
																		14961
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 14964,
									"name": "useAdminGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14965,
											"name": "useAdminGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardId: string\n}\n\nconst CustomGiftCard = ({ giftCardId }: Props) => {\n  const { gift_card, isLoading } = useAdminGiftCard(giftCardId)\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.code}</span>}\n    </div>\n  )\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14966,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14967,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14968,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14970,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14969,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14970,
																		14969
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14971,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14973,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14972,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14973,
																		14972
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14974,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14976,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14975,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14976,
																		14975
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14977,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14979,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 14978,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14979,
																		14978
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										14980,
										14983,
										14987,
										14934,
										14964
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14934,
										14964
									]
								},
								{
									"title": "Mutations",
									"children": [
										14980,
										14983,
										14987
									]
								}
							]
						},
						{
							"id": 14056,
							"name": "Inventory Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Inventory Item API Routes](https://docs.medusajs.com/api/admin#inventory-items). \nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nInventory items, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), can be \nused to manage the inventory of saleable items in your store.\n\nRelated Guide: [How to manage inventory items](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-inventory-items)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15068,
									"name": "useAdminCreateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15069,
											"name": "useAdminCreateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an Inventory Item for a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateInventoryItem } from \"medusa-react\"\n\nconst CreateInventoryItem = () => {\n  const createInventoryItem = useAdminCreateInventoryItem()\n  // ...\n\n  const handleCreate = (variantId: string) => {\n    createInventoryItem.mutate({\n      variant_id: variantId,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateInventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15070,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsReq"
																},
																"name": "AdminPostInventoryItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsReq"
														},
														"name": "AdminPostInventoryItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15071,
									"name": "useAdminUpdateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15072,
											"name": "useAdminUpdateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateInventoryItem = useAdminUpdateInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (origin_country: string) => {\n    updateInventoryItem.mutate({\n      origin_country,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.origin_country)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15073,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15074,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
																},
																"name": "AdminPostInventoryItemsInventoryItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
														},
														"name": "AdminPostInventoryItemsInventoryItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15075,
									"name": "useAdminDeleteInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15076,
											"name": "useAdminDeleteInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an Inventory Item. This does not delete the associated product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteInventoryItem = useAdminDeleteInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteInventoryItem.mutate()\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15077,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15078,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15082,
									"name": "useAdminUpdateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15083,
											"name": "useAdminUpdateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a location level's details for a given inventory item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateLocationLevel = useAdminUpdateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (\n    stockLocationId: string,\n    stockedQuantity: number\n  ) => {\n    updateLocationLevel.mutate({\n      stockLocationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15084,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15085,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 15079,
																"name": "AdminUpdateLocationLevelReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 15079,
														"name": "AdminUpdateLocationLevelReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15086,
									"name": "useAdminDeleteLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15087,
											"name": "useAdminDeleteLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a location level of an Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the location level to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteLocationLevel = useAdminDeleteLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = (\n    locationId: string\n  ) => {\n    deleteLocationLevel.mutate(locationId)\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15088,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15089,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15090,
									"name": "useAdminCreateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15091,
											"name": "useAdminCreateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Location Level for a given Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const createLocationLevel = useAdminCreateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleCreateLocationLevel = (\n    locationId: string,\n    stockedQuantity: number\n  ) => {\n    createLocationLevel.mutate({\n      location_id: locationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15092,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15093,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
																},
																"name": "AdminPostInventoryItemsItemLocationLevelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
															"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
														},
														"name": "AdminPostInventoryItemsItemLocationLevelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 14992,
									"name": "useAdminInventoryItems",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 14993,
											"name": "useAdminInventoryItems",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory items. The inventory items can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe inventory items can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list inventory items:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    isLoading \n  } = useAdminInventoryItems()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    limit,\n    offset,\n    isLoading\n  } = useAdminInventoryItems({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 14994,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved inventory items."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-inventory-items.d.ts",
															"qualifiedName": "AdminGetInventoryItemsParams"
														},
														"name": "AdminGetInventoryItemsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 14995,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 14996,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14997,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14997
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 14998,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15003,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15002,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 14999,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15000,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15001,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15003,
																		15002,
																		14999,
																		15000,
																		15001
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15004,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15009,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15008,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15005,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15006,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15007,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15009,
																		15008,
																		15005,
																		15006,
																		15007
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15010,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15015,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15014,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15011,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15012,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15013,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15015,
																		15014,
																		15011,
																		15012,
																		15013
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15016,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15021,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15020,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15017,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15018,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15019,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15021,
																		15020,
																		15017,
																		15018,
																		15019
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15022,
									"name": "useAdminInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15023,
											"name": "useAdminInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading\n  } = useAdminInventoryItem(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <span>{inventory_item.sku}</span>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15024,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15025,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations applied on the retrieved inventory item."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15026,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15027,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15029,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15028,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15029,
																		15028
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15030,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15032,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15031,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15032,
																		15031
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15033,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15035,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15034,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15035,
																		15034
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15036,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15038,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15037,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15038,
																		15037
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15039,
									"name": "useAdminInventoryItemLocationLevels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15040,
											"name": "useAdminInventoryItemLocationLevels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory levels of an inventory item. The inventory levels can be filtered by fields \nsuch as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminInventoryItemLocationLevels,\n} from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading, \n  } = useAdminInventoryItemLocationLevels(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <ul>\n          {inventory_item.location_levels.map((level) => (\n            <span key={level.id}>{level.stocked_quantity}</span>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15041,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the inventory item that the location levels belong to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15042,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved location levels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-location-levels.d.ts",
															"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
														},
														"name": "AdminGetInventoryItemsItemLocationLevelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15043,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15044,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15049,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15045,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 15046,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15047,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 15048,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15047,
																						15048
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15049,
																		15045
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15050,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15055,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15051,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 15052,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15053,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 15054,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15053,
																						15054
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15055,
																		15051
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15056,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15061,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15057,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 15058,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15059,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 15060,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15059,
																						15060
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15061,
																		15057
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15062,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15067,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15063,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 15064,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15065,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 15066,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15065,
																						15066
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15067,
																		15063
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15068,
										15071,
										15075,
										15082,
										15086,
										15090,
										14992,
										15022,
										15039
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										14992,
										15022,
										15039
									]
								},
								{
									"title": "Mutations",
									"children": [
										15068,
										15071,
										15075,
										15082,
										15086,
										15090
									]
								}
							]
						},
						{
							"id": 14057,
							"name": "Invites",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Invite API Routes](https://docs.medusajs.com/api/admin#invites).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can invite new users to manage their team. This would allow new users to authenticate as admins and perform admin functionalities.\n\nRelated Guide: [How to manage invites](https://docs.medusajs.com/modules/users/admin/manage-invites)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15110,
									"name": "useAdminAcceptInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15111,
											"name": "useAdminAcceptInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook accepts an Invite. This will also delete the invite and create a new user that can log in and perform admin functionalities. \nThe user will have the email associated with the invite, and the password provided in the mutation function's parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAcceptInvite } from \"medusa-react\"\n\nconst AcceptInvite = () => {\n  const acceptInvite = useAdminAcceptInvite()\n  // ...\n\n  const handleAccept = (\n    token: string,\n    firstName: string,\n    lastName: string,\n    password: string\n  ) => {\n    acceptInvite.mutate({\n      token,\n      user: {\n        first_name: firstName,\n        last_name: lastName,\n        password,\n      },\n    }, {\n      onSuccess: () => {\n        // invite accepted successfully.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default AcceptInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15112,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
																	"qualifiedName": "AdminPostInvitesInviteAcceptReq"
																},
																"name": "AdminPostInvitesInviteAcceptReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
															"qualifiedName": "AdminPostInvitesInviteAcceptReq"
														},
														"name": "AdminPostInvitesInviteAcceptReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15113,
									"name": "useAdminResendInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15114,
											"name": "useAdminResendInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends an invite. This renews the expiry date by seven days and generates a new token for the invite. It also triggers the "
													},
													{
														"kind": "code",
														"text": "`invite.created`"
													},
													{
														"kind": "text",
														"text": " event, \nso if you have a Notification Provider installed that handles this event, a notification should be sent to the email associated with the \ninvite to allow them to accept the invite."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst ResendInvite = ({ inviteId }: Props) => {\n  const resendInvite = useAdminResendInvite(inviteId)\n  // ...\n\n  const handleResend = () => {\n    resendInvite.mutate(void 0, {\n      onSuccess: () => {\n        // invite resent successfully\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResendInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15115,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15116,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15120,
									"name": "useAdminDeleteInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15121,
											"name": "useAdminDeleteInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an invite. Only invites that weren't accepted can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst DeleteInvite = ({ inviteId }: Props) => {\n  const deleteInvite = useAdminDeleteInvite(inviteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteInvite.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Invite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15122,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15123,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15095,
									"name": "useAdminInvites",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15096,
											"name": "useAdminInvites",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of invites."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInvites } from \"medusa-react\"\n\nconst Invites = () => {\n  const { invites, isLoading } = useAdminInvites()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {invites && !invites.length && (\n        <span>No Invites</span>)\n      }\n      {invites && invites.length > 0 && (\n        <ul>\n          {invites.map((invite) => (\n            <li key={invite.id}>{invite.user_email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Invites\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15097,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
																			"qualifiedName": "AdminListInvitesRes"
																		},
																		"name": "AdminListInvitesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_invites"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15098,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15100,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15099,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15100,
																		15099
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15101,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15103,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15102,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15103,
																		15102
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15104,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15106,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15105,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15106,
																		15105
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15107,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15109,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15108,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15109,
																		15108
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15110,
										15113,
										15120,
										15095
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15095
									]
								},
								{
									"title": "Mutations",
									"children": [
										15110,
										15113,
										15120
									]
								}
							]
						},
						{
							"id": 14058,
							"name": "Notes",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Note API Routes](https://docs.medusajs.com/api/admin#notes).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nNotes are created by admins and can be associated with any resource. For example, an admin can add a note to an order for additional details or remarks."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15171,
									"name": "useAdminCreateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15172,
											"name": "useAdminCreateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Note which can be associated with any resource."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateNote } from \"medusa-react\"\n\nconst CreateNote = () => {\n  const createNote = useAdminCreateNote()\n  // ...\n\n  const handleCreate = () => {\n    createNote.mutate({\n      resource_id: \"order_123\",\n      resource_type: \"order\",\n      value: \"We delivered this order\"\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateNote\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15173,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
																	"qualifiedName": "AdminPostNotesReq"
																},
																"name": "AdminPostNotesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
															"qualifiedName": "AdminPostNotesReq"
														},
														"name": "AdminPostNotesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15174,
									"name": "useAdminUpdateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15175,
											"name": "useAdminUpdateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const updateNote = useAdminUpdateNote(noteId)\n  // ...\n\n  const handleUpdate = (\n    value: string\n  ) => {\n    updateNote.mutate({\n      value\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.value)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15176,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15177,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
																	"qualifiedName": "AdminPostNotesNoteReq"
																},
																"name": "AdminPostNotesNoteReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
															"qualifiedName": "AdminPostNotesNoteReq"
														},
														"name": "AdminPostNotesNoteReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15178,
									"name": "useAdminDeleteNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15179,
											"name": "useAdminDeleteNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Note."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const deleteNote = useAdminDeleteNote(noteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteNote.mutate()\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15180,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15181,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15125,
									"name": "useAdminNotes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15126,
											"name": "useAdminNotes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notes. The notes can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`resource_id`"
													},
													{
														"kind": "text",
														"text": " passed in \nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The notes can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notes:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { notes, isLoading } = useAdminNotes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { \n    notes, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotes({\n    limit: 40,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15127,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on retrieved notes."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/list-notes.d.ts",
															"qualifiedName": "AdminGetNotesParams"
														},
														"name": "AdminGetNotesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15128,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesListRes"
																		},
																		"name": "AdminNotesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15129,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15130,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15130
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15131,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15136,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15135,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15132,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15133,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15134,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15136,
																		15135,
																		15132,
																		15133,
																		15134
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15137,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15142,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15141,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15138,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15139,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15140,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15142,
																		15141,
																		15138,
																		15139,
																		15140
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15143,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15148,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15147,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15144,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15145,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15146,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15148,
																		15147,
																		15144,
																		15145,
																		15146
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15149,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15154,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15153,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15150,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15151,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15152,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15154,
																		15153,
																		15150,
																		15151,
																		15152
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15155,
									"name": "useAdminNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15156,
											"name": "useAdminNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const { note, isLoading } = useAdminNote(noteId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {note && <span>{note.resource_type}</span>}\n    </div>\n  )\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15157,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15158,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15159,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15161,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15160,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15161,
																		15160
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15162,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15164,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15163,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15164,
																		15163
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15165,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15167,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15166,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15167,
																		15166
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15168,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15170,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15169,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15170,
																		15169
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15171,
										15174,
										15178,
										15125,
										15155
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15125,
										15155
									]
								},
								{
									"title": "Mutations",
									"children": [
										15171,
										15174,
										15178
									]
								}
							]
						},
						{
							"id": 14059,
							"name": "Notifications",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Notification API Routes](https://docs.medusajs.com/api/admin#notifications).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nNotifications are sent to customers to inform them of new updates. For example, a notification can be sent to the customer when their order is place or its state is updated.\nThe notification's type, such as an email or SMS, is determined by the notification provider installed on the Medusa backend."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15213,
									"name": "useAdminResendNotification",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15214,
											"name": "useAdminResendNotification",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends a previously sent notifications, with the same data but optionally to a different address."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendNotification } from \"medusa-react\"\n\ntype Props = {\n  notificationId: string\n}\n\nconst Notification = ({ notificationId }: Props) => {\n  const resendNotification = useAdminResendNotification(\n    notificationId\n  )\n  // ...\n\n  const handleResend = () => {\n    resendNotification.mutate({}, {\n      onSuccess: ({ notification }) => {\n        console.log(notification.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Notification\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15215,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the notification."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15216,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsRes"
																		},
																		"name": "AdminNotificationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
																	"qualifiedName": "AdminPostNotificationsNotificationResendReq"
																},
																"name": "AdminPostNotificationsNotificationResendReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																	"qualifiedName": "AdminNotificationsRes"
																},
																"name": "AdminNotificationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
															"qualifiedName": "AdminPostNotificationsNotificationResendReq"
														},
														"name": "AdminPostNotificationsNotificationResendReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15183,
									"name": "useAdminNotifications",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15184,
											"name": "useAdminNotifications",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notifications. The notifications can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`event_name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`resource_type`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe notifications can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications({\n    expand: \"provider\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { \n    notifications, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotifications({\n    expand: \"provider\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15185,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved notifications."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/list-notifications.d.ts",
															"qualifiedName": "AdminGetNotificationsParams"
														},
														"name": "AdminGetNotificationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15186,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsListRes"
																		},
																		"name": "AdminNotificationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notifications"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15187,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15188,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15188
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15189,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15194,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15193,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15190,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15191,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15192,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15194,
																		15193,
																		15190,
																		15191,
																		15192
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15195,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15200,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15199,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15196,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15197,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15198,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15200,
																		15199,
																		15196,
																		15197,
																		15198
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15201,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15206,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15205,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15202,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15203,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15204,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15206,
																		15205,
																		15202,
																		15203,
																		15204
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15207,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15212,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15211,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15208,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15209,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15210,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15212,
																		15211,
																		15208,
																		15209,
																		15210
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15213,
										15183
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15183
									]
								},
								{
									"title": "Mutations",
									"children": [
										15213
									]
								}
							]
						},
						{
							"id": 14060,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order Edit API Routes](https://docs.medusajs.com/api/admin#order-edits).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can edit an order to remove, add, or update an item's quantity. When an admin edits an order, they're stored as an "
									},
									{
										"kind": "code",
										"text": "`OrderEdit`"
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to edit an order](https://docs.medusajs.com/modules/orders/admin/edit-order)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15265,
									"name": "useAdminCreateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15266,
											"name": "useAdminCreateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateOrderEdit } from \"medusa-react\"\n\nconst CreateOrderEdit = () => {\n  const createOrderEdit = useAdminCreateOrderEdit()\n\n  const handleCreateOrderEdit = (orderId: string) => {\n    createOrderEdit.mutate({\n      order_id: orderId,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.id)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default CreateOrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15267,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsReq"
																},
																"name": "AdminPostOrderEditsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsReq"
														},
														"name": "AdminPostOrderEditsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15268,
									"name": "useAdminDeleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15269,
											"name": "useAdminDeleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an order edit. Only order edits that have the status "
													},
													{
														"kind": "code",
														"text": "`created`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const deleteOrderEdit = useAdminDeleteOrderEdit(\n    orderEditId\n  )\n  \n  const handleDelete = () => {\n    deleteOrderEdit.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15270,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Order Edit's ID"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15271,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15272,
									"name": "useAdminDeleteOrderEditItemChange",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15273,
											"name": "useAdminDeleteOrderEditItemChange",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item change that indicates the addition, deletion, or update of a line item in the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEditItemChange } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemChangeId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemChangeId\n}: Props) => {\n  const deleteItemChange = useAdminDeleteOrderEditItemChange(\n    orderEditId, \n    itemChangeId\n  )\n  \n  const handleDeleteItemChange = () => {\n    deleteItemChange.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15274,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15275,
													"name": "itemChangeId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item change's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15276,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																		},
																		"name": "AdminOrderEditItemChangeDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																},
																"name": "AdminOrderEditItemChangeDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15277,
									"name": "useAdminOrderEditUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15278,
											"name": "useAdminOrderEditUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates or updates a line item change in the order edit that indicates addition, deletion, or update of a line item \ninto an original order. Line item changes are only reflected on the original order after the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const updateLineItem = useAdminOrderEditUpdateLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleUpdateLineItem = (quantity: number) => {\n    updateLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15279,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15280,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15281,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15282,
									"name": "useAdminOrderEditDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15283,
											"name": "useAdminOrderEditDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates deleting an item in the original order. \nThe item in the original order will not be deleted until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditLineItem = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const removeLineItem = useAdminOrderEditDeleteLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleRemoveLineItem = () => {\n    removeLineItem.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.changes)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditLineItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15284,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15285,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15286,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15287,
									"name": "useAdminUpdateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15288,
											"name": "useAdminUpdateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const updateOrderEdit = useAdminUpdateOrderEdit(\n    orderEditId, \n  )\n  \n  const handleUpdate = (\n    internalNote: string\n  ) => {\n    updateOrderEdit.mutate({\n      internal_note: internalNote\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.internal_note)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15289,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15290,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsOrderEditReq"
																},
																"name": "AdminPostOrderEditsOrderEditReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsOrderEditReq"
														},
														"name": "AdminPostOrderEditsOrderEditReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15291,
									"name": "useAdminOrderEditAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15292,
											"name": "useAdminOrderEditAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates adding an item in the original order. \nThe item will not be added to the original order until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const addLineItem = useAdminOrderEditAddLineItem(\n    orderEditId\n  )\n\n  const handleAddLineItem = \n    (quantity: number, variantId: string) => {\n      addLineItem.mutate({\n        quantity,\n        variant_id: variantId,\n      }, {\n        onSuccess: ({ order_edit }) => {\n          console.log(order_edit.changes)\n        }\n      })\n    }\n  \n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15293,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15294,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15295,
									"name": "useAdminRequestOrderEditConfirmation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15296,
											"name": "useAdminRequestOrderEditConfirmation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests customer confirmation of an order edit. This would emit the event "
													},
													{
														"kind": "code",
														"text": "`order-edit.requested`"
													},
													{
														"kind": "text",
														"text": " which Notification Providers listen to and send\na notification to the customer about the order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRequestOrderEditConfirmation,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const requestOrderConfirmation = \n    useAdminRequestOrderEditConfirmation(\n      orderEditId\n    )\n  \n  const handleRequestConfirmation = () => {\n    requestOrderConfirmation.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.requested_at, \n          order_edit.requested_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15297,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15298,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15299,
									"name": "useAdminCancelOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15300,
											"name": "useAdminCancelOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCancelOrderEdit,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const cancelOrderEdit = \n    useAdminCancelOrderEdit(\n      orderEditId\n    )\n  \n  const handleCancel = () => {\n    cancelOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.id\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15301,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15302,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15303,
									"name": "useAdminConfirmOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15304,
											"name": "useAdminConfirmOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook confirms an order edit. This will reflect the changes in the order edit on the associated order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const confirmOrderEdit = useAdminConfirmOrderEdit(\n    orderEditId\n  )\n  \n  const handleConfirmOrderEdit = () => {\n    confirmOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.confirmed_at,\n          order_edit.confirmed_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15305,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15306,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15218,
									"name": "useAdminOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15219,
											"name": "useAdminOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order edit by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(\n    orderEditId,\n    {\n      expand: \"order\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15220,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15221,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order edit."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/get-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsOrderEditParams"
														},
														"name": "GetOrderEditsOrderEditParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15222,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15223,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15225,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15224,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15225,
																		15224
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15226,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15228,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15227,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15228,
																		15227
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15229,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15231,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15230,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15231,
																		15230
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15232,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15234,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15233,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15234,
																		15233
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15235,
									"name": "useAdminOrderEdits",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15236,
											"name": "useAdminOrderEdits",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of order edits. The order edits can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`order_id`"
													},
													{
														"kind": "text",
														"text": " passed to the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe order edits can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits({\n    expand: \"order\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { \n    order_edits,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrderEdits({\n    expand: \"order\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15237,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to retrieved order edits."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/list-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsParams"
														},
														"name": "GetOrderEditsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15238,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsListRes"
																		},
																		"name": "AdminOrderEditsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15239,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15240,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15240
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15241,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15246,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15245,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15242,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15243,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15244,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15246,
																		15245,
																		15242,
																		15243,
																		15244
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15247,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15252,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15251,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15248,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15249,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15250,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15252,
																		15251,
																		15248,
																		15249,
																		15250
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15258,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15257,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15254,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15255,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15256,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15258,
																		15257,
																		15254,
																		15255,
																		15256
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15259,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15264,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15263,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15260,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15261,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15262,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15264,
																		15263,
																		15260,
																		15261,
																		15262
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15265,
										15268,
										15272,
										15277,
										15282,
										15287,
										15291,
										15295,
										15299,
										15303,
										15218,
										15235
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15218,
										15235
									]
								},
								{
									"title": "Mutations",
									"children": [
										15265,
										15268,
										15272,
										15277,
										15282,
										15287,
										15291,
										15295,
										15299,
										15303
									]
								}
							]
						},
						{
							"id": 14061,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order API Routes](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nOrders are purchases made by customers, typically through a storefront using cart. Managing orders include managing fulfillment, payment, claims, reservations, and more.\n\nRelated Guide: [How to manage orders](https://docs.medusajs.com/modules/orders/admin/manage-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15383,
									"name": "useAdminUpdateOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15384,
											"name": "useAdminUpdateOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const updateOrder = useAdminUpdateOrder(\n    orderId\n  )\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.email)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15385,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15386,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReq"
																},
																"name": "AdminPostOrdersOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReq"
														},
														"name": "AdminPostOrdersOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15387,
									"name": "useAdminCancelOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15388,
											"name": "useAdminCancelOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order and change its status. This will also cancel any associated fulfillments and payments, \nand it may fail if the payment or fulfillment Provider is unable to cancel the payment/fulfillment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelOrder = useAdminCancelOrder(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15389,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15390,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15391,
									"name": "useAdminCompleteOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15392,
											"name": "useAdminCompleteOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes an order and change its status. A canceled order can't be completed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCompleteOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const completeOrder = useAdminCompleteOrder(\n    orderId\n  )\n  // ...\n\n  const handleComplete = () => {\n    completeOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15393,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15394,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15395,
									"name": "useAdminCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15396,
											"name": "useAdminCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures all the payments associated with an order. The payment of canceled orders can't be captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const capturePayment = useAdminCapturePayment(\n    orderId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capturePayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15397,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15398,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15399,
									"name": "useAdminRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15400,
											"name": "useAdminRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds an amount for an order. The amount must be less than or equal the "
													},
													{
														"kind": "code",
														"text": "`refundable_amount`"
													},
													{
														"kind": "text",
														"text": " of the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const refundPayment = useAdminRefundPayment(\n    orderId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: string\n  ) => {\n    refundPayment.mutate({\n      amount,\n      reason,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.refunds)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15401,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15402,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderRefundsReq"
																},
																"name": "AdminPostOrdersOrderRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderRefundsReq"
														},
														"name": "AdminPostOrdersOrderRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15403,
									"name": "useAdminCreateFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15404,
											"name": "useAdminCreateFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment of an Order using the fulfillment provider, and change the order's \nfulfillment status to either "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ", depending on\nwhether all the items were fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createFulfillment = useAdminCreateFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCreateFulfillment = (\n    itemId: string,\n    quantity: number\n  ) => {\n    createFulfillment.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15405,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15406,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
																},
																"name": "AdminPostOrdersOrderFulfillmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
														},
														"name": "AdminPostOrdersOrderFulfillmentsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15407,
									"name": "useAdminCancelFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15408,
											"name": "useAdminCancelFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelFulfillment = useAdminCancelFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate(fulfillmentId, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15409,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15410,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15411,
									"name": "useAdminCreateShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15412,
											"name": "useAdminCreateShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment and mark a fulfillment as shipped. This changes the order's fulfillment status to either \n"
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createShipment = useAdminCreateShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreate = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillment_status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15413,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15414,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShipmentReq"
																},
																"name": "AdminPostOrdersOrderShipmentReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShipmentReq"
														},
														"name": "AdminPostOrdersOrderShipmentReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15415,
									"name": "useAdminRequestReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15416,
											"name": "useAdminRequestReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests and create a return for items in an order. If the return shipping method is specified, it will be automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRequestReturn } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const requestReturn = useAdminRequestReturn(\n    orderId\n  )\n  // ...\n\n  const handleRequestingReturn = (\n    itemId: string,\n    quantity: number\n  ) => {\n    requestReturn.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity\n        }\n      ]\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15417,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15418,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReturnsReq"
																},
																"name": "AdminPostOrdersOrderReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReturnsReq"
														},
														"name": "AdminPostOrdersOrderReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15419,
									"name": "useAdminAddShippingMethod",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15420,
											"name": "useAdminAddShippingMethod",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to an order. If another shipping method exists with the same shipping profile, the previous shipping method will be replaced."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddShippingMethod } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const addShippingMethod = useAdminAddShippingMethod(\n    orderId\n  )\n  // ...\n\n  const handleAddShippingMethod = (\n    optionId: string,\n    price: number\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n      price\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.shipping_methods)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15421,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15422,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
																},
																"name": "AdminPostOrdersOrderShippingMethodsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
														},
														"name": "AdminPostOrdersOrderShippingMethodsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15423,
									"name": "useAdminArchiveOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15424,
											"name": "useAdminArchiveOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook archives an order and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminArchiveOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const archiveOrder = useAdminArchiveOrder(\n    orderId\n  )\n  // ...\n\n  const handleArchivingOrder = () => {\n    archiveOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15425,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15426,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15333,
									"name": "useAdminOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15334,
											"name": "useAdminOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`display_id`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The order can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { orders, isLoading } = useAdminOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can use the "
															},
															{
																"kind": "code",
																"text": "`query`"
															},
															{
																"kind": "text",
																"text": " parameter to pass filters and specify relations that should be retrieved within the orders. In addition,\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { \n    orders,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrders({\n    expand: \"customers\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15335,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/list-orders.d.ts",
															"qualifiedName": "AdminGetOrdersParams"
														},
														"name": "AdminGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15336,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersListRes"
																		},
																		"name": "AdminOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15337,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15338,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15338
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15339,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15344,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15343,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15340,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15341,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15342,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15344,
																		15343,
																		15340,
																		15341,
																		15342
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15345,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15350,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15349,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15346,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15347,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15348,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15350,
																		15349,
																		15346,
																		15347,
																		15348
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15351,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15356,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15355,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15352,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15353,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15354,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15356,
																		15355,
																		15352,
																		15353,
																		15354
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15362,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15361,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15358,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15359,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15360,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15362,
																		15361,
																		15358,
																		15359,
																		15360
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15363,
									"name": "useAdminOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15364,
											"name": "useAdminOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieve an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\nconst Order = (\n  orderId: string\n) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId, {\n    expand: \"customer\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15365,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15366,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15367,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 15368,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 15369,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "RequestQueryFields.expand"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@deprecated",
																									"content": []
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 15370,
																						"name": "fields",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "RequestQueryFields.fields"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							15369,
																							15370
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15371,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15373,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15372,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15373,
																		15372
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15374,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15376,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15375,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15376,
																		15375
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15377,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15379,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15378,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15379,
																		15378
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15380,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15382,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15381,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15382,
																		15381
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15383,
										15387,
										15391,
										15395,
										15399,
										15403,
										15407,
										15411,
										15415,
										15419,
										15423,
										15333,
										15363
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15333,
										15363
									]
								},
								{
									"title": "Mutations",
									"children": [
										15383,
										15387,
										15391,
										15395,
										15399,
										15403,
										15407,
										15411,
										15415,
										15419,
										15423
									]
								}
							]
						},
						{
							"id": 14062,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment Collection API Routes](https://docs.medusajs.com/api/admin#payment-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15444,
									"name": "useAdminDeletePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15445,
											"name": "useAdminDeletePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment collection. Only payment collections with the statuses "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`not_paid`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const deleteCollection = useAdminDeletePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15446,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15447,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionDeleteRes"
																		},
																		"name": "AdminPaymentCollectionDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionDeleteRes"
																},
																"name": "AdminPaymentCollectionDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15448,
									"name": "useAdminUpdatePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15449,
											"name": "useAdminUpdatePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a payment collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const updateCollection = useAdminUpdatePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleUpdate = (\n    description: string\n  ) => {\n    updateCollection.mutate({\n      description\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.description)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15450,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15451,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
																	"qualifiedName": "AdminUpdatePaymentCollectionsReq"
																},
																"name": "AdminUpdatePaymentCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
															"qualifiedName": "AdminUpdatePaymentCollectionsReq"
														},
														"name": "AdminUpdatePaymentCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15452,
									"name": "useAdminMarkPaymentCollectionAsAuthorized",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15453,
											"name": "useAdminMarkPaymentCollectionAsAuthorized",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sets the status of a payment collection as "
													},
													{
														"kind": "code",
														"text": "`authorized`"
													},
													{
														"kind": "text",
														"text": ". This will also change the "
													},
													{
														"kind": "code",
														"text": "`authorized_amount`"
													},
													{
														"kind": "text",
														"text": " of the payment collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminMarkPaymentCollectionAsAuthorized } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const markAsAuthorized = useAdminMarkPaymentCollectionAsAuthorized(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorization = () => {\n    markAsAuthorized.mutate(void 0, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15454,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15455,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15428,
									"name": "useAdminPaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15429,
											"name": "useAdminPaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const { \n    payment_collection, \n    isLoading, \n  } = useAdminPaymentCollection(paymentCollectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15430,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15431,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15432,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15434,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15433,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15434,
																		15433
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15435,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15437,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15436,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15437,
																		15436
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15438,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15440,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15439,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15440,
																		15439
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15441,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15443,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15442,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15443,
																		15442
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15444,
										15448,
										15452,
										15428
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15428
									]
								},
								{
									"title": "Mutations",
									"children": [
										15444,
										15448,
										15452
									]
								}
							]
						},
						{
							"id": 14063,
							"name": "Payments",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment API Routes](https://docs.medusajs.com/api/admin#payments).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA payment can be related to an order, swap, return, or more. It can be captured or refunded."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15473,
									"name": "useAdminPaymentsCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15474,
											"name": "useAdminPaymentsCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures a payment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentsCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const capture = useAdminPaymentsCapturePayment(\n    paymentId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capture.mutate(void 0, {\n      onSuccess: ({ payment }) => {\n        console.log(payment.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15475,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15476,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminPaymentRes"
																},
																"name": "AdminPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15477,
									"name": "useAdminPaymentsRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15478,
											"name": "useAdminPaymentsRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds a payment. The payment must be captured first."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { RefundReason } from \"@medusajs/medusa\"\nimport { useAdminPaymentsRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const refund = useAdminPaymentsRefundPayment(\n    paymentId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: RefundReason,\n    note: string\n  ) => {\n    refund.mutate({\n      amount,\n      reason,\n      note\n    }, {\n      onSuccess: ({ refund }) => {\n        console.log(refund.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15479,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15480,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminRefundRes"
																		},
																		"name": "AdminRefundRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
																	"qualifiedName": "AdminPostPaymentRefundsReq"
																},
																"name": "AdminPostPaymentRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminRefundRes"
																},
																"name": "AdminRefundRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
															"qualifiedName": "AdminPostPaymentRefundsReq"
														},
														"name": "AdminPostPaymentRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15457,
									"name": "useAdminPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15458,
											"name": "useAdminPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a payment's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const { \n    payment, \n    isLoading, \n  } = useAdminPayment(paymentId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment && <span>{payment.amount}</span>}\n      \n    </div>\n  )\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15459,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15460,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "payment"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15461,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15463,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15462,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15463,
																		15462
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15464,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15466,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15465,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15466,
																		15465
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15467,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15469,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15468,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15469,
																		15468
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15470,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15472,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15471,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15472,
																		15471
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15473,
										15477,
										15457
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15457
									]
								},
								{
									"title": "Mutations",
									"children": [
										15473,
										15477
									]
								}
							]
						},
						{
							"id": 14064,
							"name": "Price Lists",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Price List API Routes](https://docs.medusajs.com/api/admin#price-lists).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA price list are special prices applied to products based on a set of conditions, such as customer group.\n\nRelated Guide: [How to manage price lists](https://docs.medusajs.com/modules/price-lists/admin/manage-price-lists)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15579,
									"name": "useAdminCreatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15580,
											"name": "useAdminCreatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  PriceListStatus, \n  PriceListType, \n} from \"@medusajs/medusa\"\nimport { useAdminCreatePriceList } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  description: string\n  type: PriceListType\n  status: PriceListStatus\n  prices: {\n    amount: number\n    variant_id: string\n    currency_code: string\n    max_quantity: number\n  }[]\n}\n\nconst CreatePriceList = () => {\n  const createPriceList = useAdminCreatePriceList()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createPriceList.mutate(data, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15581,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15582,
									"name": "useAdminUpdatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15583,
											"name": "useAdminUpdatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const updatePriceList = useAdminUpdatePriceList(priceListId)\n  // ...\n\n  const handleUpdate = (\n    endsAt: Date\n  ) => {\n    updatePriceList.mutate({\n      ends_at: endsAt,\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.ends_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15584,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15585,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15586,
									"name": "useAdminDeletePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15587,
											"name": "useAdminDeletePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a price list and its associated prices."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePriceList = useAdminDeletePriceList(priceListId)\n  // ...\n\n  const handleDelete = () => {\n    deletePriceList.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15588,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15589,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15590,
									"name": "useAdminCreatePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15591,
											"name": "useAdminCreatePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds or updates a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePriceListPrices } from \"medusa-react\"\n\ntype PriceData = {\n  amount: number\n  variant_id: string\n  currency_code: string\n}\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const addPrices = useAdminCreatePriceListPrices(priceListId)\n  // ...\n\n  const handleAddPrices = (prices: PriceData[]) => {\n    addPrices.mutate({\n      prices\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.prices)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15592,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15593,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
																	"qualifiedName": "AdminPostPriceListPricesPricesReq"
																},
																"name": "AdminPostPriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
															"qualifiedName": "AdminPostPriceListPricesPricesReq"
														},
														"name": "AdminPostPriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15594,
									"name": "useAdminDeletePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15595,
											"name": "useAdminDeletePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePrices = useAdminDeletePriceListPrices(priceListId)\n  // ...\n\n  const handleDeletePrices = (priceIds: string[]) => {\n    deletePrices.mutate({\n      price_ids: priceIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15596,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15597,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListPricesPricesReq"
																},
																"name": "AdminDeletePriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListPricesPricesReq"
														},
														"name": "AdminDeletePriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15598,
									"name": "useAdminDeletePriceListProductsPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15599,
											"name": "useAdminDeletePriceListProductsPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices associated with multiple products in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListProductsPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deleteProductsPrices = useAdminDeletePriceListProductsPrices(\n    priceListId\n  )\n  // ...\n\n  const handleDeleteProductsPrices = (productIds: string[]) => {\n    deleteProductsPrices.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15600,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15601,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
																},
																"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
														},
														"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15602,
									"name": "useAdminDeletePriceListProductPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15603,
											"name": "useAdminDeletePriceListProductPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListProductPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  productId: string\n}\n\nconst PriceListProduct = ({\n  priceListId,\n  productId\n}: Props) => {\n  const deleteProductPrices = useAdminDeletePriceListProductPrices(\n    priceListId,\n    productId\n  )\n  // ...\n\n  const handleDeleteProductPrices = () => {\n    deleteProductPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15604,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15605,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15606,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15607,
									"name": "useAdminDeletePriceListVariantPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15608,
											"name": "useAdminDeletePriceListVariantPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product variant in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListVariantPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  variantId: string\n}\n\nconst PriceListVariant = ({\n  priceListId,\n  variantId\n}: Props) => {\n  const deleteVariantPrices = useAdminDeletePriceListVariantPrices(\n    priceListId,\n    variantId\n  )\n  // ...\n\n  const handleDeleteVariantPrices = () => {\n    deleteVariantPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15609,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15610,
													"name": "variantId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15611,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15504,
									"name": "useAdminPriceLists",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15505,
											"name": "useAdminPriceLists",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of price lists. The price lists can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The price lists can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists({\n    expand: \"prices\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { \n    price_lists, \n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceLists({\n    expand: \"prices\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15506,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved price lists."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-lists.d.ts",
															"qualifiedName": "AdminGetPriceListPaginationParams"
														},
														"name": "AdminGetPriceListPaginationParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15507,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListsListRes"
																		},
																		"name": "AdminPriceListsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15508,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15509,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15509
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15510,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15515,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15514,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15511,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15512,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15513,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15515,
																		15514,
																		15511,
																		15512,
																		15513
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15516,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15521,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15520,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15517,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15518,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15519,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15521,
																		15520,
																		15517,
																		15518,
																		15519
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15522,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15527,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15526,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15523,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15524,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15525,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15527,
																		15526,
																		15523,
																		15524,
																		15525
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15528,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15533,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15532,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15529,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15530,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15531,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15533,
																		15532,
																		15529,
																		15530,
																		15531
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15534,
									"name": "useAdminPriceListProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15535,
											"name": "useAdminPriceListProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products in a price list:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { \n    products,\n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\",\n      limit: 20,\n      offset: 0\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15536,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the associated price list."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15537,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-list-products.d.ts",
															"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
														},
														"name": "AdminGetPriceListsPriceListProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15538,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_price_lists"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "products"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15539,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15544,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15543,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15540,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15541,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15542,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15544,
																		15543,
																		15540,
																		15541,
																		15542
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15545,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15550,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15549,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15546,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15547,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15548,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15550,
																		15549,
																		15546,
																		15547,
																		15548
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15551,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15556,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15555,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15552,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15553,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15554,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15556,
																		15555,
																		15552,
																		15553,
																		15554
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15557,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15562,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15561,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15558,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15559,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15560,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15562,
																		15561,
																		15558,
																		15559,
																		15560
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15563,
									"name": "useAdminPriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15564,
											"name": "useAdminPriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const { \n    price_list, \n    isLoading, \n  } = useAdminPriceList(priceListId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_list && <span>{price_list.name}</span>}\n    </div>\n  )\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15565,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15566,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15567,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15569,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15568,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15569,
																		15568
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15570,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15572,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15571,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15572,
																		15571
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15573,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15575,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15574,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15575,
																		15574
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15576,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15578,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15577,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15578,
																		15577
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15579,
										15582,
										15586,
										15590,
										15594,
										15598,
										15602,
										15607,
										15504,
										15534,
										15563
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15504,
										15534,
										15563
									]
								},
								{
									"title": "Mutations",
									"children": [
										15579,
										15582,
										15586,
										15590,
										15594,
										15598,
										15602,
										15607
									]
								}
							]
						},
						{
							"id": 14065,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Category API Routes](https://docs.medusajs.com/api/admin#product-categories).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nProducts can be categoriezed into categories. A product can be added into more than one category.\n\nRelated Guide: [How to manage product categories](https://docs.medusajs.com/modules/products/admin/manage-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15660,
									"name": "useAdminCreateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15661,
											"name": "useAdminCreateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductCategory } from \"medusa-react\"\n\nconst CreateCategory = () => {\n  const createCategory = useAdminCreateProductCategory()\n  // ...\n\n  const handleCreate = (\n    name: string\n  ) => {\n    createCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCategory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15662,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesReq"
																},
																"name": "AdminPostProductCategoriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesReq"
														},
														"name": "AdminPostProductCategoriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15663,
									"name": "useAdminUpdateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15664,
											"name": "useAdminUpdateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const updateCategory = useAdminUpdateProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15665,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15666,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryReq"
																},
																"name": "AdminPostProductCategoriesCategoryReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryReq"
														},
														"name": "AdminPostProductCategoriesCategoryReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15667,
									"name": "useAdminDeleteProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15668,
											"name": "useAdminDeleteProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product category. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteCategory = useAdminDeleteProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCategory.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15669,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15670,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15671,
									"name": "useAdminAddProductsToCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15672,
											"name": "useAdminAddProductsToCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const addProducts = useAdminAddProductsToCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleAddProducts = (\n    productIds: ProductsData[]\n  ) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15673,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15674,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15675,
									"name": "useAdminDeleteProductsFromCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15676,
											"name": "useAdminDeleteProductsFromCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductsFromCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDeleteProducts = (\n    productIds: ProductsData[]\n  ) => {\n    deleteProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15677,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15678,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15613,
									"name": "useAdminProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15614,
											"name": "useAdminProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product category:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15615,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/list-product-categories.d.ts",
															"qualifiedName": "AdminGetProductCategoriesParams"
														},
														"name": "AdminGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15616,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesListRes"
																		},
																		"name": "AdminProductCategoriesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15617,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15618,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15618
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15619,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15624,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15623,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15620,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15621,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15622,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15624,
																		15623,
																		15620,
																		15621,
																		15622
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15625,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15630,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15629,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15626,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15627,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15628,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15630,
																		15629,
																		15626,
																		15627,
																		15628
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15631,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15636,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15635,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15632,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15633,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15634,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15636,
																		15635,
																		15632,
																		15633,
																		15634
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15637,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15642,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15641,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15638,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15639,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15640,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15642,
																		15641,
																		15638,
																		15639,
																		15640
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15643,
									"name": "useAdminProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15644,
											"name": "useAdminProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId, {\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15645,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15646,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product category."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/get-product-category.d.ts",
															"qualifiedName": "AdminGetProductCategoryParams"
														},
														"name": "AdminGetProductCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15647,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15648,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15650,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15649,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15650,
																		15649
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15651,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15653,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15652,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15653,
																		15652
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15654,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15656,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15655,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15656,
																		15655
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15657,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15659,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15658,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15659,
																		15658
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15660,
										15663,
										15667,
										15671,
										15675,
										15613,
										15643
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15613,
										15643
									]
								},
								{
									"title": "Mutations",
									"children": [
										15660,
										15663,
										15667,
										15671,
										15675
									]
								}
							]
						},
						{
							"id": 14066,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Tag API Routes](https://docs.medusajs.com/api/admin#product-tags).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nProduct tags are string values created when you create or update a product with a new tag.\nProducts can have more than one tag, and products can share tags. This allows admins to associate products to similar tags that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15680,
									"name": "useAdminProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15681,
											"name": "useAdminProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    isLoading \n  } = useAdminProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTags({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15682,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/list-product-tags.d.ts",
															"qualifiedName": "AdminGetProductTagsParams"
														},
														"name": "AdminGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15683,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
																			"qualifiedName": "AdminProductTagsListRes"
																		},
																		"name": "AdminProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15684,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15685,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15685
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15686,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15691,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15690,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15687,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15688,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15689,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15691,
																		15690,
																		15687,
																		15688,
																		15689
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15692,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15697,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15696,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15693,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15694,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15695,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15697,
																		15696,
																		15693,
																		15694,
																		15695
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15698,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15703,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15702,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15699,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15700,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15701,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15703,
																		15702,
																		15699,
																		15700,
																		15701
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15704,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15709,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15708,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15705,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15706,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15707,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15709,
																		15708,
																		15705,
																		15706,
																		15707
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15680
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15680
									]
								}
							]
						},
						{
							"id": 14067,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Type API Routes](https://docs.medusajs.com/api/admin#product-types).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nProduct types are string values created when you create or update a product with a new type.\nProducts can have one type, and products can share types. This allows admins to associate products with a type that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15711,
									"name": "useAdminProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15712,
											"name": "useAdminProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    isLoading \n  } = useAdminProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15713,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/list-product-types.d.ts",
															"qualifiedName": "AdminGetProductTypesParams"
														},
														"name": "AdminGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15714,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
																			"qualifiedName": "AdminProductTypesListRes"
																		},
																		"name": "AdminProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15715,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15716,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15716
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15717,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15722,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15721,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15718,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15719,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15720,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15722,
																		15721,
																		15718,
																		15719,
																		15720
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15723,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15728,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15727,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15724,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15725,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15726,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15728,
																		15727,
																		15724,
																		15725,
																		15726
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15729,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15734,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15733,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15730,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15731,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15732,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15734,
																		15733,
																		15730,
																		15731,
																		15732
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15735,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15740,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15739,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15736,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15737,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15738,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15740,
																		15739,
																		15736,
																		15737,
																		15738
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15711
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15711
									]
								}
							]
						},
						{
							"id": 14068,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product API Routes](https://docs.medusajs.com/api/admin#products).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-gift-card-product) in a store.\n\nRelated Guide: [How to manage products](https://docs.medusajs.com/modules/products/admin/manage-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15863,
									"name": "useAdminCreateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15864,
											"name": "useAdminCreateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a new Product. This hook can also be used to create a gift card if the "
													},
													{
														"kind": "code",
														"text": "`is_giftcard`"
													},
													{
														"kind": "text",
														"text": " field is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProduct } from \"medusa-react\"\n\ntype CreateProductData = {\n  title: string\n  is_giftcard: boolean\n  discountable: boolean\n  options: {\n    title: string\n  }[]\n  variants: {\n    title: string\n    prices: {\n      amount: number\n      currency_code :string\n    }[]\n    options: {\n      value: string\n    }[]\n  }[],\n  collection_id: string\n  categories: {\n    id: string\n  }[]\n  type: {\n    value: string\n  }\n  tags: {\n    value: string\n  }[]\n}\n\nconst CreateProduct = () => {\n  const createProduct = useAdminCreateProduct()\n  // ...\n\n  const handleCreate = (productData: CreateProductData) => {\n    createProduct.mutate(productData, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15865,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
																	"qualifiedName": "AdminPostProductsReq"
																},
																"name": "AdminPostProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
															"qualifiedName": "AdminPostProductsReq"
														},
														"name": "AdminPostProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15866,
									"name": "useAdminUpdateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15867,
											"name": "useAdminUpdateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const updateProduct = useAdminUpdateProduct(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateProduct.mutate({\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15868,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15869,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
																	"qualifiedName": "AdminPostProductsProductReq"
																},
																"name": "AdminPostProductsProductReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
															"qualifiedName": "AdminPostProductsProductReq"
														},
														"name": "AdminPostProductsProductReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15870,
									"name": "useAdminDeleteProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15871,
											"name": "useAdminDeleteProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product and its associated product variants and options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const deleteProduct = useAdminDeleteProduct(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteProduct.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15872,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15873,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteRes"
																		},
																		"name": "AdminProductsDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteRes"
																},
																"name": "AdminProductsDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15874,
									"name": "useAdminCreateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15875,
											"name": "useAdminCreateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product variant associated with a product. Each product variant must have a unique combination of product option values."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateVariant } from \"medusa-react\"\n\ntype CreateVariantData = {\n  title: string\n  prices: {\n    amount: number\n    currency_code: string\n  }[]\n  options: {\n    option_id: string\n    value: string\n  }[]\n}\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductVariant = ({ productId }: Props) => {\n  const createVariant = useAdminCreateVariant(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    variantData: CreateVariantData\n  ) => {\n    createVariant.mutate(variantData, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15876,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15877,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
																	"qualifiedName": "AdminPostProductsProductVariantsReq"
																},
																"name": "AdminPostProductsProductVariantsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
															"qualifiedName": "AdminPostProductsProductVariantsReq"
														},
														"name": "AdminPostProductsProductVariantsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15881,
									"name": "useAdminUpdateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15882,
											"name": "useAdminUpdateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const updateVariant = useAdminUpdateVariant(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateVariant.mutate({\n      variant_id: variantId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15883,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15884,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 15878,
																"name": "AdminUpdateVariantReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 15878,
														"name": "AdminUpdateVariantReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15885,
									"name": "useAdminDeleteVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15886,
											"name": "useAdminDeleteVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product variant to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const deleteVariant = useAdminDeleteVariant(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteVariant.mutate(variantId, {\n      onSuccess: ({ variant_id, object, deleted, product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15887,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15888,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteVariantRes"
																		},
																		"name": "AdminProductsDeleteVariantRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteVariantRes"
																},
																"name": "AdminProductsDeleteVariantRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15889,
									"name": "useAdminCreateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15890,
											"name": "useAdminCreateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a product option to a product."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductOption = ({ productId }: Props) => {\n  const createOption = useAdminCreateProductOption(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    title: string\n  ) => {\n    createOption.mutate({\n      title\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15891,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15892,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
																	"qualifiedName": "AdminPostProductsProductOptionsReq"
																},
																"name": "AdminPostProductsProductOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
															"qualifiedName": "AdminPostProductsProductOptionsReq"
														},
														"name": "AdminPostProductsProductOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15896,
									"name": "useAdminUpdateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15897,
											"name": "useAdminUpdateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const updateOption = useAdminUpdateProductOption(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateOption.mutate({\n      option_id: optionId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15898,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15899,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 15893,
																"name": "AdminUpdateProductOptionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 15893,
														"name": "AdminUpdateProductOptionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15900,
									"name": "useAdminDeleteProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15901,
											"name": "useAdminDeleteProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product option. If there are product variants that use this product option, \nthey must be deleted before deleting the product option."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product option to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const deleteOption = useAdminDeleteProductOption(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteOption.mutate(optionId, {\n      onSuccess: ({ option_id, object, deleted, product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15902,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15903,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteOptionRes"
																		},
																		"name": "AdminProductsDeleteOptionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteOptionRes"
																},
																"name": "AdminProductsDeleteOptionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15764,
									"name": "useAdminProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15765,
											"name": "useAdminProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed in\nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts({\n    expand: \"images\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const {\n    products,\n    limit,\n    offset,\n    isLoading\n  } = useAdminProducts({\n    expand: \"images\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15766,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/list-products.d.ts",
															"qualifiedName": "AdminGetProductsParams"
														},
														"name": "AdminGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15767,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15768,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15769,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15769
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15770,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15775,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15774,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15771,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15772,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15773,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15775,
																		15774,
																		15771,
																		15772,
																		15773
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15776,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15781,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15780,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15777,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15778,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15779,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15781,
																		15780,
																		15777,
																		15778,
																		15779
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15782,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15787,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15786,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15783,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15784,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15785,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15787,
																		15786,
																		15783,
																		15784,
																		15785
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15788,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15793,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15792,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 15789,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15790,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15791,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15793,
																		15792,
																		15789,
																		15790,
																		15791
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15794,
									"name": "useAdminProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15795,
											"name": "useAdminProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const {\n    product,\n    isLoading,\n  } = useAdminProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n\n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15796,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15797,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/get-product.d.ts",
															"qualifiedName": "AdminGetProductParams"
														},
														"name": "AdminGetProductParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15798,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15799,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15801,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15800,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15801,
																		15800
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15802,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15804,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15803,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15804,
																		15803
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15805,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15807,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15806,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15807,
																		15806
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15808,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15810,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15809,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15810,
																		15809
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15840,
									"name": "useAdminProductTagUsage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15841,
											"name": "useAdminProductTagUsage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Product Tags with how many times each is used in products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProductTagUsage } from \"medusa-react\"\n\nconst ProductTags = (productId: string) => {\n  const { tags, isLoading } = useAdminProductTagUsage()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tags && !tags.length && <span>No Product Tags</span>}\n      {tags && tags.length > 0 && (\n        <ul>\n          {tags.map((tag) => (\n            <li key={tag.id}>{tag.value} - {tag.usage_count}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15842,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListTagsRes"
																		},
																		"name": "AdminProductsListTagsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15843,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15847,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15844,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 15845,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 15846,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									15846
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15847,
																		15844
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15848,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15852,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15849,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 15850,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 15851,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									15851
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15852,
																		15849
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15853,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15857,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15854,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 15855,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 15856,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									15856
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15857,
																		15854
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15858,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15862,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15859,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 15860,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 15861,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									15861
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15862,
																		15859
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15863,
										15866,
										15870,
										15874,
										15881,
										15885,
										15889,
										15896,
										15900,
										15764,
										15794,
										15840
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15764,
										15794,
										15840
									]
								},
								{
									"title": "Mutations",
									"children": [
										15863,
										15866,
										15870,
										15874,
										15881,
										15885,
										15889,
										15896,
										15900
									]
								}
							]
						},
						{
							"id": 14069,
							"name": "Publishable API Keys",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Publishable API Key API Routes](https://docs.medusajs.com/api/admin#publishable-api-keys).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nPublishable API Keys can be used to scope Store API calls with an API key, determining what resources are retrieved when querying the API.\nFor example, a publishable API key can be associated with one or more sales channels.\n\nWhen it is passed in the header of a request to the List Product store API Route,\nthe sales channels are inferred from the key and only products associated with those sales channels are retrieved.\n\nAdmins can manage publishable API keys and their associated resources. Currently, only Sales Channels are supported as a resource.\n\nRelated Guide: [How to manage publishable API keys](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 15990,
									"name": "useAdminCreatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15991,
											"name": "useAdminCreatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePublishableApiKey } from \"medusa-react\"\n\nconst CreatePublishableApiKey = () => {\n  const createKey = useAdminCreatePublishableApiKey()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15992,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysReq"
																},
																"name": "AdminPostPublishableApiKeysReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysReq"
														},
														"name": "AdminPostPublishableApiKeysReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15993,
									"name": "useAdminUpdatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15994,
											"name": "useAdminUpdatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const updateKey = useAdminUpdatePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15995,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15996,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
																},
																"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
														},
														"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15997,
									"name": "useAdminDeletePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15998,
											"name": "useAdminDeletePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a publishable API key. Associated resources, such as sales channels, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteKey = useAdminDeletePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteKey.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15999,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16000,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16001,
									"name": "useAdminRevokePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16002,
											"name": "useAdminRevokePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook revokes a publishable API key. Revoking the publishable API Key can't be undone, and the key can't be used in future requests."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRevokePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const revokeKey = useAdminRevokePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleRevoke = () => {\n    revokeKey.mutate(void 0, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.revoked_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16003,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16004,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16005,
									"name": "useAdminAddPublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16006,
											"name": "useAdminAddPublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of sales channels to a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport {\n  useAdminAddPublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const addSalesChannels = \n    useAdminAddPublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleAdd = (salesChannelId: string) => {\n    addSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16007,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16008,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16009,
									"name": "useAdminRemovePublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16010,
											"name": "useAdminRemovePublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of sales channels from a publishable API key. This doesn't delete the sales channels and only \nremoves the association between them and the publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemovePublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteSalesChannels = \n    useAdminRemovePublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleDelete = (salesChannelId: string) => {\n    deleteSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16011,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16012,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
																	"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
															"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 15927,
									"name": "useAdminPublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15928,
											"name": "useAdminPublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKey,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const { publishable_api_key, isLoading } = \n    useAdminPublishableApiKey(\n      publishableApiKeyId\n    )\n \n    \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_key && <span>{publishable_api_key.title}</span>}\n    </div>\n  )\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15929,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15930,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15931,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15933,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15932,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15933,
																		15932
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15934,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15936,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15935,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15936,
																		15935
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15937,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15939,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15938,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15939,
																		15938
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15940,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15942,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15941,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15942,
																		15941
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15943,
									"name": "useAdminPublishableApiKeys",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15944,
											"name": "useAdminPublishableApiKeys",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of publishable API keys. The publishable API keys can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". \nThe publishable API keys can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list publishable API keys:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { publishable_api_keys, isLoading } = \n    useAdminPublishableApiKeys()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { \n    publishable_api_keys, \n    limit,\n    offset,\n    isLoading\n  } = \n    useAdminPublishableApiKeys({\n      limit: 50,\n      offset: 0\n    })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15945,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved publishable API keys."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-keys.d.ts",
															"qualifiedName": "GetPublishableApiKeysParams"
														},
														"name": "GetPublishableApiKeysParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15946,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListRes"
																		},
																		"name": "AdminPublishableApiKeysListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 15947,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 15948,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						15948
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15949,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15954,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15953,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15950,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15951,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15952,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15954,
																		15953,
																		15950,
																		15951,
																		15952
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15955,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15960,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15959,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15956,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15957,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15958,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15960,
																		15959,
																		15956,
																		15957,
																		15958
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15961,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15966,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15965,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15962,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15963,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15964,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15966,
																		15965,
																		15962,
																		15963,
																		15964
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15967,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15972,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15971,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 15968,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15969,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 15970,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15972,
																		15971,
																		15968,
																		15969,
																		15970
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 15973,
									"name": "useAdminPublishableApiKeySalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 15974,
											"name": "useAdminPublishableApiKeySalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook lists the sales channels associated with a publishable API key. The sales channels can be \nfiltered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKeySalesChannels,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst SalesChannels = ({\n  publishableApiKeyId\n}: Props) => {\n  const { sales_channels, isLoading } = \n    useAdminPublishableApiKeySalesChannels(\n      publishableApiKeyId\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 15975,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API Key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 15976,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.d.ts",
															"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
														},
														"name": "GetPublishableApiKeySalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 15977,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
																		},
																		"name": "AdminPublishableApiKeysListSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_publishable_api_keys"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "sales_channels"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 15978,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15980,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15979,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15980,
																		15979
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15981,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15983,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15982,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15983,
																		15982
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15984,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15986,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15985,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15986,
																		15985
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15987,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15989,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 15988,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15989,
																		15988
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										15990,
										15993,
										15997,
										16001,
										16005,
										16009,
										15927,
										15943,
										15973
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										15927,
										15943,
										15973
									]
								},
								{
									"title": "Mutations",
									"children": [
										15990,
										15993,
										15997,
										16001,
										16005,
										16009
									]
								}
							]
						},
						{
							"id": 14070,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Region API Routes](https://docs.medusajs.com/api/admin#regions).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nAdmins can manage these regions, their providers, and more.\n\nRelated Guide: [How to manage regions](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16076,
									"name": "useAdminCreateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16077,
											"name": "useAdminCreateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateRegion } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  currency_code: string\n  tax_rate: number\n  payment_providers: string[]\n  fulfillment_providers: string[]\n  countries: string[]\n}\n\nconst CreateRegion = () => {\n  const createRegion = useAdminCreateRegion()\n  // ...\n\n  const handleCreate = (regionData: CreateData) => {\n    createRegion.mutate(regionData, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateRegion\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16078,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
																	"qualifiedName": "AdminPostRegionsReq"
																},
																"name": "AdminPostRegionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
															"qualifiedName": "AdminPostRegionsReq"
														},
														"name": "AdminPostRegionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16079,
									"name": "useAdminUpdateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16080,
											"name": "useAdminUpdateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const updateRegion = useAdminUpdateRegion(regionId)\n  // ...\n\n  const handleUpdate = (\n    countries: string[]\n  ) => {\n    updateRegion.mutate({\n      countries,\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16081,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16082,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionReq"
																},
																"name": "AdminPostRegionsRegionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
															"qualifiedName": "AdminPostRegionsRegionReq"
														},
														"name": "AdminPostRegionsRegionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16083,
									"name": "useAdminDeleteRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16084,
											"name": "useAdminDeleteRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a region. Associated resources, such as providers or currencies are not deleted. Associated tax rates are deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const deleteRegion = useAdminDeleteRegion(regionId)\n  // ...\n\n  const handleDelete = () => {\n    deleteRegion.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16085,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16086,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16087,
									"name": "useAdminRegionAddCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16088,
											"name": "useAdminRegionAddCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a country to the list of countries in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionAddCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addCountry = useAdminRegionAddCountry(regionId)\n  // ...\n\n  const handleAddCountry = (\n    countryCode: string\n  ) => {\n    addCountry.mutate({\n      country_code: countryCode\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16089,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16090,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionCountriesReq"
																},
																"name": "AdminPostRegionsRegionCountriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
															"qualifiedName": "AdminPostRegionsRegionCountriesReq"
														},
														"name": "AdminPostRegionsRegionCountriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16091,
									"name": "useAdminRegionRemoveCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16092,
											"name": "useAdminRegionRemoveCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a country from the list of countries in a region. The country will still be available in the system, and it can be used in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the country to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionRemoveCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeCountry = useAdminRegionRemoveCountry(regionId)\n  // ...\n\n  const handleRemoveCountry = (\n    countryCode: string\n  ) => {\n    removeCountry.mutate(countryCode, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16093,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16094,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16095,
									"name": "useAdminRegionAddFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16096,
											"name": "useAdminRegionAddFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a fulfillment provider to the list of fulfullment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addFulfillmentProvider = \n    useAdminRegionAddFulfillmentProvider(regionId)\n  // ...\n\n  const handleAddFulfillmentProvider = (\n    providerId: string\n  ) => {\n    addFulfillmentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16097,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16098,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
																},
																"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
														},
														"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16099,
									"name": "useAdminRegionDeleteFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16100,
											"name": "useAdminRegionDeleteFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a fulfillment provider from a region. The fulfillment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment provider's ID to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeleteFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeFulfillmentProvider = \n    useAdminRegionDeleteFulfillmentProvider(regionId)\n  // ...\n\n  const handleRemoveFulfillmentProvider = (\n    providerId: string\n  ) => {\n    removeFulfillmentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16101,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16102,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16103,
									"name": "useAdminRegionAddPaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16104,
											"name": "useAdminRegionAddPaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a payment provider to the list of payment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddPaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addPaymentProvider = \n    useAdminRegionAddPaymentProvider(regionId)\n  // ...\n\n  const handleAddPaymentProvider = (\n    providerId: string\n  ) => {\n    addPaymentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16105,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16106,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
																},
																"name": "AdminPostRegionsRegionPaymentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
														},
														"name": "AdminPostRegionsRegionPaymentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16107,
									"name": "useAdminRegionDeletePaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16108,
											"name": "useAdminRegionDeletePaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment provider from a region. The payment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the payment provider to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeletePaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removePaymentProvider = \n    useAdminRegionDeletePaymentProvider(regionId)\n  // ...\n\n  const handleRemovePaymentProvider = (\n    providerId: string\n  ) => {\n    removePaymentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16109,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16110,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16014,
									"name": "useAdminRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16015,
											"name": "useAdminRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Regions. The regions can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe regions can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useAdminRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { \n    regions, \n    limit,\n    offset,\n    isLoading\n  } = useAdminRegions({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16016,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved regions."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/list-regions.d.ts",
															"qualifiedName": "AdminGetRegionsParams"
														},
														"name": "AdminGetRegionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16017,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsListRes"
																		},
																		"name": "AdminRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16018,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16019,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16019
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16020,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16025,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16024,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16021,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16022,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16023,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16025,
																		16024,
																		16021,
																		16022,
																		16023
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16026,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16031,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16030,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16027,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16028,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16029,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16031,
																		16030,
																		16027,
																		16028,
																		16029
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16032,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16037,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16036,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16033,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16034,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16035,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16037,
																		16036,
																		16033,
																		16034,
																		16035
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16038,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16043,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16042,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16039,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16040,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16041,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16043,
																		16042,
																		16039,
																		16040,
																		16041
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16044,
									"name": "useAdminRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16045,
											"name": "useAdminRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { region, isLoading } = useAdminRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16046,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16047,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16048,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16050,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16049,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16050,
																		16049
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16051,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16053,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16052,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16053,
																		16052
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16054,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16056,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16055,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16056,
																		16055
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16057,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16059,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16058,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16059,
																		16058
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16060,
									"name": "useAdminRegionFulfillmentOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16061,
											"name": "useAdminRegionFulfillmentOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of fulfillment options available in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionFulfillmentOptions\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { \n    fulfillment_options, \n    isLoading\n  } = useAdminRegionFulfillmentOptions(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {fulfillment_options && !fulfillment_options.length && (\n        <span>No Regions</span>\n      )}\n      {fulfillment_options && \n        fulfillment_options.length > 0 && (\n        <ul>\n          {fulfillment_options.map((option) => (\n            <li key={option.provider_id}>\n              {option.provider_id}\n            </li>\n          ))}\n        </ul>\n          )}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16062,
													"name": "regionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16063,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
																		},
																		"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16064,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16066,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16065,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16066,
																		16065
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16067,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16069,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16068,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16069,
																		16068
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16070,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16072,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16071,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16072,
																		16071
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16073,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16075,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16074,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16075,
																		16074
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16076,
										16079,
										16083,
										16087,
										16091,
										16095,
										16099,
										16103,
										16107,
										16014,
										16044,
										16060
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16014,
										16044,
										16060
									]
								},
								{
									"title": "Mutations",
									"children": [
										16076,
										16079,
										16083,
										16087,
										16091,
										16095,
										16099,
										16103,
										16107
									]
								}
							]
						},
						{
							"id": 14071,
							"name": "Reservations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Reservation API Routes](https://docs.medusajs.com/api/admin#reservations).\nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nReservations, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), \nare quantities of an item that are reserved, typically when an order is placed but not yet fulfilled.\nReservations can be associated with any resources, but commonly with line items of an order.\n\nRelated Guide: [How to manage item allocations in orders](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-item-allocations-in-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16111,
									"name": "useAdminCreateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16112,
											"name": "useAdminCreateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a reservation which can be associated with any resource, such as an order's line item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReservation } from \"medusa-react\"\n\nconst CreateReservation = () => {\n  const createReservation = useAdminCreateReservation()\n  // ...\n\n  const handleCreate = (\n    locationId: string,\n    inventoryItemId: string,\n    quantity: number\n  ) => {\n    createReservation.mutate({\n      location_id: locationId,\n      inventory_item_id: inventoryItemId,\n      quantity,\n    }, {\n      onSuccess: ({ reservation }) => {\n        console.log(reservation.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16113,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReq"
																},
																"name": "AdminPostReservationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReq"
														},
														"name": "AdminPostReservationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16114,
									"name": "useAdminUpdateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16115,
											"name": "useAdminUpdateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const updateReservation = useAdminUpdateReservation(\n    reservationId\n  )\n  // ...\n\n  const handleUpdate = (\n    quantity: number\n  ) => {\n    updateReservation.mutate({\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16116,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16117,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReservationReq"
																},
																"name": "AdminPostReservationsReservationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReservationReq"
														},
														"name": "AdminPostReservationsReservationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16118,
									"name": "useAdminDeleteReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16119,
											"name": "useAdminDeleteReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a reservation. Associated resources, such as the line item, will not be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const deleteReservation = useAdminDeleteReservation(\n    reservationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReservation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16120,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16121,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16123,
									"name": "useAdminReservations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16124,
											"name": "useAdminReservations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of reservations. The reservations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`quantity`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The reservations can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { reservations, isLoading } = useAdminReservations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations,\n    limit,\n    offset, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16125,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination parameters to apply on the retrieved reservations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/list-reservations.d.ts",
															"qualifiedName": "AdminGetReservationsParams"
														},
														"name": "AdminGetReservationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16126,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsListRes"
																		},
																		"name": "AdminReservationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16127,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16128,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16128
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16129,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16134,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16133,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16130,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16131,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16132,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16134,
																		16133,
																		16130,
																		16131,
																		16132
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16135,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16140,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16139,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16136,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16137,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16138,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16140,
																		16139,
																		16136,
																		16137,
																		16138
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16141,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16146,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16145,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16142,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16143,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16144,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16146,
																		16145,
																		16142,
																		16143,
																		16144
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16147,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16152,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16151,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16148,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16149,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16150,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16152,
																		16151,
																		16148,
																		16149,
																		16150
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16153,
									"name": "useAdminReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16154,
											"name": "useAdminReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const { reservation, isLoading } = useAdminReservation(\n    reservationId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservation && (\n        <span>{reservation.inventory_item_id}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16155,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16156,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16157,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16159,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16158,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16159,
																		16158
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16160,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16162,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16161,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16162,
																		16161
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16163,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16165,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16164,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16165,
																		16164
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16166,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16168,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16167,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16168,
																		16167
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16111,
										16114,
										16118,
										16123,
										16153
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										16111,
										16114,
										16118
									]
								},
								{
									"title": "Queries",
									"children": [
										16123,
										16153
									]
								}
							]
						},
						{
							"id": 14072,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return Reason API Routes](https://docs.medusajs.com/api/admin#return-reasons).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created.\nAdmins can manage available return reasons, and they can be used by both admins and customers when creating a return.\n\nRelated Guide: [How to manage return reasons](https://docs.medusajs.com/modules/orders/admin/manage-returns#manage-return-reasons)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16201,
									"name": "useAdminCreateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16202,
											"name": "useAdminCreateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReturnReason } from \"medusa-react\"\n\nconst CreateReturnReason = () => {\n  const createReturnReason = useAdminCreateReturnReason()\n  // ...\n\n  const handleCreate = (\n    label: string,\n    value: string\n  ) => {\n    createReturnReason.mutate({\n      label,\n      value,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16203,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReq"
																},
																"name": "AdminPostReturnReasonsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReq"
														},
														"name": "AdminPostReturnReasonsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16204,
									"name": "useAdminUpdateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16205,
											"name": "useAdminUpdateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const updateReturnReason = useAdminUpdateReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleUpdate = (\n    label: string\n  ) => {\n    updateReturnReason.mutate({\n      label,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.label)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16206,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16207,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReasonReq"
																},
																"name": "AdminPostReturnReasonsReasonReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReasonReq"
														},
														"name": "AdminPostReturnReasonsReasonReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16208,
									"name": "useAdminDeleteReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16209,
											"name": "useAdminDeleteReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const deleteReturnReason = useAdminDeleteReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReturnReason.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16210,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16211,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16170,
									"name": "useAdminReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16171,
											"name": "useAdminReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of return reasons."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { return_reasons, isLoading } = useAdminReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons && !return_reasons.length && (\n        <span>No Return Reasons</span>\n      )}\n      {return_reasons && return_reasons.length > 0 && (\n        <ul>\n          {return_reasons.map((reason) => (\n            <li key={reason.id}>\n              {reason.label}: {reason.value}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16172,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsListRes"
																		},
																		"name": "AdminReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16173,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16175,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16174,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16175,
																		16174
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16176,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16178,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16177,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16178,
																		16177
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16179,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16181,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16180,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16181,
																		16180
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16182,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16184,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16183,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16184,
																		16183
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16185,
									"name": "useAdminReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16186,
											"name": "useAdminReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { return_reason, isLoading } = useAdminReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16187,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16188,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16189,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16191,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16190,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16191,
																		16190
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16192,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16194,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16193,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16194,
																		16193
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16195,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16197,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16196,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16197,
																		16196
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16198,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16200,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16199,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16200,
																		16199
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16201,
										16204,
										16208,
										16170,
										16185
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16170,
										16185
									]
								},
								{
									"title": "Mutations",
									"children": [
										16201,
										16204,
										16208
									]
								}
							]
						},
						{
							"id": 14073,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return API Routes](https://docs.medusajs.com/api/admin#returns).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA return can be created by a customer or an admin to return items in an order.\nAdmins can manage these returns and change their state.\n\nRelated Guide: [How to manage returns](https://docs.medusajs.com/modules/orders/admin/manage-returns)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16240,
									"name": "useAdminReceiveReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16241,
											"name": "useAdminReceiveReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a return as received. This also updates the status of associated order, claim, or swap accordingly."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReceiveReturn } from \"medusa-react\"\n\ntype ReceiveReturnData = {\n  items: {\n    item_id: string\n    quantity: number\n  }[]\n}\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const receiveReturn = useAdminReceiveReturn(\n    returnId\n  )\n  // ...\n\n  const handleReceive = (data: ReceiveReturnData) => {\n    receiveReturn.mutate(data, {\n      onSuccess: ({ return: dataReturn }) => {\n        console.log(dataReturn.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16242,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16243,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsRes"
																		},
																		"name": "AdminReturnsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
																	"qualifiedName": "AdminPostReturnsReturnReceiveReq"
																},
																"name": "AdminPostReturnsReturnReceiveReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsRes"
																},
																"name": "AdminReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
															"qualifiedName": "AdminPostReturnsReturnReceiveReq"
														},
														"name": "AdminPostReturnsReturnReceiveReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16244,
									"name": "useAdminCancelReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16245,
											"name": "useAdminCancelReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a return as canceled. The return can be associated with an order, claim, or swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelReturn } from \"medusa-react\"\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const cancelReturn = useAdminCancelReturn(\n    returnId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelReturn.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16246,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16247,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsCancelRes"
																		},
																		"name": "AdminReturnsCancelRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsCancelRes"
																},
																"name": "AdminReturnsCancelRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16213,
									"name": "useAdminReturns",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16214,
											"name": "useAdminReturns",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Returns. The returns can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturns } from \"medusa-react\"\n\nconst Returns = () => {\n  const { returns, isLoading } = useAdminReturns()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {returns && !returns.length && (\n        <span>No Returns</span>\n      )}\n      {returns && returns.length > 0 && (\n        <ul>\n          {returns.map((returnData) => (\n            <li key={returnData.id}>\n              {returnData.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Returns\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16215,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsListRes"
																		},
																		"name": "AdminReturnsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_returns"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16216,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16221,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16220,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16217,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16218,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16219,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16221,
																		16220,
																		16217,
																		16218,
																		16219
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16222,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16227,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16226,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16223,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16224,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16225,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16227,
																		16226,
																		16223,
																		16224,
																		16225
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16228,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16233,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16232,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16229,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16230,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16231,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16233,
																		16232,
																		16229,
																		16230,
																		16231
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16234,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16239,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16238,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16235,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16236,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16237,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16239,
																		16238,
																		16235,
																		16236,
																		16237
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16240,
										16244,
										16213
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16213
									]
								},
								{
									"title": "Mutations",
									"children": [
										16240,
										16244
									]
								}
							]
						},
						{
							"id": 14074,
							"name": "Sales Channels",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Sales Channel API Routes](https://docs.medusajs.com/api/admin#sales-channels).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA sales channel indicates a channel where products can be sold in. For example, a webshop or a mobile app.\nAdmins can manage sales channels and the products available in them.\n\nRelated Guide: [How to manage sales channels](https://docs.medusajs.com/modules/sales-channels/admin/manage)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16295,
									"name": "useAdminCreateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16296,
											"name": "useAdminCreateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSalesChannel } from \"medusa-react\"\n\nconst CreateSalesChannel = () => {\n  const createSalesChannel = useAdminCreateSalesChannel()\n  // ...\n\n  const handleCreate = (name: string, description: string) => {\n    createSalesChannel.mutate({\n      name,\n      description,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16297,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsReq"
																},
																"name": "AdminPostSalesChannelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsReq"
														},
														"name": "AdminPostSalesChannelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16298,
									"name": "useAdminUpdateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16299,
											"name": "useAdminUpdateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const updateSalesChannel = useAdminUpdateSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleUpdate = (\n    is_disabled: boolean\n  ) => {\n    updateSalesChannel.mutate({\n      is_disabled,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.is_disabled)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16300,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16301,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
																},
																"name": "AdminPostSalesChannelsSalesChannelReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
														},
														"name": "AdminPostSalesChannelsSalesChannelReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16302,
									"name": "useAdminDeleteSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16303,
											"name": "useAdminDeleteSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a sales channel. Associated products, stock locations, and other resources are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteSalesChannel = useAdminDeleteSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteSalesChannel.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16304,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16305,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16306,
									"name": "useAdminDeleteProductsFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16307,
											"name": "useAdminDeleteProductsFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a sales channel. This doesn't delete the product. It only removes the \nassociation between the product and the sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductsFromSalesChannel, \n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDeleteProducts = (productId: string) => {\n    deleteProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16308,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16309,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16310,
									"name": "useAdminAddProductsToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16311,
											"name": "useAdminAddProductsToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addProducts = useAdminAddProductsToSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleAddProducts = (productId: string) => {\n    addProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16312,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16313,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminPostSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
															"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminPostSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16314,
									"name": "useAdminAddLocationToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16315,
											"name": "useAdminAddLocationToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook associates a stock location with a sales channel. It requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddLocationToSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addLocation = useAdminAddLocationToSalesChannel()\n  // ...\n\n  const handleAddLocation = (locationId: string) => {\n    addLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16316,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 16317,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 16318,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 16319,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				16318,
																				16319
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16320,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16321,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 16322,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16321,
																		16322
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16323,
									"name": "useAdminRemoveLocationFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16324,
											"name": "useAdminRemoveLocationFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a stock location from a sales channel. This only removes the association between the stock \nlocation and the sales channel. It does not delete the stock location. This hook requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveLocationFromSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const removeLocation = useAdminRemoveLocationFromSalesChannel()\n  // ...\n\n  const handleRemoveLocation = (locationId: string) => {\n    removeLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16325,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 16326,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 16327,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 16328,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				16327,
																				16328
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16329,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16330,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 16331,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16330,
																		16331
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16249,
									"name": "useAdminSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16250,
											"name": "useAdminSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const { \n    sales_channel, \n    isLoading, \n  } = useAdminSalesChannel(salesChannelId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channel && <span>{sales_channel.name}</span>}\n    </div>\n  )\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16251,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16252,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16255,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16254,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16255,
																		16254
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16256,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16258,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16257,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16258,
																		16257
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16259,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16261,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16260,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16261,
																		16260
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16262,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16264,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16263,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16264,
																		16263
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16265,
									"name": "useAdminSalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16266,
											"name": "useAdminSalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of sales channels. The sales channels can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The sales channels can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { sales_channels, isLoading } = useAdminSalesChannels()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16267,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/list-sales-channels.d.ts",
															"qualifiedName": "AdminGetSalesChannelsParams"
														},
														"name": "AdminGetSalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16268,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsListRes"
																		},
																		"name": "AdminSalesChannelsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16269,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16270,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16270
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16271,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16276,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16275,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16272,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16273,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16274,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16276,
																		16275,
																		16272,
																		16273,
																		16274
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16277,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16282,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16281,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16278,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16279,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16280,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16282,
																		16281,
																		16278,
																		16279,
																		16280
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16283,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16288,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16287,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16284,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16285,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16286,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16288,
																		16287,
																		16284,
																		16285,
																		16286
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16289,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16294,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16293,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16290,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16291,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16292,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16294,
																		16293,
																		16290,
																		16291,
																		16292
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16295,
										16298,
										16302,
										16306,
										16310,
										16314,
										16323,
										16249,
										16265
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16249,
										16265
									]
								},
								{
									"title": "Mutations",
									"children": [
										16295,
										16298,
										16302,
										16306,
										16310,
										16314,
										16323
									]
								}
							]
						},
						{
							"id": 14075,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Option API Routes](https://docs.medusajs.com/api/admin#shipping-options).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\nAdmins can create an unlimited number of shipping options, each associated with a shipping profile and fulfillment provider, among other resources.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16379,
									"name": "useAdminCreateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16380,
											"name": "useAdminCreateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingOption } from \"medusa-react\"\n\ntype CreateShippingOption = {\n  name: string\n  provider_id: string\n  data: Record<string, unknown>\n  price_type: string\n  amount: number\n}\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const createShippingOption = useAdminCreateShippingOption()\n  // ...\n\n  const handleCreate = (\n    data: CreateShippingOption\n  ) => {\n    createShippingOption.mutate({\n      ...data,\n      region_id: regionId\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16381,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsReq"
																},
																"name": "AdminPostShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsReq"
														},
														"name": "AdminPostShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16382,
									"name": "useAdminUpdateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16383,
											"name": "useAdminUpdateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const updateShippingOption = useAdminUpdateShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    requirements: {\n      id: string,\n      type: string,\n      amount: number\n    }[]\n  ) => {\n    updateShippingOption.mutate({\n      name,\n      requirements\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.requirements)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16384,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16385,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsOptionReq"
																},
																"name": "AdminPostShippingOptionsOptionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsOptionReq"
														},
														"name": "AdminPostShippingOptionsOptionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16386,
									"name": "useAdminDeleteShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16387,
											"name": "useAdminDeleteShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping option. Once deleted, it can't be used when creating orders or returns."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const deleteShippingOption = useAdminDeleteShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingOption.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16388,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16389,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16333,
									"name": "useAdminShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16334,
											"name": "useAdminShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": " \nor "
													},
													{
														"kind": "code",
														"text": "`is_return`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const {\n    shipping_options, \n    isLoading\n  } = useAdminShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No Shipping Options</span>\n      )}\n      {shipping_options && shipping_options.length > 0 && (\n        <ul>\n          {shipping_options.map((option) => (\n            <li key={option.id}>{option.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16335,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/list-shipping-options.d.ts",
															"qualifiedName": "AdminGetShippingOptionsParams"
														},
														"name": "AdminGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16336,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsListRes"
																		},
																		"name": "AdminShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16337,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16338,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16338
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16339,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16344,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16343,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16340,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16341,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16342,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16344,
																		16343,
																		16340,
																		16341,
																		16342
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16345,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16350,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16349,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16346,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16347,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16348,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16350,
																		16349,
																		16346,
																		16347,
																		16348
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16351,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16356,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16355,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16352,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16353,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16354,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16356,
																		16355,
																		16352,
																		16353,
																		16354
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16362,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16361,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16358,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16359,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16360,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16362,
																		16361,
																		16358,
																		16359,
																		16360
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16363,
									"name": "useAdminShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16364,
											"name": "useAdminShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const {\n    shipping_option, \n    isLoading\n  } = useAdminShippingOption(\n    shippingOptionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_option && <span>{shipping_option.name}</span>}\n    </div>\n  )\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16365,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16366,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16367,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16369,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16368,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16369,
																		16368
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16370,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16372,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16371,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16372,
																		16371
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16375,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16374,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16375,
																		16374
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16376,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16378,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16377,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16378,
																		16377
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16379,
										16382,
										16386,
										16333,
										16363
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16333,
										16363
									]
								},
								{
									"title": "Mutations",
									"children": [
										16379,
										16382,
										16386
									]
								}
							]
						},
						{
							"id": 14076,
							"name": "Shipping Profiles",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Profile API Routes](https://docs.medusajs.com/api/admin#shipping-profiles).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping profile is used to group products that can be shipped in the same manner.\nThey are created by the admin and they're not associated with a fulfillment provider.\n\nRelated Guide: [Shipping Profile architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16422,
									"name": "useAdminCreateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16423,
											"name": "useAdminCreateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping profile."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminCreateShippingProfile } from \"medusa-react\"\n\nconst CreateShippingProfile = () => {\n  const createShippingProfile = useAdminCreateShippingProfile()\n  // ...\n\n  const handleCreate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    createShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16424,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesReq"
																},
																"name": "AdminPostShippingProfilesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesReq"
														},
														"name": "AdminPostShippingProfilesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16425,
									"name": "useAdminUpdateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16426,
											"name": "useAdminUpdateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminUpdateShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const updateShippingProfile = useAdminUpdateShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    updateShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16427,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16428,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesProfileReq"
																},
																"name": "AdminPostShippingProfilesProfileReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesProfileReq"
														},
														"name": "AdminPostShippingProfilesProfileReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16429,
									"name": "useAdminDeleteShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16430,
											"name": "useAdminDeleteShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping profile. Associated shipping options are deleted as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const deleteShippingProfile = useAdminDeleteShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingProfile.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16431,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16432,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16391,
									"name": "useAdminShippingProfiles",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16392,
											"name": "useAdminShippingProfiles",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping profiles."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfiles } from \"medusa-react\"\n\nconst ShippingProfiles = () => {\n  const { \n    shipping_profiles, \n    isLoading\n  } = useAdminShippingProfiles()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profiles && !shipping_profiles.length && (\n        <span>No Shipping Profiles</span>\n      )}\n      {shipping_profiles && shipping_profiles.length > 0 && (\n        <ul>\n          {shipping_profiles.map((profile) => (\n            <li key={profile.id}>{profile.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfiles\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16393,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesListRes"
																		},
																		"name": "AdminShippingProfilesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16396,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16395,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16396,
																		16395
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16397,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16399,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16398,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16399,
																		16398
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16402,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16401,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16402,
																		16401
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16403,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16405,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16404,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16405,
																		16404
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16406,
									"name": "useAdminShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16407,
											"name": "useAdminShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const { \n    shipping_profile, \n    isLoading\n  } = useAdminShippingProfile(\n    shippingProfileId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profile && (\n        <span>{shipping_profile.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16408,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16409,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16410,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16412,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16411,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16412,
																		16411
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16413,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16415,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16414,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16415,
																		16414
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16416,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16418,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16417,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16418,
																		16417
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16421,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16420,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16421,
																		16420
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16422,
										16425,
										16429,
										16391,
										16406
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16391,
										16406
									]
								},
								{
									"title": "Mutations",
									"children": [
										16422,
										16425,
										16429
									]
								}
							]
						},
						{
							"id": 14077,
							"name": "Stock Locations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Stock Location API Routes](https://docs.medusajs.com/api/admin#stock-locations).\nTo use these hooks, make sure to install the\n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA stock location, provided by the [Stock Location module](https://docs.medusajs.com/modules/multiwarehouse/stock-location-module), \nindicates a physical address that stock-kept items, such as physical products, can be stored in.\nAn admin can create and manage available stock locations.\n\nRelated Guide: [How to manage stock locations](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-stock-locations)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16480,
									"name": "useAdminCreateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16481,
											"name": "useAdminCreateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateStockLocation } from \"medusa-react\"\n\nconst CreateStockLocation = () => {\n  const createStockLocation = useAdminCreateStockLocation()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createStockLocation.mutate({\n      name,\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateStockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16482,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsReq"
																},
																"name": "AdminPostStockLocationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsReq"
														},
														"name": "AdminPostStockLocationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16483,
									"name": "useAdminUpdateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16484,
											"name": "useAdminUpdateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const updateLocation = useAdminUpdateStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateLocation.mutate({\n      name\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.name)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16485,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16486,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsLocationReq"
																},
																"name": "AdminPostStockLocationsLocationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsLocationReq"
														},
														"name": "AdminPostStockLocationsLocationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16487,
									"name": "useAdminDeleteStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16488,
											"name": "useAdminDeleteStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const deleteLocation = useAdminDeleteStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteLocation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16489,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16490,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/types"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16434,
									"name": "useAdminStockLocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16435,
											"name": "useAdminStockLocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of stock locations. The stock locations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe stock locations can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    limit,\n    offset,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16436,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved stock locations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16437,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsListRes"
																		},
																		"name": "AdminStockLocationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16438,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16439,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16439
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16440,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16445,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16444,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16441,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16442,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16443,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16445,
																		16444,
																		16441,
																		16442,
																		16443
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16446,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16451,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16450,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16447,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16448,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16449,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16451,
																		16450,
																		16447,
																		16448,
																		16449
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16452,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16457,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16456,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16453,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16454,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16455,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16457,
																		16456,
																		16453,
																		16454,
																		16455
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16458,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16463,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16462,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 16459,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16460,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16461,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16463,
																		16462,
																		16459,
																		16460,
																		16461
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16464,
									"name": "useAdminStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16465,
											"name": "useAdminStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const { \n    stock_location,\n    isLoading\n  } = useAdminStockLocation(stockLocationId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_location && (\n        <span>{stock_location.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16466,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16467,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16468,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16470,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16469,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16470,
																		16469
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16471,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16473,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16472,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16473,
																		16472
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16474,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16476,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16475,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16476,
																		16475
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16477,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16479,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16478,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16479,
																		16478
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16480,
										16483,
										16487,
										16434,
										16464
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16434,
										16464
									]
								},
								{
									"title": "Mutations",
									"children": [
										16480,
										16483,
										16487
									]
								}
							]
						},
						{
							"id": 14078,
							"name": "Stores",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Store API Routes](https://docs.medusajs.com/api/admin#store).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA store indicates the general configurations and details about the commerce store. By default, there's only one store in the Medusa backend.\nAdmins can manage the store and its details or configurations."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16537,
									"name": "useAdminUpdateStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16538,
											"name": "useAdminUpdateStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStore } from \"medusa-react\"\n\nfunction Store() {\n  const updateStore = useAdminUpdateStore()\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateStore.mutate({\n      name\n    }, {\n      onSuccess: ({ store }) => {\n        console.log(store.name)\n      }\n    })\n  }\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16539,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
																	"qualifiedName": "AdminPostStoreReq"
																},
																"name": "AdminPostStoreReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
															"qualifiedName": "AdminPostStoreReq"
														},
														"name": "AdminPostStoreReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16540,
									"name": "useAdminAddStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16541,
											"name": "useAdminAddStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a currency code to the available currencies in a store. This doesn't create new currencies, as currencies are defined within the Medusa backend. \nTo create a currency, you can [create a migration](https://docs.medusajs.com/development/entities/migrations/create) that inserts the currency into the database."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to add to the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const addCurrency = useAdminAddStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    addCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16542,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16543,
									"name": "useAdminDeleteStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16544,
											"name": "useAdminDeleteStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a currency code from the available currencies in a store. This doesn't completely \ndelete the currency and it can be added again later to the store."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to remove from the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const deleteCurrency = useAdminDeleteStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    deleteCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16545,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16492,
									"name": "useAdminStorePaymentProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16493,
											"name": "useAdminStorePaymentProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available payment providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStorePaymentProviders } from \"medusa-react\"\n\nconst PaymentProviders = () => {\n  const { \n    payment_providers,\n    isLoading\n  } = useAdminStorePaymentProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_providers && !payment_providers.length && (\n        <span>No Payment Providers</span>\n      )}\n      {payment_providers && \n        payment_providers.length > 0 &&(\n          <ul>\n            {payment_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16494,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminPaymentProvidersList"
																		},
																		"name": "AdminPaymentProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16495,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16497,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16496,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16497,
																		16496
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16498,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16500,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16499,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16500,
																		16499
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16501,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16503,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16502,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16503,
																		16502
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16504,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16506,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16505,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16506,
																		16505
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16507,
									"name": "useAdminStoreTaxProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16508,
											"name": "useAdminStoreTaxProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available tax providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStoreTaxProviders } from \"medusa-react\"\n\nconst TaxProviders = () => {\n  const { \n    tax_providers,\n    isLoading\n  } = useAdminStoreTaxProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_providers && !tax_providers.length && (\n        <span>No Tax Providers</span>\n      )}\n      {tax_providers && \n        tax_providers.length > 0 &&(\n          <ul>\n            {tax_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16509,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminTaxProvidersList"
																		},
																		"name": "AdminTaxProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16510,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16512,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16511,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16512,
																		16511
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16513,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16515,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16514,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16515,
																		16514
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16516,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16518,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16517,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16518,
																		16517
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16519,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16521,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16520,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16521,
																		16520
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16522,
									"name": "useAdminStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16523,
											"name": "useAdminStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStore } from \"medusa-react\"\n\nconst Store = () => {\n  const { \n    store,\n    isLoading\n  } = useAdminStore()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {store && <span>{store.name}</span>}\n    </div>\n  )\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16524,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminExtendedStoresRes"
																		},
																		"name": "AdminExtendedStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16525,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16527,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16526,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16527,
																		16526
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16528,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16530,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16529,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16530,
																		16529
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16531,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16533,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16532,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16533,
																		16532
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16534,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16536,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16535,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16536,
																		16535
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16537,
										16540,
										16543,
										16492,
										16507,
										16522
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16492,
										16507,
										16522
									]
								},
								{
									"title": "Mutations",
									"children": [
										16537,
										16540,
										16543
									]
								}
							]
						},
						{
							"id": 14079,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Swap API Routes](https://docs.medusajs.com/api/admin#swaps).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to manage swaps](https://docs.medusajs.com/modules/orders/admin/manage-swaps)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16593,
									"name": "useAdminCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16594,
											"name": "useAdminCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a swap for an order. This includes creating a return that is associated with the swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateSwap = ({ orderId }: Props) => {\n  const createSwap = useAdminCreateSwap(orderId)\n  // ...\n\n  const handleCreate = (\n    returnItems: {\n      item_id: string,\n      quantity: number\n    }[]\n  ) => {\n    createSwap.mutate({\n      return_items: returnItems\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16595,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16596,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderSwapsReq"
																},
																"name": "AdminPostOrdersOrderSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
															"qualifiedName": "AdminPostOrdersOrderSwapsReq"
														},
														"name": "AdminPostOrdersOrderSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16597,
									"name": "useAdminCancelSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16598,
											"name": "useAdminCancelSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelSwap = useAdminCancelSwap(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelSwap.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16599,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16600,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16604,
									"name": "useAdminFulfillSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16605,
											"name": "useAdminFulfillSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Swap and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ". If it requires any additional actions,\nits fulfillment status may change to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const fulfillSwap = useAdminFulfillSwap(\n    orderId\n  )\n  // ...\n\n  const handleFulfill = () => {\n    fulfillSwap.mutate({\n      swap_id: swapId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16606,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16607,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16601,
																"name": "AdminFulfillSwapReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16601,
														"name": "AdminFulfillSwapReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16611,
									"name": "useAdminCreateSwapShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16612,
											"name": "useAdminCreateSwapShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for a swap and mark its fulfillment as shipped. This changes the swap's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwapShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const createShipment = useAdminCreateSwapShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreateShipment = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16613,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16614,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16608,
																"name": "AdminCreateSwapShipmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16608,
														"name": "AdminCreateSwapShipmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16615,
									"name": "useAdminProcessSwapPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16616,
											"name": "useAdminProcessSwapPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook process a swap's payment either by refunding or issuing a payment. This depends on the "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " \nof the swap. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is negative, the amount is refunded. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is positive, the amount is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProcessSwapPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const processPayment = useAdminProcessSwapPayment(\n    orderId\n  )\n  // ...\n\n  const handleProcessPayment = () => {\n    processPayment.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16617,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16618,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16623,
									"name": "useAdminCancelSwapFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16624,
											"name": "useAdminCancelSwapFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwapFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelFulfillment = useAdminCancelSwapFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancelFulfillment = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16625,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16626,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 16627,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 16628,
																			"name": "swap_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 16629,
																			"name": "fulfillment_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				16628,
																				16629
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16630,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16631,
																	"name": "swap_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 16632,
																	"name": "fulfillment_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16631,
																		16632
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16547,
									"name": "useAdminSwaps",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16548,
											"name": "useAdminSwaps",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of swaps. The swaps can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list swaps:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { swaps, isLoading } = useAdminSwaps()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { \n    swaps, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSwaps({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16549,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Pagination configurations to apply on the retrieved swaps."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/list-swaps.d.ts",
															"qualifiedName": "AdminGetSwapsParams"
														},
														"name": "AdminGetSwapsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16550,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsListRes"
																		},
																		"name": "AdminSwapsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16551,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16552,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16552
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16553,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16558,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16557,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16554,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16555,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16556,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16558,
																		16557,
																		16554,
																		16555,
																		16556
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16559,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16564,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16563,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16560,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16561,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16562,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16564,
																		16563,
																		16560,
																		16561,
																		16562
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16565,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16570,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16569,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16566,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16567,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16568,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16570,
																		16569,
																		16566,
																		16567,
																		16568
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16571,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16576,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16575,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16572,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16573,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16574,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16576,
																		16575,
																		16572,
																		16573,
																		16574
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16577,
									"name": "useAdminSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16578,
											"name": "useAdminSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a swap's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSwap } from \"medusa-react\"\n\ntype Props = {\n  swapId: string\n}\n\nconst Swap = ({ swapId }: Props) => {\n  const { swap, isLoading } = useAdminSwap(swapId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16579,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The swap's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16580,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsRes"
																		},
																		"name": "AdminSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16581,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16583,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16582,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16583,
																		16582
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16584,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16586,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16585,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16586,
																		16585
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16587,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16589,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16588,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16589,
																		16588
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16590,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16592,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16591,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16592,
																		16591
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16593,
										16597,
										16604,
										16611,
										16615,
										16623,
										16547,
										16577
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16547,
										16577
									]
								},
								{
									"title": "Mutations",
									"children": [
										16593,
										16597,
										16604,
										16611,
										16615,
										16623
									]
								}
							]
						},
						{
							"id": 14080,
							"name": "Tax Rates",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Tax Rate API Routes](https://docs.medusajs.com/api/admin#tax-rates).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nEach region has at least a default tax rate. Admins can create and manage additional tax rates that can be applied for certain conditions, such as for specific product types.\n\nRelated Guide: [How to manage tax rates](https://docs.medusajs.com/modules/taxes/admin/manage-tax-rates)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16681,
									"name": "useAdminCreateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16682,
											"name": "useAdminCreateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst CreateTaxRate = ({ regionId }: Props) => {\n  const createTaxRate = useAdminCreateTaxRate()\n  // ...\n\n  const handleCreate = (\n    code: string,\n    name: string,\n    rate: number\n  ) => {\n    createTaxRate.mutate({\n      code,\n      name,\n      region_id: regionId,\n      rate,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateTaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16683,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesReq"
																},
																"name": "AdminPostTaxRatesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesReq"
														},
														"name": "AdminPostTaxRatesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16684,
									"name": "useAdminUpdateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16685,
											"name": "useAdminUpdateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const updateTaxRate = useAdminUpdateTaxRate(taxRateId)\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateTaxRate.mutate({\n      name\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16686,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16687,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateReq"
																},
																"name": "AdminPostTaxRatesTaxRateReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateReq"
														},
														"name": "AdminPostTaxRatesTaxRateReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16688,
									"name": "useAdminDeleteTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16689,
											"name": "useAdminDeleteTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a tax rate. Resources associated with the tax rate, such as products or product types, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const deleteTaxRate = useAdminDeleteTaxRate(taxRateId)\n  // ...\n\n  const handleDelete = () => {\n    deleteTaxRate.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16690,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16691,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16692,
									"name": "useAdminCreateProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16693,
											"name": "useAdminCreateProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProduct = useAdminCreateProductTaxRates(taxRateId)\n  // ...\n\n  const handleAddProduct = (productIds: string[]) => {\n    addProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16694,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16695,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16696,
									"name": "useAdminDeleteProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16697,
											"name": "useAdminDeleteProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes products from a tax rate. This only removes the association between the products and the tax rate. It does not delete the products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProduct = useAdminDeleteProductTaxRates(taxRateId)\n  // ...\n\n  const handleRemoveProduct = (productIds: string[]) => {\n    removeProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16698,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16699,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16700,
									"name": "useAdminCreateProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16701,
											"name": "useAdminCreateProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds product types to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProductTypes = useAdminCreateProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddProductTypes = (productTypeIds: string[]) => {\n    addProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16702,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16703,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16704,
									"name": "useAdminDeleteProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16705,
											"name": "useAdminDeleteProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes product types from a tax rate. This only removes the association between the \nproduct types and the tax rate. It does not delete the product types."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProductTypes = useAdminDeleteProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveProductTypes = (\n    productTypeIds: string[]\n  ) => {\n    removeProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16706,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16707,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16708,
									"name": "useAdminCreateShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16709,
											"name": "useAdminCreateShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds shipping options to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addShippingOption = useAdminCreateShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    addShippingOption.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16710,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16711,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16712,
									"name": "useAdminDeleteShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16713,
											"name": "useAdminDeleteShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes shipping options from a tax rate. This only removes the association between \nthe shipping options and the tax rate. It does not delete the shipping options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeShippingOptions = useAdminDeleteShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    removeShippingOptions.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16714,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16715,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16634,
									"name": "useAdminTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16635,
											"name": "useAdminTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of tax rates. The tax rates can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`rate`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The tax rates can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    limit,\n    offset,\n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"],\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16636,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16637,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesListRes"
																		},
																		"name": "AdminTaxRatesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16638,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16639,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16639
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16640,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16645,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16644,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16641,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16642,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16643,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16645,
																		16644,
																		16641,
																		16642,
																		16643
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16646,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16651,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16650,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16647,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16648,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16649,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16651,
																		16650,
																		16647,
																		16648,
																		16649
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16652,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16657,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16656,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16653,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16654,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16655,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16657,
																		16656,
																		16653,
																		16654,
																		16655
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16658,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16663,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16662,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16659,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16660,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16661,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16663,
																		16662,
																		16659,
																		16660,
																		16661
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16664,
									"name": "useAdminTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16665,
											"name": "useAdminTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a tax rate by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\nconst TaxRate = (taxRateId: string) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId, {\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16666,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16667,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16668,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16669,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16670,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16671,
																		16670
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16672,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16674,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16673,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16674,
																		16673
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16675,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16677,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16676,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16677,
																		16676
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16678,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16680,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16679,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16680,
																		16679
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16681,
										16684,
										16688,
										16692,
										16696,
										16700,
										16704,
										16708,
										16712,
										16634,
										16664
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16634,
										16664
									]
								},
								{
									"title": "Mutations",
									"children": [
										16681,
										16684,
										16688,
										16692,
										16696,
										16700,
										16704,
										16708,
										16712
									]
								}
							]
						},
						{
							"id": 14081,
							"name": "Uploads",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Upload API Routes](https://docs.medusajs.com/api/admin#uploads).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nThe methods in this class are used to upload any type of resources. For example, they can be used to upload CSV files that are used to import products into the store.\n\nRelated Guide: [How to upload CSV file when importing a product](https://docs.medusajs.com/modules/products/admin/import-products#1-upload-csv-file)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16716,
									"name": "useAdminUploadFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16717,
											"name": "useAdminUploadFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to a public bucket or storage. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16718,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16719,
									"name": "useAdminUploadProtectedFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16720,
											"name": "useAdminUploadProtectedFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to an ACL or a non-public bucket. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadProtectedFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadProtectedFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16721,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16722,
									"name": "useAdminCreatePresignedDownloadUrl",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16723,
											"name": "useAdminCreatePresignedDownloadUrl",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates and retrieve a presigned or public download URL for a file. The URL creation is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePresignedDownloadUrl } from \"medusa-react\"\n\nconst Image = () => {\n  const createPresignedUrl = useAdminCreatePresignedDownloadUrl()\n  // ...\n\n  const handlePresignedUrl = (fileKey: string) => {\n    createPresignedUrl.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ download_url }) => {\n        console.log(download_url)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16724,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsDownloadUrlRes"
																		},
																		"name": "AdminUploadsDownloadUrlRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
																	"qualifiedName": "AdminPostUploadsDownloadUrlReq"
																},
																"name": "AdminPostUploadsDownloadUrlReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsDownloadUrlRes"
																},
																"name": "AdminUploadsDownloadUrlRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
															"qualifiedName": "AdminPostUploadsDownloadUrlReq"
														},
														"name": "AdminPostUploadsDownloadUrlReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16725,
									"name": "useAdminDeleteFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16726,
											"name": "useAdminDeleteFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an uploaded file from storage. The file is deleted using the installed file service on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteFile } from \"medusa-react\"\n\nconst Image = () => {\n  const deleteFile = useAdminDeleteFile()\n  // ...\n\n  const handleDeleteFile = (fileKey: string) => {\n    deleteFile.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16727,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
																	"qualifiedName": "AdminDeleteUploadsReq"
																},
																"name": "AdminDeleteUploadsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
															"qualifiedName": "AdminDeleteUploadsReq"
														},
														"name": "AdminDeleteUploadsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16716,
										16719,
										16722,
										16725
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										16716,
										16719,
										16722,
										16725
									]
								}
							]
						},
						{
							"id": 14082,
							"name": "Users",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin User API Routes](https://docs.medusajs.com/api/admin#users).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nA store can have more than one user, each having the same privileges. Admins can manage users, their passwords, and more.\n\nRelated Guide: [How to manage users](https://docs.medusajs.com/modules/users/admin/manage-users)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16775,
									"name": "useAdminCreateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16776,
											"name": "useAdminCreateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an admin user. The user has the same privileges as all admin users, and will be able to \nauthenticate and perform admin functionalities right after creation."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateUser } from \"medusa-react\"\n\nconst CreateUser = () => {\n  const createUser = useAdminCreateUser()\n  // ...\n\n  const handleCreateUser = () => {\n    createUser.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateUser\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16777,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUserPayload"
																},
																"name": "AdminCreateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUserPayload"
														},
														"name": "AdminCreateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16778,
									"name": "useAdminUpdateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16779,
											"name": "useAdminUpdateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const updateUser = useAdminUpdateUser(userId)\n  // ...\n\n  const handleUpdateUser = (\n    firstName: string\n  ) => {\n    updateUser.mutate({\n      first_name: firstName,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16780,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16781,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminUpdateUserPayload"
																},
																"name": "AdminUpdateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminUpdateUserPayload"
														},
														"name": "AdminUpdateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16782,
									"name": "useAdminDeleteUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16783,
											"name": "useAdminDeleteUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a user. Once deleted, the user will not be able to authenticate or perform admin functionalities."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const deleteUser = useAdminDeleteUser(userId)\n  // ...\n\n  const handleDeleteUser = () => {\n    deleteUser.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16784,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16785,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16786,
									"name": "useAdminResetPassword",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16787,
											"name": "useAdminResetPassword",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resets the password of an admin user using their reset password token. You must generate a reset password token first \nfor the user using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminSendResetPasswordToken",
														"target": 16789,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook, then use that token to reset the password in this hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResetPassword } from \"medusa-react\"\n\nconst ResetPassword = () => {\n  const resetPassword = useAdminResetPassword()\n  // ...\n\n  const handleResetPassword = (\n    token: string,\n    password: string\n  ) => {\n    resetPassword.mutate({\n      token,\n      password,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResetPassword\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16788,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
																	"qualifiedName": "AdminResetPasswordRequest"
																},
																"name": "AdminResetPasswordRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
															"qualifiedName": "AdminResetPasswordRequest"
														},
														"name": "AdminResetPasswordRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16789,
									"name": "useAdminSendResetPasswordToken",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16790,
											"name": "useAdminSendResetPasswordToken",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a password token for an admin user with a given email. This also triggers the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event. So, if you have a Notification Service installed\nthat can handle this event, a notification, such as an email, will be sent to the user. The token is triggered as part of the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event's payload. \nThat token must be used later to reset the password using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminResetPassword",
														"target": 16786,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSendResetPasswordToken } from \"medusa-react\"\n\nconst Login = () => {\n  const requestPasswordReset = useAdminSendResetPasswordToken()\n  // ...\n\n  const handleResetPassword = (\n    email: string\n  ) => {\n    requestPasswordReset.mutate({\n      email\n    }, {\n      onSuccess: () => {\n        // successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16791,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
																	"qualifiedName": "AdminResetPasswordTokenRequest"
																},
																"name": "AdminResetPasswordTokenRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
															"qualifiedName": "AdminResetPasswordTokenRequest"
														},
														"name": "AdminResetPasswordTokenRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16729,
									"name": "useAdminUsers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16730,
											"name": "useAdminUsers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves all admin users."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list users:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const { users, isLoading } = useAdminUsers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const {\n    users,\n    limit,\n    offset,\n    isLoading\n  } = useAdminUsers({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16731,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/list-users.d.ts",
															"qualifiedName": "AdminGetUsersParams"
														},
														"name": "AdminGetUsersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16732,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUsersListRes"
																		},
																		"name": "AdminUsersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16733,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16734,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16734
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16735,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16740,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16739,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 16736,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16737,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16738,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16740,
																		16739,
																		16736,
																		16737,
																		16738
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16741,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16746,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16745,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 16742,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16743,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16744,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16746,
																		16745,
																		16742,
																		16743,
																		16744
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16747,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16752,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16751,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 16748,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16749,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16750,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16752,
																		16751,
																		16748,
																		16749,
																		16750
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16753,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16758,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16757,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 16754,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16755,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16756,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16758,
																		16757,
																		16754,
																		16755,
																		16756
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16759,
									"name": "useAdminUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16760,
											"name": "useAdminUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const { user, isLoading } = useAdminUser(\n    userId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.first_name} {user.last_name}</span>}\n    </div>\n  )\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16761,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16762,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16763,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16765,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16764,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16765,
																		16764
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16766,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16768,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16767,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16768,
																		16767
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16769,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16771,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16770,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16771,
																		16770
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16772,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16774,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16773,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16774,
																		16773
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16775,
										16778,
										16782,
										16786,
										16789,
										16729,
										16759
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16729,
										16759
									]
								},
								{
									"title": "Mutations",
									"children": [
										16775,
										16778,
										16782,
										16786,
										16789
									]
								}
							]
						},
						{
							"id": 14083,
							"name": "Product Variants",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Admin Product Variant API Routes](https://docs.medusajs.com/api/admin#product-variants).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 14273
									},
									{
										"kind": "text",
										"text": ".\n\nProduct variants are the actual salable item in your store. Each variant is a combination of the different option values available on the product.\n\nRelated Guide: [How to manage product variants](https://docs.medusajs.com/modules/products/admin/manage-products#manage-product-variants)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16793,
									"name": "useAdminVariants",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16794,
											"name": "useAdminVariants",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product variants. The product variant can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product variant can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants({\n    expand: \"options\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { \n    variants, \n    limit,\n    offset,\n    isLoading\n  } = useAdminVariants({\n    expand: \"options\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16795,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product variants."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/list-variants.d.ts",
															"qualifiedName": "AdminGetVariantsParams"
														},
														"name": "AdminGetVariantsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16796,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsListRes"
																		},
																		"name": "AdminVariantsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16797,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16798,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16798
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16799,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16804,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16803,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16800,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16801,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16802,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16804,
																		16803,
																		16800,
																		16801,
																		16802
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16805,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16810,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16809,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16806,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16807,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16808,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16810,
																		16809,
																		16806,
																		16807,
																		16808
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16811,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16816,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16815,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16812,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16813,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16814,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16816,
																		16815,
																		16812,
																		16813,
																		16814
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16817,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16822,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16821,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16818,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16819,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16820,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16822,
																		16821,
																		16818,
																		16819,
																		16820
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16823,
									"name": "useAdminVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16824,
											"name": "useAdminVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product variant by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId, {\n      expand: \"options\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16825,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16826,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product variant."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-variant.d.ts",
															"qualifiedName": "AdminGetVariantParams"
														},
														"name": "AdminGetVariantParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16827,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsRes"
																		},
																		"name": "AdminVariantsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16828,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16830,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16829,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16830,
																		16829
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16831,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16833,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16832,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16833,
																		16832
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16834,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16836,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16835,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16836,
																		16835
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16837,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16839,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16838,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16839,
																		16838
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16840,
									"name": "useAdminVariantsInventory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16841,
											"name": "useAdminVariantsInventory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the available inventory of a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminVariantsInventory } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst VariantInventory = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariantsInventory(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && variant.inventory.length === 0 && (\n        <span>Variant doesn't have inventory details</span>\n      )}\n      {variant && variant.inventory.length > 0 && (\n        <ul>\n          {variant.inventory.map((inventory) => (\n            <li key={inventory.id}>{inventory.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default VariantInventory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16842,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16843,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
																		},
																		"name": "AdminGetVariantsVariantInventoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16844,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16846,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16845,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16846,
																		16845
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16847,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16849,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16848,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16849,
																		16848
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16850,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16852,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16851,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16852,
																		16851
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16853,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16855,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16854,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16855,
																		16854
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16793,
										16823,
										16840
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16793,
										16823,
										16840
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								14045,
								14046,
								14047,
								14048,
								14049,
								14050,
								14051,
								14052,
								14053,
								14054,
								14055,
								14056,
								14057,
								14058,
								14059,
								14060,
								14061,
								14062,
								14063,
								14064,
								14065,
								14066,
								14067,
								14068,
								14069,
								14070,
								14071,
								14072,
								14073,
								14074,
								14075,
								14076,
								14077,
								14078,
								14079,
								14080,
								14081,
								14082,
								14083
							]
						}
					]
				},
				{
					"id": 14084,
					"name": "Store",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 14085,
							"name": "Carts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nA cart is a virtual shopping bag that customers can use to add items they want to purchase.\nA cart is then used to checkout and place an order.\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 14212
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 14207
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application.\n\nRelated Guide: [How to implement cart functionality in your storefront](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16874,
									"name": "useCreateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16875,
											"name": "useCreateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Cart. Although optional, specifying the cart's region and sales channel can affect the cart's pricing and\nthe products that can be added to the cart respectively.\n\nSo, make sure to set those early on and change them if necessary, such as when the customer changes their region.\n\nIf a customer is logged in, make sure to pass its ID or email within the cart's details so that the cart is attached to the customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCart } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Cart = ({ regionId }: Props) => {\n  const createCart = useCreateCart()\n\n  const handleCreate = () => {\n    createCart.mutate({\n      region_id: regionId\n      // creates an empty cart\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16876,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																			"qualifiedName": "StorePostCartReq"
																		},
																		"name": "StorePostCartReq",
																		"package": "@medusajs/medusa"
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16877,
									"name": "useUpdateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16878,
											"name": "useUpdateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Cart's details. If the cart has payment sessions and the region was not changed, \nthe payment sessions are updated. The cart's totals are also recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateCart = useUpdateCart(cartId)\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateCart.mutate({\n      email\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.email)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16879,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16880,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
																	"qualifiedName": "StorePostCartsCartReq"
																},
																"name": "StorePostCartsCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
															"qualifiedName": "StorePostCartsCartReq"
														},
														"name": "StorePostCartsCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16881,
									"name": "useCompleteCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16882,
											"name": "useCompleteCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes a cart and place an order or create a swap, based on the cart's type. This includes attempting to authorize the cart's payment.\nIf authorizing the payment requires more action, the cart will not be completed and the order will not be placed or the swap will not be created.\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during cart completion or the request is interrupted for any reason, the cart completion can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const completeCart = useCompleteCart(cartId)\n\n  const handleComplete = () => {\n    completeCart.mutate(void 0, {\n      onSuccess: ({ data, type }) => {\n        console.log(data.id, type)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16883,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16884,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16885,
									"name": "useCreatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16886,
											"name": "useCreatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates Payment Sessions for each of the available Payment Providers in the Cart's Region. If there's only one payment session created,\nit will be selected by default. The creation of the payment session uses the payment provider and may require sending requests to third-party services."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createPaymentSession = useCreatePaymentSession(cartId)\n\n  const handleComplete = () => {\n    createPaymentSession.mutate(void 0, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16887,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16888,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16892,
									"name": "useUpdatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16893,
											"name": "useUpdatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Payment Session with additional data. This can be useful depending on the payment provider used.\nAll payment sessions are updated and cart totals are recalculated afterwards."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updatePaymentSession = useUpdatePaymentSession(cartId)\n\n  const handleUpdate = (\n    providerId: string,\n    data: Record<string, unknown>\n  ) => {\n    updatePaymentSession.mutate({\n      provider_id: providerId,\n      data\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16894,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16895,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16889,
																"name": "UpdatePaymentSessionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16889,
														"name": "UpdatePaymentSessionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16899,
									"name": "useRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16900,
											"name": "useRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session to ensure that it is in sync with the Cart. This is usually not necessary, but is provided for edge cases."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const refreshPaymentSession = useRefreshPaymentSession(cartId)\n\n  const handleRefresh = (\n    providerId: string\n  ) => {\n    refreshPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16901,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16902,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16896,
																"name": "RefreshPaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16896,
														"name": "RefreshPaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16903,
									"name": "useSetPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16904,
											"name": "useSetPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook selects the Payment Session that will be used to complete the cart. This is typically used when the customer chooses their preferred payment method during checkout.\nThe totals of the cart will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useSetPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const setPaymentSession = useSetPaymentSession(cartId)\n\n  const handleSetPaymentSession = (\n    providerId: string\n  ) => {\n    setPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16905,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16906,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
																	"qualifiedName": "StorePostCartsCartPaymentSessionReq"
																},
																"name": "StorePostCartsCartPaymentSessionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
															"qualifiedName": "StorePostCartsCartPaymentSessionReq"
														},
														"name": "StorePostCartsCartPaymentSessionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16907,
									"name": "useAddShippingMethodToCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16908,
											"name": "useAddShippingMethodToCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to the cart. The validation of the "
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": " field is handled by the fulfillment provider of the chosen shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAddShippingMethodToCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const addShippingMethod = useAddShippingMethodToCart(cartId)\n\n  const handleAddShippingMethod = (\n    optionId: string\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.shipping_methods)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16909,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16910,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
																	"qualifiedName": "StorePostCartsCartShippingMethodReq"
																},
																"name": "StorePostCartsCartShippingMethodReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
															"qualifiedName": "StorePostCartsCartShippingMethodReq"
														},
														"name": "StorePostCartsCartShippingMethodReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16914,
									"name": "useDeletePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16915,
											"name": "useDeletePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Payment Session in a Cart. May be useful if a payment has failed. The totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeletePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deletePaymentSession = useDeletePaymentSession(cartId)\n\n  const handleDeletePaymentSession = (\n    providerId: string\n  ) => {\n    deletePaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16916,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16917,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16911,
																"name": "DeletePaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16911,
														"name": "DeletePaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16918,
									"name": "useStartCheckout",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16919,
											"name": "useStartCheckout",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows you to create a cart and set its payment session as a preparation for checkout.\nIt performs the same actions as the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreateCart",
														"target": 16874,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreatePaymentSession",
														"target": 16885,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useStartCheckout } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Checkout = ({ regionId }: Props) => {\n  const startCheckout = useStartCheckout()\n\n  const handleCheckout = () => {\n    startCheckout.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: (cart) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Checkout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16920,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																			"qualifiedName": "Cart"
																		},
																		"name": "Cart",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "refundable_amount"
																			},
																			{
																				"type": "literal",
																				"value": "refunded_total"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																	"qualifiedName": "Cart"
																},
																"name": "Cart",
																"package": "@medusajs/medusa"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "refundable_amount"
																	},
																	{
																		"type": "literal",
																		"value": "refunded_total"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
															"qualifiedName": "StorePostCartReq"
														},
														"name": "StorePostCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16857,
									"name": "useGetCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16858,
											"name": "useGetCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Cart's details. This includes recalculating its totals."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGetCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const { cart, isLoading } = useGetCart(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {cart && cart.items.length === 0 && (\n        <span>Cart is empty</span>\n      )}\n      {cart && cart.items.length > 0 && (\n        <ul>\n          {cart.items.map((item) => (\n            <li key={item.id}>{item.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16859,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16860,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																			"qualifiedName": "StoreCartsRes"
																		},
																		"name": "StoreCartsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "carts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16861,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16863,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16862,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16863,
																		16862
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16864,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16866,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16865,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16866,
																		16865
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16867,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16869,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16868,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16869,
																		16868
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16870,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16872,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16871,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16872,
																		16871
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16874,
										16877,
										16881,
										16885,
										16892,
										16899,
										16903,
										16907,
										16914,
										16918,
										16857
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16857
									]
								},
								{
									"title": "Mutations",
									"children": [
										16874,
										16877,
										16881,
										16885,
										16892,
										16899,
										16903,
										16907,
										16914,
										16918
									]
								}
							]
						},
						{
							"id": 14086,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Collection API Routes](https://docs.medusajs.com/api/store#product-collections).\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection.\nUsing the methods in this class, you can list or retrieve a collection's details and products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16922,
									"name": "useCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16923,
											"name": "useCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst ProductCollection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default ProductCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16924,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16925,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsRes"
																		},
																		"name": "StoreCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16926,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16928,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16927,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16928,
																		16927
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16929,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16931,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16930,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16931,
																		16930
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16932,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16934,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16933,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16934,
																		16933
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16935,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16937,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16936,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16937,
																		16936
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16938,
									"name": "useCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16939,
											"name": "useCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product collections can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { collections, isLoading } = useCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { \n    collections, \n    limit,\n    offset,\n    isLoading\n  } = useCollections({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16940,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/list-collections.d.ts",
															"qualifiedName": "StoreGetCollectionsParams"
														},
														"name": "StoreGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16941,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsListRes"
																		},
																		"name": "StoreCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16942,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16943,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16943
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16944,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16949,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16948,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16945,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16946,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16947,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16949,
																		16948,
																		16945,
																		16946,
																		16947
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16950,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16955,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16954,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16951,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16952,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16953,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16955,
																		16954,
																		16951,
																		16952,
																		16953
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16956,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16961,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16960,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16957,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16958,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16959,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16961,
																		16960,
																		16957,
																		16958,
																		16959
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16962,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16967,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16966,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16963,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16964,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16965,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16967,
																		16966,
																		16963,
																		16964,
																		16965
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16922,
										16938
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16922,
										16938
									]
								}
							]
						},
						{
							"id": 14087,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Customer API Routes](https://docs.medusajs.com/api/store#customers_postcustomers).\n\nA customer can register and manage their information such as addresses, orders, payment methods, and more.\n\nRelated Guide: [How to implement customer profiles in your storefront](https://docs.medusajs.com/modules/customers/storefront/implement-customer-profiles)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17034,
									"name": "useCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17035,
											"name": "useCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a new customer. This will also automatically authenticate the customer and set their login session in the response Cookie header.\nSubsequent requests sent with other hooks are sent with the Cookie session automatically."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCustomer } from \"medusa-react\"\n\nconst RegisterCustomer = () => {\n  const createCustomer = useCreateCustomer()\n  // ...\n\n  const handleCreate = (\n    customerData: {\n      first_name: string\n      last_name: string\n      email: string\n      password: string\n    }\n  ) => {\n    // ...\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default RegisterCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17036,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
																	"qualifiedName": "StorePostCustomersReq"
																},
																"name": "StorePostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
															"qualifiedName": "StorePostCustomersReq"
														},
														"name": "StorePostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17040,
									"name": "useUpdateMe",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17041,
											"name": "useUpdateMe",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the logged-in customer's details. This hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateMe } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useUpdateMe()\n  // ...\n\n  const handleUpdate = (\n    firstName: string\n  ) => {\n    // ...\n    updateCustomer.mutate({\n      id: customerId,\n      first_name: firstName,\n    }, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17042,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 17037,
																"name": "UpdateMeReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 17037,
														"name": "UpdateMeReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16991,
									"name": "useMeCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16992,
											"name": "useMeCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the logged-in customer's details. It requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer } from \"medusa-react\"\n\nconst Customer = () => {\n  const { customer, isLoading } = useMeCustomer()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && (\n        <span>{customer.first_name} {customer.last_name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16993,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersRes"
																		},
																		"name": "StoreCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16994,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16996,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16995,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16996,
																		16995
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16997,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16999,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16998,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16999,
																		16998
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17000,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17002,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17001,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17002,
																		17001
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17003,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17005,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17004,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17005,
																		17004
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17006,
									"name": "useCustomerOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17007,
											"name": "useCustomerOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of the logged-in customer's orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfillment_status`"
													},
													{
														"kind": "text",
														"text": ". The orders can also be paginated.\nThis hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCustomerOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  // refetch a function that can be used to\n  // re-retrieve orders after the customer logs in\n  const { orders, isLoading } = useCustomerOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading orders...</span>}\n      {orders?.length && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17008,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/list-orders.d.ts",
															"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
														},
														"name": "StoreGetCustomersCustomerOrdersParams",
														"package": "@medusajs/medusa"
													},
													"defaultValue": "..."
												},
												{
													"id": 17009,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersListOrdersRes"
																		},
																		"name": "StoreCustomersListOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "customers"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "orders"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17010,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17015,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17014,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17011,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17012,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17013,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17015,
																		17014,
																		17011,
																		17012,
																		17013
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17016,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17021,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17020,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17017,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17018,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17019,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17021,
																		17020,
																		17017,
																		17018,
																		17019
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17022,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17027,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17026,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17023,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17024,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17025,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17027,
																		17026,
																		17023,
																		17024,
																		17025
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17028,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17033,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17032,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17029,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17030,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17031,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17033,
																		17032,
																		17029,
																		17030,
																		17031
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17034,
										17040,
										16991,
										17006
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16991,
										17006
									]
								},
								{
									"title": "Mutations",
									"children": [
										17034,
										17040
									]
								}
							]
						},
						{
							"id": 14088,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Gift Card API Routes](https://docs.medusajs.com/api/store#gift-cards).\n\nCustomers can use gift cards during checkout to deduct the gift card's balance from the checkout total.\n\nRelated Guide: [How to use gift cards in a storefront](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17044,
									"name": "useGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17045,
											"name": "useGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Gift Card's details by its associated unique code."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardCode: string\n}\n\nconst GiftCard = ({ giftCardCode }: Props) => {\n  const { gift_card, isLoading, isError } = useGiftCard(\n    giftCardCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.value}</span>}\n      {isError && <span>Gift Card does not exist</span>}\n    </div>\n  )\n}\n\nexport default GiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17046,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17047,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
																			"qualifiedName": "StoreGiftCardsRes"
																		},
																		"name": "StoreGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17048,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17050,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17049,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17050,
																		17049
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17051,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17053,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17052,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17053,
																		17052
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17054,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17056,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17055,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17056,
																		17055
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17057,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17059,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17058,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17059,
																		17058
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17044
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17044
									]
								}
							]
						},
						{
							"id": 14089,
							"name": "Line Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the Line Item API Routes part of the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 14212
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 14207
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17060,
									"name": "useCreateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17061,
											"name": "useCreateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a Line Item with a given Product Variant and adds it to the Cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createLineItem = useCreateLineItem(cartId)\n\n  const handleAddItem = (\n    variantId: string,\n    quantity: number\n  ) => {\n    createLineItem.mutate({\n      variant_id: variantId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17062,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17063,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
																	"qualifiedName": "StorePostCartsCartLineItemsReq"
																},
																"name": "StorePostCartsCartLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
															"qualifiedName": "StorePostCartsCartLineItemsReq"
														},
														"name": "StorePostCartsCartLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17067,
									"name": "useUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17068,
											"name": "useUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a line item's data."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateLineItem = useUpdateLineItem(cartId)\n\n  const handleUpdateItem = (\n    lineItemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      lineId: lineItemId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17069,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17070,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 17064,
																"name": "UpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 17064,
														"name": "UpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17071,
									"name": "useDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17072,
											"name": "useDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item from a cart. The payment sessions will be updated and the totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deleteLineItem = useDeleteLineItem(cartId)\n\n  const handleDeleteItem = (\n    lineItemId: string\n  ) => {\n    deleteLineItem.mutate({\n      lineId: lineItemId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17073,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17074,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 17075,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 17076,
																			"name": "lineId",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The line item's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				17076
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17077,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17078,
																	"name": "lineId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17078
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17060,
										17067,
										17071
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										17060,
										17067,
										17071
									]
								}
							]
						},
						{
							"id": 14090,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order Edits API Routes](https://docs.medusajs.com/api/store#order-edits).\n\nOrder edits are changes made to items in an order such as adding, updating their quantity, or deleting them. Order edits are created by the admin.\nA customer can review order edit requests created by an admin and confirm or decline them.\n\nRelated Guide: [How to handle order edits in a storefront](https://docs.medusajs.com/modules/orders/storefront/handle-order-edits)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17096,
									"name": "useDeclineOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17097,
											"name": "useDeclineOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook declines an Order Edit. The changes are not reflected on the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeclineOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const declineOrderEdit = useDeclineOrderEdit(orderEditId)\n  // ...\n\n  const handleDeclineOrderEdit = (\n    declinedReason: string\n  ) => {\n    declineOrderEdit.mutate({\n      declined_reason: declinedReason,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.declined_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17098,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17099,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
																	"qualifiedName": "StorePostOrderEditsOrderEditDecline"
																},
																"name": "StorePostOrderEditsOrderEditDecline",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
															"qualifiedName": "StorePostOrderEditsOrderEditDecline"
														},
														"name": "StorePostOrderEditsOrderEditDecline",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17100,
									"name": "useCompleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17101,
											"name": "useCompleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes and confirms an Order Edit and reflect its changes on the original order. Any additional payment required must \nbe authorized first using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAuthorizePaymentSession",
														"target": 17216
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const completeOrderEdit = useCompleteOrderEdit(\n    orderEditId\n  )\n  // ...\n\n  const handleCompleteOrderEdit = () => {\n    completeOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.confirmed_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17102,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17103,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17080,
									"name": "useOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17081,
											"name": "useOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { order_edit, isLoading } = useOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && (\n        <ul>\n          {order_edit.changes.map((change) => (\n            <li key={change.id}>{change.type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17082,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17083,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orderEdit"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17084,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17086,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17085,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17086,
																		17085
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17087,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17089,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17088,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17089,
																		17088
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17090,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17092,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17091,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17092,
																		17091
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17093,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17095,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17094,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17095,
																		17094
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17096,
										17100,
										17080
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17080
									]
								},
								{
									"title": "Mutations",
									"children": [
										17096,
										17100
									]
								}
							]
						},
						{
							"id": 14091,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order API Routes](https://docs.medusajs.com/api/store#orders).\n\nOrders are purchases made by customers, typically through a storefront.\nOrders are placed and created using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "cart",
										"target": 14085
									},
									{
										"kind": "text",
										"text": " hooks. The listed hooks allow retrieving and claiming orders.\n\nRelated Guide: [How to retrieve order details in a storefront](https://docs.medusajs.com/modules/orders/storefront/retrieve-order-details)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17177,
									"name": "useRequestOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17178,
											"name": "useRequestOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows the logged-in customer to claim ownership of one or more orders. This generates a token that can be used later on to verify the claim \nusing the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useGrantOrderAccess",
														"target": 17184,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook. This also emits the event "
													},
													{
														"kind": "code",
														"text": "`order-update-token.created`"
													},
													{
														"kind": "text",
														"text": ". So, if you have a notification provider installed \nthat handles this event and sends the customer a notification, such as an email, the customer should receive instructions on how to \nfinalize their claim ownership."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRequestOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const claimOrder = useRequestOrderAccess()\n\n  const handleClaimOrder = (\n    orderIds: string[]\n  ) => {\n    claimOrder.mutate({\n      order_ids: orderIds\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17179,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 17180,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 17181,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				17181
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
																},
																"name": "StorePostCustomersCustomerOrderClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17182,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17183,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17183
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
															"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
														},
														"name": "StorePostCustomersCustomerOrderClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17184,
									"name": "useGrantOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17185,
											"name": "useGrantOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook verifies the claim order token provided to the customer when they request ownership of an order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGrantOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const confirmOrderRequest = useGrantOrderAccess()\n\n  const handleOrderRequestConfirmation = (\n    token: string\n  ) => {\n    confirmOrderRequest.mutate({\n      token\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17186,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 17187,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 17188,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				17188
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
																},
																"name": "StorePostCustomersCustomerAcceptClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17189,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17190,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17190
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
															"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
														},
														"name": "StorePostCustomersCustomerAcceptClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17127,
									"name": "useOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17128,
											"name": "useOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17129,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17130,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17131,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17133,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17132,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17133,
																		17132
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17134,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17136,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17135,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17136,
																		17135
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17137,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17139,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17138,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17139,
																		17138
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17140,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17142,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17141,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17142,
																		17141
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17143,
									"name": "useCartOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17144,
											"name": "useCartOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order's details by the ID of the cart that was used to create the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartOrder } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Order = ({ cartId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useCartOrder(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17145,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17146,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "orders"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17147,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17149,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17148,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17149,
																		17148
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17150,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17152,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17151,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17152,
																		17151
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17153,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17155,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17154,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17155,
																		17154
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17156,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17158,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17157,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17158,
																		17157
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17159,
									"name": "useOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17160,
											"name": "useOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook looks up an order using filters. If the filters don't narrow down the results to a single order, a "
													},
													{
														"kind": "code",
														"text": "`404`"
													},
													{
														"kind": "text",
														"text": " response is returned with no orders."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrders } from \"medusa-react\"\n\ntype Props = {\n  displayId: number\n  email: string\n}\n\nconst Order = ({\n  displayId,\n  email\n}: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrders({\n    display_id: displayId,\n    email,\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17161,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters used to retrieve the order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17162,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17163,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17164,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																									"qualifiedName": "StoreGetOrdersParams"
																								},
																								"name": "StoreGetOrdersParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17164
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17165,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17167,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17166,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17167,
																		17166
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17168,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17170,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17169,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17170,
																		17169
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17171,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17173,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17172,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17173,
																		17172
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17174,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17176,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17175,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17176,
																		17175
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17177,
										17184,
										17127,
										17143,
										17159
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17127,
										17143,
										17159
									]
								},
								{
									"title": "Mutations",
									"children": [
										17177,
										17184
									]
								}
							]
						},
						{
							"id": 14092,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Payment Collection API Routes](https://docs.medusajs.com/api/store#payment-collections).\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17208,
									"name": "useManageMultiplePaymentSessions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17209,
											"name": "useManageMultiplePaymentSessions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates, updates, or deletes a list of payment sessions of a Payment Collections. If a payment session is not provided in the "
													},
													{
														"kind": "code",
														"text": "`sessions`"
													},
													{
														"kind": "text",
														"text": " array, it's deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add two new payment sessions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 5000,\n        },\n        {\n          provider_id: \"manual\",\n          amount: 5000,\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo update a payment session and another one by not including it in the payload:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 10000,\n          session_id: \"ps_123456\"\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17210,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17211,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17212,
									"name": "useManagePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17213,
											"name": "useManagePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Payment Session for a payment provider in a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useManagePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSession = useManagePaymentSession(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSession = (\n    providerId: string\n  ) => {\n    managePaymentSession.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17214,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17215,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
																	"qualifiedName": "StorePaymentCollectionSessionsReq"
																},
																"name": "StorePaymentCollectionSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
															"qualifiedName": "StorePaymentCollectionSessionsReq"
														},
														"name": "StorePaymentCollectionSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17216,
									"name": "useAuthorizePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17217,
											"name": "useAuthorizePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorizes a Payment Session of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSession = useAuthorizePaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayment = (paymentSessionId: string) => {\n    authorizePaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17218,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17219,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17220,
									"name": "useAuthorizePaymentSessionsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17221,
											"name": "useAuthorizePaymentSessionsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorize the Payment Sessions of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSessionsBatch } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSessions = useAuthorizePaymentSessionsBatch(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayments = (paymentSessionIds: string[]) => {\n    authorizePaymentSessions.mutate({\n      session_ids: paymentSessionIds\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17222,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17223,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17224,
									"name": "usePaymentCollectionRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17225,
											"name": "usePaymentCollectionRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session's data to ensure that it is in sync with the Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollectionRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const refreshPaymentSession = usePaymentCollectionRefreshPaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleRefreshPaymentSession = (paymentSessionId: string) => {\n    refreshPaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_session }) => {\n        console.log(payment_session.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17226,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17227,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsSessionRes"
																		},
																		"name": "StorePaymentCollectionsSessionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsSessionRes"
																},
																"name": "StorePaymentCollectionsSessionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17192,
									"name": "usePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17193,
											"name": "usePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const { \n    payment_collection, \n    isLoading\n  } = usePaymentCollection(\n    paymentCollectionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17194,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17195,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17196,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17198,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17197,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17198,
																		17197
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17199,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17201,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17200,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17201,
																		17200
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17202,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17204,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17203,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17204,
																		17203
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17205,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17207,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17206,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17207,
																		17206
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17208,
										17212,
										17216,
										17220,
										17224,
										17192
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17192
									]
								},
								{
									"title": "Mutations",
									"children": [
										17208,
										17212,
										17216,
										17220,
										17224
									]
								}
							]
						},
						{
							"id": 14093,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Category API Routes](https://docs.medusajs.com/api/store#product-categories_getproductcategories).\n\nProducts can be categoriezed into categories. A product can be associated more than one category.\n\nRelated Guide: [How to use product categories in a storefront](https://docs.medusajs.com/modules/products/storefront/use-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17229,
									"name": "useProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17230,
											"name": "useProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product categories. The product categories can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product categories can also be paginated. This hook can also be used to retrieve a product category by its handle."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo retrieve a product category by its handle:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories,\n    limit,\n    offset, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17231,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/list-product-categories.d.ts",
															"qualifiedName": "StoreGetProductCategoriesParams"
														},
														"name": "StoreGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17232,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesRes"
																		},
																		"name": "StoreGetProductCategoriesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17233,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17234,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17234
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17235,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17240,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17239,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17236,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17237,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17238,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17240,
																		17239,
																		17236,
																		17237,
																		17238
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17241,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17246,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17245,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17242,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17243,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17244,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17246,
																		17245,
																		17242,
																		17243,
																		17244
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17247,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17252,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17251,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17248,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17249,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17250,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17252,
																		17251,
																		17248,
																		17249,
																		17250
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17258,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17257,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17254,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17255,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17256,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17258,
																		17257,
																		17254,
																		17255,
																		17256
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17259,
									"name": "useProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17260,
											"name": "useProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product Category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId,\n    {\n      expand: \"products\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17261,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17262,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/get-product-category.d.ts",
															"qualifiedName": "StoreGetProductCategoriesCategoryParams"
														},
														"name": "StoreGetProductCategoriesCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17263,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
																		},
																		"name": "StoreGetProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17264,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17266,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17265,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17266,
																		17265
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17267,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17269,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17268,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17269,
																		17268
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17270,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17272,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17271,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17272,
																		17271
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17273,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17275,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17274,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17275,
																		17274
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17229,
										17259
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17229,
										17259
									]
								}
							]
						},
						{
							"id": 14094,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Tag API Routes](https://docs.medusajs.com/api/store#product-tags).\n\nProduct tags are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share tags."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17277,
									"name": "useProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17278,
											"name": "useProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    isLoading,\n  } = useProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    limit,\n    offset,\n    isLoading,\n  } = useProductTags({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17279,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/list-product-tags.d.ts",
															"qualifiedName": "StoreGetProductTagsParams"
														},
														"name": "StoreGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17280,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
																			"qualifiedName": "StoreProductTagsListRes"
																		},
																		"name": "StoreProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17281,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17282,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17282
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17283,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17288,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17287,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17284,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17285,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17286,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17288,
																		17287,
																		17284,
																		17285,
																		17286
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17289,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17294,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17293,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17290,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17291,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17292,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17294,
																		17293,
																		17290,
																		17291,
																		17292
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17295,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17300,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17299,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17296,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17297,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17298,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17300,
																		17299,
																		17296,
																		17297,
																		17298
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17301,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17306,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17305,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17302,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17303,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17304,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17306,
																		17305,
																		17302,
																		17303,
																		17304
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17277
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17277
									]
								}
							]
						},
						{
							"id": 14095,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Type API Routes](https://docs.medusajs.com/api/store#product-types).\n\nProduct types are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share types."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17308,
									"name": "useProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17309,
											"name": "useProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types, \n    isLoading,\n  } = useProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types,\n    limit,\n    offset, \n    isLoading,\n  } = useProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17310,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/list-product-types.d.ts",
															"qualifiedName": "StoreGetProductTypesParams"
														},
														"name": "StoreGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17311,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
																			"qualifiedName": "StoreProductTypesListRes"
																		},
																		"name": "StoreProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17312,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17313,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17313
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17314,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17319,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17318,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17315,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17316,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17317,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17319,
																		17318,
																		17315,
																		17316,
																		17317
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17320,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17325,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17324,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17321,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17322,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17323,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17325,
																		17324,
																		17321,
																		17322,
																		17323
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17326,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17331,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17330,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17327,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17328,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17329,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17331,
																		17330,
																		17327,
																		17328,
																		17329
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17332,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17337,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17336,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17333,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17334,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17335,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17337,
																		17336,
																		17333,
																		17334,
																		17335
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17308
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17308
									]
								}
							]
						},
						{
							"id": 14096,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product API Routes](https://docs.medusajs.com/api/store#products).\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards) in a store.\nUsing the methods in this class, you can filter products by categories, collections, sales channels, and more.\n\nRelated Guide: [How to show products in a storefront](https://docs.medusajs.com/modules/products/storefront/show-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17339,
									"name": "useProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17340,
											"name": "useProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated.\nThis hook can also be used to retrieve a product by its handle.\n\nFor accurate and correct pricing of the products based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the specified sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts({\n    expand: \"variants\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { \n    products,\n    limit,\n    offset, \n    isLoading\n  } = useProducts({\n    expand: \"variants\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17341,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
															"qualifiedName": "StoreGetProductsParams"
														},
														"name": "StoreGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17342,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsListRes"
																		},
																		"name": "StoreProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17343,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17344,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
																									"qualifiedName": "StoreGetProductsParams"
																								},
																								"name": "StoreGetProductsParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17344
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17345,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17350,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17349,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17346,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17347,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17348,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17350,
																		17349,
																		17346,
																		17347,
																		17348
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17351,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17356,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17355,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17352,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17353,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17354,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17356,
																		17355,
																		17352,
																		17353,
																		17354
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17362,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17361,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17358,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17359,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17360,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17362,
																		17361,
																		17358,
																		17359,
																		17360
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17363,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17368,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17367,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17364,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17365,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17366,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17368,
																		17367,
																		17364,
																		17365,
																		17366
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17369,
									"name": "useProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17370,
											"name": "useProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product's details. For accurate and correct pricing of the product based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the current sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const { product, isLoading } = useProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17371,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17372,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsRes"
																		},
																		"name": "StoreProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17375,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17374,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17375,
																		17374
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17376,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17378,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17377,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17378,
																		17377
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17379,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17381,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17380,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17381,
																		17380
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17382,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17384,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17383,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17384,
																		17383
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17339,
										17369
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17339,
										17369
									]
								}
							]
						},
						{
							"id": 14097,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Region API Routes](https://docs.medusajs.com/api/store#regions_getregions).\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nCustomers can choose what region they're in, which can be used to change the prices shown based on the region and its currency.\n\nRelated Guide: [How to use regions in a storefront](https://docs.medusajs.com/modules/regions-and-currencies/storefront/use-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17385,
									"name": "useRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17386,
											"name": "useRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of regions. This hook is useful to show the customer all available regions to choose from."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions?.length && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>\n              {region.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17387,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsListRes"
																		},
																		"name": "StoreRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17388,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17393,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17392,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17389,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17390,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17391,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17393,
																		17392,
																		17389,
																		17390,
																		17391
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17399,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17398,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17395,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17396,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17397,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17399,
																		17398,
																		17395,
																		17396,
																		17397
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17405,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17404,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17401,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17402,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17403,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17405,
																		17404,
																		17401,
																		17402,
																		17403
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17406,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17411,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17410,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17407,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17408,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17409,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17411,
																		17410,
																		17407,
																		17408,
																		17409
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17412,
									"name": "useRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17413,
											"name": "useRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const { region, isLoading } = useRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17414,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17415,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsRes"
																		},
																		"name": "StoreRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17416,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17418,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17417,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17418,
																		17417
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17421,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17420,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17421,
																		17420
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17422,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17424,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17423,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17424,
																		17423
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17425,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17427,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17426,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17427,
																		17426
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17385,
										17412
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17385,
										17412
									]
								}
							]
						},
						{
							"id": 14098,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Return Reason API Routes](https://docs.medusajs.com/api/store#return-reasons).\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17428,
									"name": "useReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17429,
											"name": "useReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Return Reasons. This is useful when implementing a Create Return flow in the storefront."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { \n    return_reasons, \n    isLoading\n  } = useReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons?.length && (\n        <ul>\n          {return_reasons.map((returnReason) => (\n            <li key={returnReason.id}>\n              {returnReason.label}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17430,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsListRes"
																		},
																		"name": "StoreReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17431,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17433,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17432,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17433,
																		17432
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17434,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17436,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17435,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17436,
																		17435
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17437,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17439,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17438,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17439,
																		17438
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17440,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17442,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17441,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17442,
																		17441
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17443,
									"name": "useReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17444,
											"name": "useReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Return Reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { \n    return_reason, \n    isLoading\n  } = useReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17445,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17446,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsRes"
																		},
																		"name": "StoreReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17447,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17449,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17448,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17449,
																		17448
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17450,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17452,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17451,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17452,
																		17451
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17453,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17455,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17454,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17455,
																		17454
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17456,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17458,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17457,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17458,
																		17457
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17428,
										17443
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17428,
										17443
									]
								}
							]
						},
						{
							"id": 14099,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Store Return API Routes](https://docs.medusajs.com/api/store#returns).\n\nA return can be created by a customer to return items in an order.\n\nRelated Guide: [How to create a return in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-return)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17459,
									"name": "useCreateReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17460,
											"name": "useCreateReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return for an order. If a return shipping method is specified, the return is automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateReturn } from \"medusa-react\"\n\ntype CreateReturnData = {\n  items: {\n    item_id: string,\n    quantity: number\n  }[]\n  return_shipping: {\n    option_id: string\n  }\n}\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateReturn = ({ orderId }: Props) => {\n  const createReturn = useCreateReturn()\n  // ...\n\n  const handleCreate = (data: CreateReturnData) => {\n    createReturn.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ return: returnData }) => {\n        console.log(returnData.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturn\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17461,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
																	"qualifiedName": "StorePostReturnsReq"
																},
																"name": "StorePostReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
															"qualifiedName": "StorePostReturnsReq"
														},
														"name": "StorePostReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17459
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										17459
									]
								}
							]
						},
						{
							"id": 14100,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Shipping Option API Routes](https://docs.medusajs.com/api/store#shipping-options).\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17462,
									"name": "useShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17463,
											"name": "useShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered using the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const { \n    shipping_options, \n    isLoading, \n  } = useShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options?.length && \n        shipping_options?.length > 0 && (\n        <ul>\n          {shipping_options?.map((shipping_option) => (\n            <li key={shipping_option.id}>\n              {shipping_option.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17464,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The filters to apply on the shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/list-options.d.ts",
															"qualifiedName": "StoreGetShippingOptionsParams"
														},
														"name": "StoreGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17465,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17466,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17467,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17467
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17468,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17470,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17469,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17470,
																		17469
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17471,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17473,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17472,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17473,
																		17472
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17474,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17476,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17475,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17476,
																		17475
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17477,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17479,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17478,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17479,
																		17478
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17480,
									"name": "useCartShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17481,
											"name": "useCartShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options available for a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartShippingOptions } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst ShippingOptions = ({ cartId }: Props) => {\n  const { shipping_options, isLoading } =\n    useCartShippingOptions(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No shipping options</span>\n      )}\n      {shipping_options && (\n        <ul>\n          {shipping_options.map(\n            (shipping_option) => (\n              <li key={shipping_option.id}>\n                {shipping_option.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17482,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17483,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "shipping_options"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17484,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17486,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17485,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17486,
																		17485
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17487,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17489,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17488,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17489,
																		17488
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17490,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17492,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17491,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17492,
																		17491
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17493,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17495,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17494,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17495,
																		17494
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17462,
										17480
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17462,
										17480
									]
								}
							]
						},
						{
							"id": 14101,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Swap API Routes](https://docs.medusajs.com/api/store#swaps).\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to create a swap in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-swap)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17512,
									"name": "useCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17513,
											"name": "useCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Swap for an Order. This will also create a return and associate it with the swap. If a return shipping option is specified, the return will automatically be fulfilled.\nTo complete the swap, you must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCompleteCart",
														"target": 16881
													},
													{
														"kind": "text",
														"text": " hook passing it the ID of the swap's cart.\n\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during swap creation or the request is interrupted for any reason, the swap creation can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\ntype CreateData = {\n  return_items: {\n    item_id: string\n    quantity: number\n  }[]\n  additional_items: {\n    variant_id: string\n    quantity: number\n  }[]\n  return_shipping_option: string\n}\n\nconst CreateSwap = ({\n  orderId\n}: Props) => {\n  const createSwap = useCreateSwap()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createSwap.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ swap }) => {\n        console.log(swap.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17514,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
																	"qualifiedName": "StorePostSwapsReq"
																},
																"name": "StorePostSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
															"qualifiedName": "StorePostSwapsReq"
														},
														"name": "StorePostSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17496,
									"name": "useCartSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17497,
											"name": "useCartSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Swap's details by the ID of its cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartSwap } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Swap = ({ cartId }: Props) => {\n  const { \n    swap, \n    isLoading, \n  } = useCartSwap(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17498,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the swap's cart."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17499,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17530,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																			"qualifiedName": "StoreSwapsRes"
																		},
																		"name": "StoreSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "swaps"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17500,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17502,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17501,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17502,
																		17501
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17503,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17505,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17504,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17505,
																		17504
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17506,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17508,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17507,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17508,
																		17507
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17509,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17511,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17510,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17511,
																		17510
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17512,
										17496
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17496
									]
								},
								{
									"title": "Mutations",
									"children": [
										17512
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								14085,
								14086,
								14087,
								14088,
								14089,
								14090,
								14091,
								14092,
								14093,
								14094,
								14095,
								14096,
								14097,
								14098,
								14099,
								14100,
								14101
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						14044,
						14084
					]
				}
			]
		},
		{
			"id": 14194,
			"name": "CartContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart context available if the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CartProvider",
						"target": 14212,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " is used previously in the React components tree."
					}
				]
			},
			"children": [
				{
					"id": 14206,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currently-used cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CartState.cart"
					}
				},
				{
					"id": 14195,
					"name": "setCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the cart object."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14196,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14197,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14198,
											"name": "cart",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the cart."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
															"qualifiedName": "Cart"
														},
														"name": "Cart",
														"package": "@medusajs/medusa"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "refundable_amount"
															},
															{
																"type": "literal",
																"value": "refunded_total"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14199,
					"name": "pay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to select a payment processor during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useSetPaymentSession",
								"target": 16903,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
									"qualifiedName": "StorePostCartsCartPaymentSessionReq"
								},
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14200,
					"name": "createCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to create a cart.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreateCart",
								"target": 16874,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
											"qualifiedName": "StorePostCartReq"
										},
										"name": "StorePostCartReq",
										"package": "@medusajs/medusa"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14201,
					"name": "startCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to initialize payment sessions during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreatePaymentSession",
								"target": 16885,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14202,
					"name": "completeCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to complete the cart and place the order.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCompleteCart",
								"target": 16881,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCompleteCartRes"
										},
										"name": "StoreCompleteCartRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14203,
					"name": "updateCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to update a cart’s details such as region, customer email, shipping address, and more.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useUpdateCart",
								"target": 16877,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
									"qualifiedName": "StorePostCartsCartReq"
								},
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14204,
					"name": "addShippingMethod",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to add a shipping method to the cart during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useAddShippingMethodToCart",
								"target": 16907,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
									"qualifiedName": "StorePostCartsCartShippingMethodReq"
								},
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14205,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14206,
						14195,
						14199,
						14200,
						14201,
						14202,
						14203,
						14204,
						14205
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
						"qualifiedName": "CartState"
					},
					"name": "CartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 14209,
			"name": "CartProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14211,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14211
					]
				}
			]
		},
		{
			"id": 14102,
			"name": "MedusaContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14103,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa JS Client instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
							"qualifiedName": "Medusa"
						},
						"name": "Medusa",
						"package": "@medusajs/medusa-js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14103
					]
				}
			]
		},
		{
			"id": 14106,
			"name": "MedusaProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14107,
					"name": "baseUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL to your Medusa backend."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14108,
					"name": "queryClientProviderProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to set the Tanstack Query client. The object requires a "
							},
							{
								"kind": "code",
								"text": "`client`"
							},
							{
								"kind": "text",
								"text": " property, \nwhich should be an instance of [QueryClient](https://tanstack.com/query/v4/docs/react/reference/QueryClient)."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.d.ts",
							"qualifiedName": "QueryClientProviderProps"
						},
						"name": "QueryClientProviderProps",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 14110,
					"name": "apiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "API key used for authenticating admin requests. Follow [this guide](https://docs.medusajs.com/api/admin#authentication) to learn how to create an API key for an admin user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14111,
					"name": "publishableApiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Publishable API key used for storefront requests. You can create a publishable API key either using the \n[admin APIs](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys) or the \n[Medusa admin](https://docs.medusajs.com/user-guide/settings/publishable-api-keys#create-publishable-api-key)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14112,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of times to retry a request if it fails."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14113,
					"name": "customHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of custom headers to pass with every request. Each key of the object is the name of the header, and its value is the header's value."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`{}`"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 14114,
					"name": "medusaClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of the Medusa JS Client. If you don't provide an instance, one will be created using the "
							},
							{
								"kind": "code",
								"text": "`baseUrl`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`apiKey`"
							},
							{
								"kind": "text",
								"text": ", \n"
							},
							{
								"kind": "code",
								"text": "`publishableApiKey`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`maxRetries`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`customHeaders`"
							},
							{
								"kind": "text",
								"text": " props."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
							"qualifiedName": "Medusa"
						},
						"name": "Medusa",
						"package": "@medusajs/medusa-js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14107,
						14108,
						14110,
						14111,
						14112,
						14113,
						14114
					]
				}
			]
		},
		{
			"id": 14118,
			"name": "Item",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A session cart's item."
					}
				]
			},
			"children": [
				{
					"id": 14119,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant represented by this item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/src/types.ts",
							"qualifiedName": "ConvertDateToString"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
											"qualifiedName": "ProductVariant"
										},
										"name": "ProductVariant",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "beforeInsert"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						],
						"name": "ConvertDateToString",
						"package": "medusa-react"
					}
				},
				{
					"id": 14120,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity added in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14121,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14119,
						14120,
						14121
					]
				}
			]
		},
		{
			"id": 14122,
			"name": "SessionCartState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14123,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14256,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 14124,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14118,
							"name": "Item",
							"package": "medusa-react"
						}
					}
				},
				{
					"id": 14125,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14126,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14123,
						14124,
						14125,
						14126
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14127,
					"name": "SessionCartContextState"
				}
			]
		},
		{
			"id": 14127,
			"name": "SessionCartContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14169,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14256,
						"name": "RegionInfo",
						"package": "medusa-react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14123,
						"name": "SessionCartState.region"
					}
				},
				{
					"id": 14170,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14118,
							"name": "Item",
							"package": "medusa-react"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14124,
						"name": "SessionCartState.items"
					}
				},
				{
					"id": 14171,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14125,
						"name": "SessionCartState.totalItems"
					}
				},
				{
					"id": 14172,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14126,
						"name": "SessionCartState.total"
					}
				},
				{
					"id": 14128,
					"name": "setRegion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the region."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14130,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14131,
											"name": "region",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14256,
												"name": "RegionInfo",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14132,
					"name": "addItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function adds an item to the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14133,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14134,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14135,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14118,
												"name": "Item",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14136,
					"name": "removeItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function removes an item from the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14137,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14138,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14139,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14140,
					"name": "updateItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item in the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14141,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14142,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14143,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14144,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 14118,
														"name": "Item",
														"package": "medusa-react"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14145,
					"name": "setItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the items in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14146,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14147,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14148,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to set in the cart."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14118,
													"name": "Item",
													"package": "medusa-react"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14149,
					"name": "updateItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14150,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14151,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14152,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14153,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new quantity of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14154,
					"name": "incrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function increments the item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14155,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14156,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14157,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14158,
					"name": "decrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function decrements the item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14159,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14160,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14161,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 14162,
					"name": "getItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function retrieves an item's details by its ID."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The item in the cart, if found."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14163,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14164,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14165,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 14118,
												"name": "Item",
												"package": "medusa-react"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 14166,
					"name": "clearItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes all items in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14167,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14168,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14169,
						14170,
						14171,
						14172,
						14128,
						14132,
						14136,
						14140,
						14145,
						14149,
						14154,
						14158,
						14162,
						14166
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14122,
					"name": "SessionCartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 14186,
			"name": "SessionCartProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14188,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the session cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14122,
						"name": "SessionCartState",
						"package": "medusa-react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14188
					]
				}
			]
		},
		{
			"id": 14215,
			"name": "FormatVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 14216,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14255,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 14217,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14256,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 14218,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14219,
					"name": "minimumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14220,
					"name": "maximumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method.\nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14221,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A BCP 47 language tag. The default value is "
							},
							{
								"kind": "code",
								"text": "`en-US`"
							},
							{
								"kind": "text",
								"text": ". This is passed as a first parameter to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14216,
						14217,
						14218,
						14219,
						14220,
						14221
					]
				}
			]
		},
		{
			"id": 14225,
			"name": "ComputeVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 14226,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14255,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 14227,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 14256,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 14228,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14226,
						14227,
						14228
					]
				}
			]
		},
		{
			"id": 14236,
			"name": "ComputeAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to compute an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14237,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14238,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14239,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14256,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 14240,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14238,
								14239,
								14240
							]
						}
					]
				}
			}
		},
		{
			"id": 14244,
			"name": "FormatAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14245,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14246,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14247,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14256,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 14248,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14249,
							"name": "minimumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14250,
							"name": "maximumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14251,
							"name": "locale",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A BCP 47 language tag. The default value is "
									},
									{
										"kind": "code",
										"text": "`en-US`"
									},
									{
										"kind": "text",
										"text": ". This is passed as a first parameter to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14246,
								14247,
								14248,
								14249,
								14250,
								14251
							]
						}
					]
				}
			}
		},
		{
			"id": 14257,
			"name": "adminAuthKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_auth"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14333,
			"name": "useAdminConfirmBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 14334,
					"name": "useAdminConfirmBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When a batch job is created, it's not executed automatically if "
							},
							{
								"kind": "code",
								"text": "`dry_run`"
							},
							{
								"kind": "text",
								"text": " is set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ". This hook confirms that the batch job should be executed."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const confirmBatchJob = useAdminConfirmBatchJob(batchJobId)\n  // ...\n\n  const handleConfirm = () => {\n    confirmBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 14335,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the batch job."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14336,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
													"qualifiedName": "AdminBatchJobRes"
												},
												"name": "AdminBatchJobRes",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
											"qualifiedName": "AdminBatchJobRes"
										},
										"name": "AdminBatchJobRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 14279,
			"name": "adminBatchJobsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_batches"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14341,
			"name": "AdminUpdateClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14342,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14343,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14343
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14352,
			"name": "AdminFulfillClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim's fulfillment."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14353,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14354,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14354
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14359,
			"name": "AdminCancelClaimFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cancelation details."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14360,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14361,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14362,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14361,
								14362
							]
						}
					]
				}
			}
		},
		{
			"id": 14375,
			"name": "adminCollectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14445,
			"name": "adminCurrenciesKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_currencies"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14647,
			"name": "adminCustomerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_customers"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14701,
			"name": "adminDiscountKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14702,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14703,
							"name": "detailCondition",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14704,
									"name": "detailCondition",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14705,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14706,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_discounts"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "condition"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 14707,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_discounts"
									}
								]
							}
						},
						{
							"id": 14708,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14709,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14710,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 14711,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14712,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14713,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 14714,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14715,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14716,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14716
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 14717,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14718,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14719,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 14720,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14721,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14722,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 14723,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14707,
								14708,
								14711,
								14717,
								14720
							]
						},
						{
							"title": "Methods",
							"children": [
								14703
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 14926,
			"name": "AdminDraftOrderUpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-line-item.d.ts",
							"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
						},
						"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14927,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14928,
									"name": "item_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14928
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14856,
			"name": "adminDraftOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_draft_orders"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 14933,
			"name": "adminGiftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15079,
			"name": "AdminUpdateLocationLevelReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-location-level.d.ts",
							"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
						},
						"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15080,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15081,
									"name": "stockLocationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the location level to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15081
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14991,
			"name": "adminInventoryItemsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_inventory_items"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15117,
			"name": "useAdminCreateInvite",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 15118,
					"name": "useAdminCreateInvite",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 15119,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "AdminPostInvitesPayload"
										},
										"name": "AdminPostInvitesPayload",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "AdminPostInvitesPayload"
								},
								"name": "AdminPostInvitesPayload",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 15094,
			"name": "adminInviteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_invites"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15124,
			"name": "adminNoteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notes"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15182,
			"name": "adminNotificationKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notifications"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15217,
			"name": "adminOrderEditsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_order_edits"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15307,
			"name": "adminOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15308,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15309,
							"name": "detailOrder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15310,
									"name": "detailOrder",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 15311,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15312,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/medusa"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 15313,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 15314,
																"name": "expand",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "inline-tag",
																			"tag": "@inheritDoc",
																			"text": "RequestQueryFields.expand"
																		}
																	],
																	"blockTags": [
																		{
																			"tag": "@deprecated",
																			"content": []
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 15315,
																"name": "fields",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "inline-tag",
																			"tag": "@inheritDoc",
																			"text": "RequestQueryFields.fields"
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	15314,
																	15315
																]
															}
														]
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 15316,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_orders"
									}
								]
							}
						},
						{
							"id": 15317,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15318,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15319,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15320,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15321,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15322,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15323,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15324,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15325,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15325
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15326,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15327,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15328,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15329,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15330,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15331,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15332,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15316,
								15317,
								15320,
								15326,
								15329
							]
						},
						{
							"title": "Methods",
							"children": [
								15309
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 15427,
			"name": "adminPaymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15456,
			"name": "adminPaymentQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "payment"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15481,
			"name": "adminPriceListKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15482,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15483,
							"name": "detailProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15484,
									"name": "detailProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 15485,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15486,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_price_lists"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "products"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 15487,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_price_lists"
									}
								]
							}
						},
						{
							"id": 15488,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15489,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15490,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15491,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15492,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15493,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15494,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15495,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15496,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15496
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15497,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15498,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15499,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15500,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15501,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15502,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15503,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15487,
								15488,
								15491,
								15497,
								15500
							]
						},
						{
							"title": "Methods",
							"children": [
								15483
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 15612,
			"name": "adminProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15679,
			"name": "adminProductTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15710,
			"name": "adminProductTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 15878,
			"name": "AdminUpdateVariantReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-variant.d.ts",
							"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
						},
						"name": "AdminPostProductsProductVariantsVariantReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15879,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15880,
									"name": "variant_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15880
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15893,
			"name": "AdminUpdateProductOptionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-option.d.ts",
							"qualifiedName": "AdminPostProductsProductOptionsOption"
						},
						"name": "AdminPostProductsProductOptionsOption",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15894,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15895,
									"name": "option_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15895
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 15741,
			"name": "adminProductKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15742,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15743,
							"name": "detailVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15744,
									"name": "detailVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 15745,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15746,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_products"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "variants"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 15747,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_products"
									}
								]
							}
						},
						{
							"id": 15748,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15749,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15750,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15751,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15752,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15753,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15754,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15755,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15756,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15756
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15757,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15758,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15759,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15760,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15761,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15762,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15763,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15747,
								15748,
								15751,
								15757,
								15760
							]
						},
						{
							"title": "Methods",
							"children": [
								15743
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 15811,
			"name": "useAdminProductVariants",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 15812,
					"name": "useAdminProductVariants",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 15813,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15814,
							"name": "query",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configurations to apply on the retrieved product variants."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/list-variants.d.ts",
									"qualifiedName": "AdminGetProductsVariantsParams"
								},
								"name": "AdminGetProductsVariantsParams",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 15815,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17530,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
													"qualifiedName": "AdminProductsListVariantsRes"
												},
												"name": "AdminProductsListVariantsRes",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_products"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "variants"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								],
								"name": "UseQueryOptionsWrapper",
								"package": "medusa-react"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15816,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15821,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 15820,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 15817,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15818,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15819,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15821,
												15820,
												15817,
												15818,
												15819
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 15822,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15827,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 15826,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 15823,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15824,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15825,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15827,
												15826,
												15823,
												15824,
												15825
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 15828,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15833,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 15832,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 15829,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15830,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15831,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15833,
												15832,
												15829,
												15830,
												15831
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 15834,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15839,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 15838,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 15835,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15836,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15837,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15839,
												15838,
												15835,
												15836,
												15837
											]
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 15904,
			"name": "adminPublishableApiKeysKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 15905,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15906,
							"name": "detailSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15907,
									"name": "detailSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 15908,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15909,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_publishable_api_keys"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "sales_channels"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 15910,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_publishable_api_keys"
									}
								]
							}
						},
						{
							"id": 15911,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15912,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15913,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15914,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15915,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15916,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15917,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 15918,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 15919,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		15919
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15920,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15921,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15922,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 15923,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15924,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 15925,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 15926,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15910,
								15911,
								15914,
								15920,
								15923
							]
						},
						{
							"title": "Methods",
							"children": [
								15906
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 16013,
			"name": "adminRegionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_regions"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16122,
			"name": "adminReservationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_reservations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16169,
			"name": "adminReturnReasonKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_return_reasons"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16212,
			"name": "adminReturnKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_returns"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16248,
			"name": "adminSalesChannelsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_sales_channels"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16332,
			"name": "adminShippingOptionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shipping_options"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16390,
			"name": "adminShippingProfileKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shippingProfiles"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16433,
			"name": "adminStockLocationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_stock_locations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16491,
			"name": "adminStoreKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_store"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16601,
			"name": "AdminFulfillSwapReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-swap.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16602,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16603,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16603
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16608,
			"name": "AdminCreateSwapShipmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap-shipment.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16609,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16610,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16610
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16619,
			"name": "AdminCancelSwapFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap's fulfillment to cancel."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16620,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16621,
							"name": "swap_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The swap's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16622,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16621,
								16622
							]
						}
					]
				}
			}
		},
		{
			"id": 16546,
			"name": "adminSwapKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_swaps"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16633,
			"name": "adminTaxRateKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_tax_rates"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16728,
			"name": "adminUserKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_users"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16792,
			"name": "adminVariantKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_variants"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16873,
			"name": "CreateCartReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to create."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
							"qualifiedName": "StorePostCartReq"
						},
						"name": "StorePostCartReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 16889,
			"name": "UpdatePaymentSessionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to update."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-payment-session.d.ts",
							"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
						},
						"name": "StorePostCartsCartPaymentSessionUpdateReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16890,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16891,
									"name": "provider_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment provider's identifier."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16891
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16896,
			"name": "RefreshPaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to refresh."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16897,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16898,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16898
							]
						}
					]
				}
			}
		},
		{
			"id": 16911,
			"name": "DeletePaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to delete."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16912,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16913,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16913
							]
						}
					]
				}
			}
		},
		{
			"id": 16856,
			"name": "cartKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "carts"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16921,
			"name": "collectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17037,
			"name": "UpdateMeReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/update-customer.d.ts",
							"qualifiedName": "StorePostCustomersCustomerReq"
						},
						"name": "StorePostCustomersCustomerReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17038,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17039,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The customer's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17039
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16968,
			"name": "customerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16969,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16970,
							"name": "orders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16971,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16972,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16973,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "customers"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "literal",
															"value": "orders"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 16974,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "customers"
									}
								]
							}
						},
						{
							"id": 16975,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16976,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16977,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 16978,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16979,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16980,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16981,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16982,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16983,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16983
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 16984,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16985,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16986,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 16987,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16988,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16989,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16990,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16970,
								16974,
								16975,
								16978,
								16984,
								16987
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17043,
			"name": "giftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17064,
			"name": "UpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-line-item.d.ts",
							"qualifiedName": "StorePostCartsCartLineItemsItemReq"
						},
						"name": "StorePostCartsCartLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17065,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17066,
									"name": "lineId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17066
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17079,
			"name": "orderEditQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "orderEdit"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17104,
			"name": "orderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17105,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17106,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17107,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17108,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17109,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "orders"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "literal",
															"value": "cart"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 17110,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "orders"
									}
								]
							}
						},
						{
							"id": 17111,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17113,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17114,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17115,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17116,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17117,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17118,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17119,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																					"qualifiedName": "StoreGetOrdersParams"
																				},
																				"name": "StoreGetOrdersParams",
																				"package": "@medusajs/medusa"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17119
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17120,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17121,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17122,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17123,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17124,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17125,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17126,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17106,
								17110,
								17111,
								17114,
								17120,
								17123
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17191,
			"name": "paymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17228,
			"name": "storeProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17276,
			"name": "productTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17307,
			"name": "productTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17338,
			"name": "productKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 17536,
				"typeArguments": [
					{
						"type": "literal",
						"value": "products"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
							"qualifiedName": "StoreGetProductsParams"
						},
						"name": "StoreGetProductsParams",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17515,
			"name": "queryKeysFactory",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 17516,
					"name": "queryKeysFactory",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 17517,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 17518,
							"name": "TListQueryType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 17519,
							"name": "TDetailQueryType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 17520,
							"name": "globalKey",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17517,
								"name": "T",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 17536,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17517,
								"name": "T",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17518,
								"name": "TListQueryType",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17519,
								"name": "TDetailQueryType",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						],
						"name": "TQueryKey",
						"package": "medusa-react"
					}
				}
			]
		},
		{
			"id": 17521,
			"name": "useLocalStorage",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 17522,
					"name": "useLocalStorage",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 17523,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17524,
							"name": "initialState",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 17525,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"signatures": [
											{
												"id": 17526,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"parameters": [
													{
														"id": 17527,
														"name": "data",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 17528,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"signatures": [
											{
												"id": 17529,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 17530,
			"name": "UseQueryOptionsWrapper",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17531,
					"name": "TQueryFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 17532,
					"name": "E",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Error"
						},
						"name": "Error",
						"package": "typescript"
					}
				},
				{
					"id": 17533,
					"name": "TQueryKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
							"qualifiedName": "QueryKey"
						},
						"name": "QueryKey",
						"package": "@tanstack/query-core"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
							"qualifiedName": "QueryKey"
						},
						"name": "QueryKey",
						"package": "@tanstack/query-core"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseQueryOptions"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 17531,
								"name": "TQueryFn",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17532,
								"name": "E",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17531,
								"name": "TQueryFn",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17533,
								"name": "TQueryKey",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						],
						"name": "UseQueryOptions",
						"package": "@tanstack/react-query"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "queryKey"
							},
							{
								"type": "literal",
								"value": "queryFn"
							},
							{
								"type": "literal",
								"value": "select"
							},
							{
								"type": "literal",
								"value": "refetchInterval"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 14256,
			"name": "RegionInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "currency_code"
							},
							{
								"type": "literal",
								"value": "tax_code"
							},
							{
								"type": "literal",
								"value": "tax_rate"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 17534,
			"name": "ProductVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "ConvertDateToString"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
									"qualifiedName": "ProductVariant"
								},
								"name": "ProductVariantEntity",
								"package": "@medusajs/medusa",
								"qualifiedName": "ProductVariant"
							},
							{
								"type": "literal",
								"value": "beforeInsert"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				],
				"name": "ConvertDateToString",
				"package": "medusa-react"
			}
		},
		{
			"id": 14255,
			"name": "ProductVariantInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 17534,
						"name": "ProductVariant",
						"package": "medusa-react"
					},
					{
						"type": "literal",
						"value": "prices"
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 17535,
			"name": "Cart",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "literal",
					"value": "cart"
				},
				"objectType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
						"qualifiedName": "StoreCartsRes"
					},
					"name": "StoreCartsRes",
					"package": "@medusajs/medusa"
				}
			}
		},
		{
			"id": 17536,
			"name": "TQueryKey",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17555,
					"name": "TKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17556,
					"name": "TListQuery",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 17557,
					"name": "TDetailQuery",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17537,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17538,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 17555,
										"name": "TKey",
										"package": "medusa-react",
										"refersToTypeParameter": true
									}
								]
							}
						},
						{
							"id": 17539,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17540,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17541,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "all"
															},
															"objectType": {
																"type": "reference",
																"target": 17536,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 17555,
																		"name": "TKey",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TQueryKey",
																"package": "medusa-react"
															}
														}
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17542,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17543,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17544,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17547,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 17556,
														"name": "TListQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "ReturnType"
															},
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "lists"
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 17536,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 17555,
																				"name": "TKey",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "TQueryKey",
																		"package": "medusa-react"
																	}
																}
															],
															"name": "ReturnType",
															"package": "typescript"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17545,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17546,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": 17556,
																				"name": "TListQuery",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17546
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17548,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17549,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17550,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "all"
															},
															"objectType": {
																"type": "reference",
																"target": 17536,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 17555,
																		"name": "TKey",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TQueryKey",
																"package": "medusa-react"
															}
														}
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17551,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17552,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17553,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17554,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 17557,
														"name": "TDetailQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "ReturnType"
															},
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "details"
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 17536,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 17555,
																				"name": "TKey",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "TQueryKey",
																		"package": "medusa-react"
																	}
																}
															],
															"name": "ReturnType",
															"package": "typescript"
														}
													},
													{
														"type": "reference",
														"target": 17557,
														"name": "TDetailQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17538,
								17539,
								17542,
								17548,
								17551
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				14038,
				14042,
				14043
			]
		},
		{
			"title": "Interfaces",
			"children": [
				14194,
				14209,
				14102,
				14106,
				14118,
				14122,
				14127,
				14186,
				14215,
				14225
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				14236,
				14244,
				14341,
				14352,
				14359,
				14926,
				15079,
				15878,
				15893,
				16601,
				16608,
				16619,
				16873,
				16889,
				16896,
				16911,
				17037,
				17064,
				17530,
				14256,
				17534,
				14255,
				17535,
				17536
			]
		},
		{
			"title": "Variables",
			"children": [
				14257,
				14279,
				14375,
				14445,
				14647,
				14701,
				14856,
				14933,
				14991,
				15094,
				15124,
				15182,
				15217,
				15307,
				15427,
				15456,
				15481,
				15612,
				15679,
				15710,
				15741,
				15904,
				16013,
				16122,
				16169,
				16212,
				16248,
				16332,
				16390,
				16433,
				16491,
				16546,
				16633,
				16728,
				16792,
				16856,
				16921,
				16968,
				17043,
				17079,
				17104,
				17191,
				17228,
				17276,
				17307,
				17338
			]
		},
		{
			"title": "Functions",
			"children": [
				14333,
				15117,
				15811,
				17515,
				17521
			]
		}
	],
	"packageName": "medusa-react",
	"symbolIdMap": {
		"14037": {
			"sourceFileName": "../../../packages/medusa-react/src/index.ts",
			"qualifiedName": ""
		},
		"14102": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState"
		},
		"14103": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState.client"
		},
		"14104": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"14105": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"14106": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps"
		},
		"14107": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.baseUrl"
		},
		"14108": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.queryClientProviderProps"
		},
		"14110": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.apiKey"
		},
		"14111": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.publishableApiKey"
		},
		"14112": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.maxRetries"
		},
		"14113": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.customHeaders"
		},
		"14114": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.medusaClient"
		},
		"14115": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"14116": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"14117": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "__0"
		},
		"14118": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item"
		},
		"14119": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.variant"
		},
		"14120": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.quantity"
		},
		"14121": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.total"
		},
		"14122": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState"
		},
		"14123": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"14124": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"14125": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"14126": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"14127": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState"
		},
		"14128": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setRegion"
		},
		"14129": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14130": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14131": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "region"
		},
		"14132": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.addItem"
		},
		"14133": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14134": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14135": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"14136": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.removeItem"
		},
		"14137": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14138": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14139": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14140": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItem"
		},
		"14141": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14142": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14143": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14144": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"14145": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setItems"
		},
		"14146": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14147": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14148": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "items"
		},
		"14149": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItemQuantity"
		},
		"14150": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14151": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14152": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14153": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "quantity"
		},
		"14154": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.incrementItemQuantity"
		},
		"14155": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14156": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14157": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14158": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.decrementItemQuantity"
		},
		"14159": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14160": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14161": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14162": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.getItem"
		},
		"14163": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14164": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14165": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"14166": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.clearItems"
		},
		"14167": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14168": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"14169": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"14170": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"14171": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"14172": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"14186": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps"
		},
		"14188": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps.initialState"
		},
		"14189": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"14190": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"14191": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__0"
		},
		"14192": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"14193": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"14194": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext"
		},
		"14195": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.setCart"
		},
		"14196": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"14197": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"14198": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "cart"
		},
		"14199": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.pay"
		},
		"14200": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.createCart"
		},
		"14201": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.startCheckout"
		},
		"14202": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.completeCheckout"
		},
		"14203": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.updateCart"
		},
		"14204": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.addShippingMethod"
		},
		"14205": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.totalItems"
		},
		"14206": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartState.cart"
		},
		"14207": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"14208": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"14209": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps"
		},
		"14211": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps.initialState"
		},
		"14212": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"14213": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"14214": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__0"
		},
		"14215": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatVariantPriceParams"
		},
		"14216": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"14217": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"14218": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"14219": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"14220": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"14221": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"14222": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"14223": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"14224": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"14225": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeVariantPriceParams"
		},
		"14226": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"14227": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"14228": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"14229": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"14230": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"14231": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"14232": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"14233": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"14234": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "variant"
		},
		"14235": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "region"
		},
		"14236": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeAmountParams"
		},
		"14237": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"14238": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"14239": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"14240": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"14241": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"14242": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"14243": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"14244": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatAmountParams"
		},
		"14245": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"14246": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"14247": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"14248": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"14249": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"14250": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"14251": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"14252": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"14253": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"14254": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"14255": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "ProductVariantInfo"
		},
		"14256": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "RegionInfo"
		},
		"14257": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "adminAuthKeys"
		},
		"14258": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"14259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"14260": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "options"
		},
		"14261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"14262": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"14263": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14264": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"14265": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"14266": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"14268": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"14269": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"14271": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"14272": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"14274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"14275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"14276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"14277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"14278": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"14279": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "adminBatchJobsKeys"
		},
		"14280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"14281": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"14282": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "query"
		},
		"14283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"14284": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14285": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14287": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14288": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14289": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14290": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"14291": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14293": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14294": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14295": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14296": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"14297": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14299": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14300": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14301": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14302": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"14303": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14304": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14305": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14306": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14307": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14308": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"14309": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14310": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"14311": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"14312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "id"
		},
		"14313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"14314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14315": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"14316": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14317": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14318": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"14319": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14320": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14321": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"14322": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14323": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"14324": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"14325": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14326": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"14327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"14328": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"14329": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"14330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"14331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"14332": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"14333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"14334": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"14335": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"14336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"14337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"14338": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"14339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14340": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14341": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminUpdateClaimReq"
		},
		"14342": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"14343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"14344": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"14345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"14346": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14347": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14348": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"14349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"14350": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14352": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminFulfillClaimReq"
		},
		"14353": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"14354": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"14355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"14356": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"14357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14358": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14359": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminCancelClaimFulfillmentReq"
		},
		"14360": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"14361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"14362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"14363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"14364": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"14365": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14366": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14367": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"14368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"14369": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"14370": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"14371": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"14372": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"14373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"14374": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"14375": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "adminCollectionKeys"
		},
		"14376": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"14377": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"14378": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "query"
		},
		"14379": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"14380": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14381": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14383": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14384": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14385": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14386": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"14387": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14389": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14390": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14391": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14392": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"14393": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14395": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14396": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14397": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"14399": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14401": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14402": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14403": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"14405": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"14407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"14408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "id"
		},
		"14409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"14410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14411": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"14412": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14414": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"14415": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14417": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"14418": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"14420": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"14421": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"14423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"14424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"14425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"14426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"14427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"14428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"14429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"14430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"14431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"14432": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"14433": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"14434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"14435": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"14436": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"14437": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"14438": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"14439": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"14440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"14441": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"14442": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"14443": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "code"
		},
		"14444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "options"
		},
		"14445": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "adminCurrenciesKeys"
		},
		"14446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"14447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"14448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "query"
		},
		"14449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "options"
		},
		"14450": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14451": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"14453": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14454": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14455": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14456": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"14457": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"14459": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14460": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14461": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14462": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"14463": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"14465": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14466": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14467": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14468": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"14469": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14470": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"14471": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14472": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14473": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14474": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"14475": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14476": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"14477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"14478": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"14479": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"14480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"14481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"14482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"14483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"14484": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"14485": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TPayload"
		},
		"14486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"14487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"14488": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"14489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"14490": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"14491": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"14492": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"14493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TQuery"
		},
		"14494": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TResponse"
		},
		"14495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "path"
		},
		"14496": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "queryKey"
		},
		"14497": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "query"
		},
		"14498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "options"
		},
		"14499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"14500": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"14501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"14502": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"14503": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"14504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"14505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"14506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"14541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"14542": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"14543": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"14544": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"14545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"14546": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14547": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"14548": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14549": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14550": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"14551": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14552": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14553": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"14554": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14555": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14556": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"14557": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14558": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"14559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"14560": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"14561": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"14562": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14563": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14565": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14566": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14567": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14568": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"14569": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14570": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14571": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14572": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14573": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14574": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"14575": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14576": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14577": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14578": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14579": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14580": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"14581": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14582": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14583": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14584": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14585": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14586": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"14587": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14588": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"14589": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"14590": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"14591": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"14592": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"14593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14594": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "limit"
		},
		"14595": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "offset"
		},
		"14596": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "expand"
		},
		"14597": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "fields"
		},
		"14598": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "q"
		},
		"14599": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "has_account"
		},
		"14600": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "groups"
		},
		"14601": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "order"
		},
		"14602": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "created_at"
		},
		"14603": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "updated_at"
		},
		"14604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14605": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14606": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14607": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14608": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14609": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14611": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14612": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14613": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14614": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14615": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14617": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14618": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14619": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14620": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14621": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"14623": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14624": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14625": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14626": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14627": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"14629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"14630": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"14631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"14632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"14633": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"14634": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"14635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"14636": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"14637": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"14638": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"14639": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"14640": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"14641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"14642": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"14643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"14644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"14645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"14646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"14647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "adminCustomerKeys"
		},
		"14648": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"14649": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"14650": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "query"
		},
		"14651": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"14652": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14653": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14655": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14656": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14657": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14658": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14659": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14661": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14662": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14663": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14664": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14665": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14667": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14668": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14669": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14673": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14674": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14675": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14676": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"14677": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"14679": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"14680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "id"
		},
		"14681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"14682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14683": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"14684": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14686": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"14687": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14688": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14689": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"14690": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"14692": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"14693": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14694": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"14695": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"14696": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"14697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"14698": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"14699": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "id"
		},
		"14700": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"14701": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "adminDiscountKeys"
		},
		"14702": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"14704": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"14705": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"14706": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"14707": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"14708": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"14709": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14710": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14711": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"14712": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14713": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14714": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"14715": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14716": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14717": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"14718": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14719": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14720": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"14721": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14722": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14723": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"14724": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"14725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"14726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"14727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"14728": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14729": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14731": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14732": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14733": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14734": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"14735": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14737": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14738": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14739": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14740": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"14741": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14742": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14743": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14744": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14745": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14746": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"14747": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14748": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14749": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14750": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14751": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14752": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"14753": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"14755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"14756": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"14757": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"14758": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"14759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14760": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14761": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14763": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14764": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14766": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14767": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14769": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14770": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"14772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"14773": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "code"
		},
		"14774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"14775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14776": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14777": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14779": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14780": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14782": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14783": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14785": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"14786": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"14788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"14789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"14790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "conditionId"
		},
		"14791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"14792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"14793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14794": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"14795": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14796": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14797": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"14798": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14799": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14800": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"14801": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14802": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"14803": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"14804": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"14806": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"14807": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"14808": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"14809": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "query"
		},
		"14810": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"14812": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"14813": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"14814": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"14815": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14816": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"14817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"14818": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14819": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"14820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"14821": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14822": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"14824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"14825": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"14828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"14829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"14832": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"14833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14835": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"14836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"14837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"14840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"14841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"14842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"14844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"14845": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"14846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"14848": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"14849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"14850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"14851": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"14853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"14854": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"14855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"14856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "adminDraftOrderKeys"
		},
		"14857": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"14858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"14859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "query"
		},
		"14860": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"14861": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14862": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14863": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14864": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14865": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14866": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14867": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"14868": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14869": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14870": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14871": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14872": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14873": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"14874": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14875": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14876": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14877": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14878": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14879": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"14880": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14881": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14882": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14883": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14884": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14885": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"14886": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"14888": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"14889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "id"
		},
		"14890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"14891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14892": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"14893": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14894": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14895": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"14896": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14897": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14898": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"14899": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14900": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"14901": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"14902": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14903": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"14904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"14905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"14907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"14908": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"14911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"14912": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14913": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14914": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"14915": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"14916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14917": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14918": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"14919": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"14920": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14921": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"14923": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"14924": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14925": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "AdminDraftOrderUpdateLineItemReq"
		},
		"14927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type"
		},
		"14928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type.item_id"
		},
		"14929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"14930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"14931": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"14932": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"14933": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "adminGiftCardKeys"
		},
		"14934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"14935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"14936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "query"
		},
		"14937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"14938": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14939": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14941": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14942": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14943": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14944": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"14945": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14947": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14948": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14949": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14950": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"14951": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14952": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14953": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14954": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14955": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14956": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"14957": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14958": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14959": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"14960": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"14961": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"14962": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"14963": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14964": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"14965": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"14966": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"14967": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"14968": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14969": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"14970": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14971": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14972": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"14973": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14974": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14975": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"14976": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"14978": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"14979": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"14980": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"14981": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"14982": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"14983": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"14984": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"14985": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"14986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"14987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"14988": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"14989": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"14990": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"14991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "adminInventoryItemsKeys"
		},
		"14992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"14993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"14994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"14995": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"14996": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"14997": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"14998": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"14999": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15000": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15001": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15002": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"15003": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15004": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15005": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15006": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15007": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15008": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"15009": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15011": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15012": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15013": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15014": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"15015": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15017": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15018": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15019": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15020": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"15021": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15022": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"15023": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"15024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15025": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"15026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"15027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15028": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15029": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15030": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15031": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15032": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15033": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15034": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15035": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15036": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15037": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15038": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15039": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"15040": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"15041": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15042": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"15043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"15044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15045": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15046": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"15047": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"15048": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"15049": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15050": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15051": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15052": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"15053": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"15054": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"15055": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15056": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15057": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15058": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"15059": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"15060": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"15061": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"15063": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"15064": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"15065": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"15066": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"15067": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15068": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"15069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"15070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15071": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"15072": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"15073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15074": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"15076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"15077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15079": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "AdminUpdateLocationLevelReq"
		},
		"15080": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type"
		},
		"15081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type.stockLocationId"
		},
		"15082": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"15083": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"15084": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15085": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15086": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"15087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"15088": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15089": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15090": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"15091": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"15092": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15093": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"15094": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "adminInviteKeys"
		},
		"15095": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"15096": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"15097": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "options"
		},
		"15098": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"15099": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"15100": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15101": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"15102": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"15103": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15104": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"15105": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"15106": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"15108": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"15109": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15110": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"15111": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"15112": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"15113": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"15114": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"15115": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"15116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"15117": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"15118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"15119": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"15120": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"15121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"15122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"15123": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"15124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "adminNoteKeys"
		},
		"15125": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"15126": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"15127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "query"
		},
		"15128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"15129": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15130": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15131": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15132": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15133": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15134": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15135": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"15136": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15138": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15139": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15140": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15141": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"15142": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15143": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15144": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15145": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15146": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15147": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"15148": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15149": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15150": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15151": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15152": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15153": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"15154": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15155": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"15156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"15157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "id"
		},
		"15158": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"15159": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15160": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"15161": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15162": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15163": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"15164": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15165": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15166": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"15167": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"15169": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"15170": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"15172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"15173": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"15174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"15175": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"15176": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"15177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"15178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"15179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"15180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"15181": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"15182": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "adminNotificationKeys"
		},
		"15183": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"15184": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"15185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "query"
		},
		"15186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "options"
		},
		"15187": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15188": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"15190": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"15191": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"15192": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"15193": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"15194": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"15196": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"15197": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"15198": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"15199": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"15200": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"15202": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"15203": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"15204": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"15205": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"15206": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"15208": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"15209": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"15210": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"15211": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"15212": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"15214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"15215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "id"
		},
		"15216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "options"
		},
		"15217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "adminOrderEditsKeys"
		},
		"15218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"15219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"15220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"15221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"15222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"15223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15224": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"15225": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15227": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"15228": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15230": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"15231": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15233": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"15234": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"15236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"15237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"15238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"15239": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15240": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15242": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15243": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15244": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15245": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"15246": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15248": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15249": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15250": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15251": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"15252": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15254": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15255": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15256": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15257": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"15258": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"15260": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15261": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15262": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15263": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"15264": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"15266": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"15267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"15269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"15270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15272": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"15273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"15274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"15275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemChangeId"
		},
		"15276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"15278": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"15279": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"15280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"15281": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15282": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"15283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"15284": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"15285": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"15286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15287": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"15288": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"15289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15290": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15291": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"15292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"15293": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15294": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"15296": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"15297": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15299": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"15300": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"15301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15302": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15303": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"15304": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"15305": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"15306": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"15307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "adminOrderKeys"
		},
		"15308": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15309": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"15310": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"15311": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"15312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"15313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15314": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"15315": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"15316": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"15317": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"15318": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15319": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15320": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"15321": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15322": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15323": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"15324": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15325": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15326": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"15327": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15328": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15329": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"15330": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15331": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15332": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"15333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"15334": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"15335": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"15336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"15337": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15338": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15340": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15341": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15342": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15343": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"15344": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15346": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15347": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15348": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15349": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"15350": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15352": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15353": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15354": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15355": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"15356": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15358": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15359": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15360": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15361": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"15362": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"15364": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"15365": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"15366": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"15367": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"15368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15369": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"15370": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"15371": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15372": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"15373": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15374": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15375": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"15376": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15377": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15378": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"15379": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15380": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"15381": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"15382": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"15384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"15385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"15388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"15389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"15392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"15393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15395": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"15396": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"15397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15398": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15399": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"15400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"15401": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15402": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"15404": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"15405": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"15406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"15408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"15409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"15410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15411": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"15412": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"15413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"15414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"15416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"15417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"15418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"15420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"15421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"15422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"15424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"15425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"15426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"15427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "adminPaymentCollectionQueryKeys"
		},
		"15428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"15429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"15430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"15431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"15432": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"15433": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"15434": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15435": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"15436": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"15437": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15438": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"15439": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"15440": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15441": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"15442": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"15443": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"15445": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"15446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"15447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"15448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"15449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"15450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"15451": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"15452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"15453": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"15454": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"15455": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"15456": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "adminPaymentQueryKeys"
		},
		"15457": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"15458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"15459": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "id"
		},
		"15460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "options"
		},
		"15461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"15462": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"15463": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"15465": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"15466": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15467": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"15468": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"15469": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15470": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"15471": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"15472": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15473": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"15474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"15475": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"15476": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"15477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"15478": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"15479": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"15480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"15481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "adminPriceListKeys"
		},
		"15482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"15484": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"15485": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"15486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"15487": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"15488": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"15489": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15490": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15491": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"15492": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15493": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15494": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"15495": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15496": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15497": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"15498": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15499": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15500": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"15501": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15502": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15503": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"15504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"15505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"15506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"15507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"15508": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15509": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15510": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15511": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15512": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15513": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15514": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"15515": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15517": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15518": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15519": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15520": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"15521": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15523": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15524": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15525": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15526": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"15527": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15529": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15530": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15531": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15532": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"15533": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15534": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"15535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"15536": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"15537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"15538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"15539": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15540": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15541": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15542": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15543": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15544": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15546": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15547": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15548": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15549": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15550": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15551": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15552": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15553": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15554": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15555": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15556": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15557": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15558": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15559": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15560": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15561": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15562": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15563": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"15564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"15565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"15566": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"15567": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15568": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"15569": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15570": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15571": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"15572": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15573": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15574": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"15575": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15576": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"15577": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"15578": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15579": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"15580": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"15581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15582": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"15583": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"15584": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15585": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15586": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"15587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"15588": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15589": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15590": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"15591": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"15592": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15594": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"15595": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"15596": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"15599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"15600": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15601": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15602": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"15603": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"15604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "productId"
		},
		"15606": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"15608": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"15609": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"15610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "variantId"
		},
		"15611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"15612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "adminProductCategoryKeys"
		},
		"15613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"15614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"15615": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"15616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"15617": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15618": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15620": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15621": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15622": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15623": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"15624": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15626": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15627": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15628": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15629": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"15630": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15632": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15633": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15634": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15635": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"15636": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15637": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15638": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15639": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15640": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15641": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"15642": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"15644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"15645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"15646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"15647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"15648": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15649": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"15650": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15651": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15652": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"15653": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15655": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"15656": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"15658": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"15659": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"15661": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"15662": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"15663": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"15664": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"15665": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"15666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"15667": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"15668": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"15669": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"15670": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"15671": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"15672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"15673": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"15674": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"15675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"15676": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"15677": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"15678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"15679": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "adminProductTagKeys"
		},
		"15680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"15681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"15682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"15683": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"15684": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15685": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"15687": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15688": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15689": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15690": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"15691": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"15693": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15694": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15695": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15696": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"15697": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15698": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"15699": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15700": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15701": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15702": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"15703": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15704": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"15705": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15706": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15707": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15708": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"15709": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15710": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "adminProductTypeKeys"
		},
		"15711": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"15712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"15713": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"15714": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"15715": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15716": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15717": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"15718": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15719": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15720": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15721": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"15722": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15723": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"15724": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15725": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15726": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15727": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"15728": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"15730": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15731": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15732": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15733": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"15734": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"15736": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15737": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15738": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15739": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"15740": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15741": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "adminProductKeys"
		},
		"15742": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15743": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object.detailVariants"
		},
		"15744": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object.detailVariants"
		},
		"15745": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"15746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"15747": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"15748": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"15749": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15750": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15751": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"15752": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15753": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15754": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"15755": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15756": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15757": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"15758": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15759": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15760": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"15761": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15762": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15763": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"15764": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"15765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"15766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"15767": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"15768": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15769": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15770": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15771": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15772": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15773": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15774": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15775": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15777": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15778": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15779": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15780": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15781": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15783": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15784": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15785": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15786": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15787": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15789": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15790": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15791": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15792": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"15793": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15794": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"15795": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"15796": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"15797": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"15798": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"15799": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15800": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"15801": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15802": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15803": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"15804": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15806": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"15807": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15808": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15809": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"15810": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductVariants"
		},
		"15812": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductVariants"
		},
		"15813": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"15814": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"15815": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"15816": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15817": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15818": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15819": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15820": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"15821": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15822": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15823": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15824": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15825": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15826": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"15827": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15829": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15830": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15831": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15832": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"15833": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15835": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15836": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15837": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15838": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"15839": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"15841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"15842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"15843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15844": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"15845": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"15846": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"15847": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15848": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15849": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"15850": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"15851": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"15852": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15854": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"15855": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"15856": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"15857": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"15859": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"15860": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"15861": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"15862": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15863": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"15864": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"15865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15866": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"15867": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"15868": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"15869": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15870": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"15871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"15872": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"15873": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"15875": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"15876": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15878": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateVariantReq"
		},
		"15879": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"15880": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.variant_id"
		},
		"15881": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"15882": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"15883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15885": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"15886": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"15887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15888": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"15890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"15891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15892": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15893": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateProductOptionReq"
		},
		"15894": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"15895": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.option_id"
		},
		"15896": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"15897": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"15898": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15899": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15900": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"15901": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"15902": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"15903": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"15904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "adminPublishableApiKeysKeys"
		},
		"15905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"15907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"15908": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"15909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"15910": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"15911": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"15912": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15913": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15914": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"15915": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15916": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15917": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"15918": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15919": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15920": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"15921": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15922": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15923": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"15924": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15925": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15926": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"15927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"15928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"15929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"15930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"15931": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15932": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"15933": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15935": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"15936": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15938": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"15939": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15941": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"15942": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15943": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"15944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"15945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"15946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"15947": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"15948": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"15949": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15950": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15951": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15952": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15953": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"15954": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15956": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15957": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15958": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15959": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"15960": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15961": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15962": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15963": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15964": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15965": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"15966": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15967": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15968": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"15969": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"15970": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"15971": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"15972": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15973": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"15974": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"15975": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"15976": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"15977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"15978": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15979": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"15980": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15981": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15982": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"15983": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15984": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15985": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"15986": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"15988": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"15989": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"15990": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"15991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"15992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"15993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"15994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"15995": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"15996": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"15997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"15998": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"15999": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"16000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"16001": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"16002": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"16003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"16004": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"16005": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"16006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"16007": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"16008": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"16009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"16010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"16011": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"16012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"16013": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "adminRegionKeys"
		},
		"16014": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"16015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"16016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "query"
		},
		"16017": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"16018": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16019": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16020": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16021": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16022": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16023": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16024": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"16025": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16027": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16028": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16029": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16030": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"16031": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16032": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16033": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16034": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16035": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16036": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"16037": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16038": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16039": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16040": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16041": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16042": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"16043": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"16045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"16046": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "id"
		},
		"16047": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"16048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16049": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"16050": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16052": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"16053": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16054": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16055": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"16056": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16058": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"16059": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"16061": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"16062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "regionId"
		},
		"16063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"16064": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16065": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"16066": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16067": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16068": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"16069": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16071": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"16072": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"16074": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"16075": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"16077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"16078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16079": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"16080": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"16081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16082": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16083": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"16084": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"16085": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16086": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"16088": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"16089": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16090": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16091": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"16092": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"16093": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16094": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16095": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"16096": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"16097": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16098": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16099": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"16100": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"16101": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16102": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16103": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"16104": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"16105": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16106": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"16108": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"16109": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"16110": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"16111": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"16112": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"16113": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"16114": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"16115": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"16116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"16117": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"16118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"16119": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"16120": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"16121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"16122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "adminReservationsKeys"
		},
		"16123": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"16124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"16125": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "query"
		},
		"16126": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"16127": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16128": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16129": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16130": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16131": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16132": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16133": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"16134": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16136": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16137": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16138": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16139": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"16140": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16141": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16142": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16143": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16144": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16145": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"16146": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16147": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16148": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16149": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16150": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16151": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"16152": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16153": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"16154": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"16155": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "id"
		},
		"16156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"16157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16158": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"16159": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16161": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"16162": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16163": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16164": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"16165": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16166": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"16167": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"16168": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16169": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "adminReturnReasonKeys"
		},
		"16170": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"16171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"16172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"16173": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16174": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"16175": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16176": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16177": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"16178": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16180": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"16181": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16182": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16183": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"16184": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"16186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"16187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"16188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"16189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16190": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"16191": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16192": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16193": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"16194": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16196": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"16197": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16198": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"16199": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"16200": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"16202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"16203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"16204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"16205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"16206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"16207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"16208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"16209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"16210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"16211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"16212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "adminReturnKeys"
		},
		"16213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"16214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"16215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "options"
		},
		"16216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"16217": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16218": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16219": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16220": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"16221": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"16223": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16224": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16225": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16226": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"16227": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"16229": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16230": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16231": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16232": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"16233": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"16235": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16236": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16237": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16238": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"16239": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"16241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"16242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"16243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"16244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"16245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"16246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"16247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"16248": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "adminSalesChannelsKeys"
		},
		"16249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"16250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"16251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "id"
		},
		"16252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"16253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16254": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"16255": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16256": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16257": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"16258": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16260": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"16261": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16263": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"16264": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"16266": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"16267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "query"
		},
		"16268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"16269": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16270": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16272": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16273": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16274": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16275": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"16276": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16278": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16279": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16280": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16281": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"16282": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16284": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16285": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16286": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16287": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"16288": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"16290": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16291": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16292": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16293": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"16294": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"16296": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"16297": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"16299": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"16300": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"16301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16302": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"16303": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"16304": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"16305": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16306": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"16307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"16308": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"16309": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16310": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"16311": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"16312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"16313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"16315": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"16316": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16317": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"16318": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"16319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"16320": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"16321": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"16322": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"16323": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"16324": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"16325": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"16326": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"16327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"16328": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"16329": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"16330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"16331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"16332": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "adminShippingOptionKeys"
		},
		"16333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"16334": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"16335": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"16336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"16337": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16338": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16340": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16341": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16342": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16343": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"16344": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16346": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16347": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16348": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16349": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"16350": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16352": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16353": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16354": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16355": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"16356": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16358": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16359": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16360": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16361": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"16362": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"16364": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"16365": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "id"
		},
		"16366": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"16367": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16368": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"16369": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16370": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16371": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"16372": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16374": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"16375": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16376": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"16377": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"16378": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16379": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"16380": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"16381": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"16382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"16383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"16384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"16385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"16386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"16387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"16388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"16389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"16390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "adminShippingProfileKeys"
		},
		"16391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"16392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"16393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"16394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16395": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"16396": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"16399": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16401": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"16402": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"16405": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"16407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"16408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "id"
		},
		"16409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"16410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16411": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"16412": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16414": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"16415": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16417": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"16418": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"16420": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"16421": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"16423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"16424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"16425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"16426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"16427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"16428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"16429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"16430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"16431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"16432": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"16433": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "adminStockLocationsKeys"
		},
		"16434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"16435": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"16436": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "query"
		},
		"16437": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"16438": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16439": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16441": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16442": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16443": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16444": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"16445": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16447": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16448": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16449": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16450": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"16451": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16453": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16454": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16455": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16456": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"16457": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16459": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16460": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16461": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16462": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"16463": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"16465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"16466": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "id"
		},
		"16467": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"16468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16469": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"16470": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16472": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"16473": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16475": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"16476": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"16478": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"16479": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"16481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"16482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"16483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"16484": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"16485": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"16486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"16487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"16488": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"16489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"16490": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"16491": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "adminStoreKeys"
		},
		"16492": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"16493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"16494": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"16495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16496": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"16497": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16499": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"16500": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16502": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"16503": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16505": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"16506": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"16508": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"16509": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"16510": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16511": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"16512": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16513": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16514": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"16515": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16517": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"16518": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16519": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16520": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"16521": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"16523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"16524": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"16525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16526": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"16527": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16529": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"16530": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16532": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"16533": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16534": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"16535": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"16536": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"16538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"16539": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"16540": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"16541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"16542": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"16543": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"16544": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"16545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"16546": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "adminSwapKeys"
		},
		"16547": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"16548": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"16549": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "query"
		},
		"16550": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"16551": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16552": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16553": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16554": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16555": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16556": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16557": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"16558": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16560": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16561": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16562": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16563": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"16564": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16566": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16567": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16568": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16569": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"16570": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16571": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16572": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16573": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16574": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16575": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"16576": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16577": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"16578": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"16579": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "id"
		},
		"16580": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"16581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16582": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"16583": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16584": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16585": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"16586": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16588": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"16589": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16590": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"16591": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"16592": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"16594": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"16595": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16596": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"16598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"16599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16600": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16601": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminFulfillSwapReq"
		},
		"16602": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"16603": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"16604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"16605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"16606": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16608": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCreateSwapShipmentReq"
		},
		"16609": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"16610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"16611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"16612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"16613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16615": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"16616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"16617": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16618": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCancelSwapFulfillmentReq"
		},
		"16620": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"16621": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"16622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"16623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"16624": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"16625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16626": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"16627": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"16628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"16629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"16630": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"16631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"16632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"16633": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "adminTaxRateKeys"
		},
		"16634": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"16635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"16636": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"16637": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"16638": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16639": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16640": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16641": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16642": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16643": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16644": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"16645": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16647": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16648": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16649": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16650": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"16651": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16652": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16653": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16654": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16655": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16656": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"16657": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16658": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16659": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16660": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16661": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16662": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"16663": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16664": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"16665": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"16666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "id"
		},
		"16667": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"16668": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"16669": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"16671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16673": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"16674": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16676": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"16677": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"16679": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"16680": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"16682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"16683": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16684": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"16685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"16686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16687": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16688": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"16689": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"16690": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"16693": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"16694": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16695": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16696": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"16697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"16698": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16699": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16700": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"16701": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"16702": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16704": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"16705": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"16706": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16707": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16708": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"16709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"16710": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16711": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"16713": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"16714": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"16715": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"16716": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"16717": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"16718": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"16719": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"16720": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"16721": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"16722": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"16723": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"16724": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"16725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"16726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"16727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"16728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "adminUserKeys"
		},
		"16729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"16730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"16731": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "query"
		},
		"16732": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"16733": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16734": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16736": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16737": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16738": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16739": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"16740": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16741": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16742": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16743": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16744": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16745": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"16746": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16747": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16748": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16749": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16750": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16751": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"16752": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16753": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16754": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"16755": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"16756": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"16757": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"16758": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"16760": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"16761": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "id"
		},
		"16762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"16763": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16764": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"16765": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16767": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"16768": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16769": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16770": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"16771": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"16773": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"16774": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"16776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"16777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"16778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"16779": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"16780": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"16781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"16782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"16783": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"16784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"16785": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"16786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"16787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"16788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"16789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"16790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"16791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"16792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "adminVariantKeys"
		},
		"16793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"16794": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"16795": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"16796": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"16797": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16798": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16799": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16800": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16801": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16802": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16803": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"16804": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16806": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16807": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16808": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16809": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"16810": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16812": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16813": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16814": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16815": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"16816": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16818": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16819": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16820": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16821": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"16822": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"16824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"16825": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"16826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"16827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"16828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16829": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"16830": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16832": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"16833": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16835": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"16836": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16838": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"16839": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"16841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"16842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"16843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"16844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16845": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"16846": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16848": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"16849": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16851": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"16852": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"16854": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"16855": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "cartKeys"
		},
		"16857": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"16858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"16859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "id"
		},
		"16860": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "options"
		},
		"16861": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"16862": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"16863": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16864": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"16865": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"16866": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16867": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"16868": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"16869": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16870": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"16871": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"16872": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16873": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "CreateCartReq"
		},
		"16874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"16875": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"16876": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"16878": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"16879": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16880": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16881": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"16882": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"16883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16885": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"16886": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"16887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16888": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionReq"
		},
		"16890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"16891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"16892": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"16893": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"16894": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16895": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16896": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "RefreshPaymentSessionMutationData"
		},
		"16897": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"16898": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"16899": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"16900": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"16901": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16902": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16903": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"16904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"16905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"16908": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"16909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "DeletePaymentSessionMutationData"
		},
		"16912": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"16913": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"16914": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"16915": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"16916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"16917": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16918": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"16919": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"16920": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"16921": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "collectionKeys"
		},
		"16922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"16923": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"16924": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "id"
		},
		"16925": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"16926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16927": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16928": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16930": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16931": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16932": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16933": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16934": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16936": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16937": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16938": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"16939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"16940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "query"
		},
		"16941": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"16942": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16943": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16945": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16946": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16947": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16948": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16949": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16951": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16952": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16953": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16954": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16955": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16957": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16958": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16959": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16960": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16961": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16962": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16963": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16964": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16965": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16966": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16967": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16968": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "customerKeys"
		},
		"16969": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"16970": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object.orders"
		},
		"16971": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"16972": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"16973": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "id"
		},
		"16974": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"16975": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"16976": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16977": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16978": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"16979": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16980": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16981": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"16982": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16983": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16984": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"16985": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16986": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16987": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"16988": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16989": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16990": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"16991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"16992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"16993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"16994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"16995": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"16996": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"16998": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"16999": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17001": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17002": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17004": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17005": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"17007": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"17008": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "query"
		},
		"17009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"17010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17011": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17012": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17013": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17014": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"17015": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17017": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17018": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17019": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17020": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"17021": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17022": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17023": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17024": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17025": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17026": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"17027": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17029": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17030": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17031": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17032": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"17033": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17034": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"17035": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"17036": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"17037": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "UpdateMeReq"
		},
		"17038": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type"
		},
		"17039": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"17040": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"17041": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"17042": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"17043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "giftCardKeys"
		},
		"17044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"17045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"17046": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"17047": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"17048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17049": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17050": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17052": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17053": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17054": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17055": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17056": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17058": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17059": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"17061": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"17062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"17063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"17064": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "UpdateLineItemReq"
		},
		"17065": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"17066": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"17067": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"17068": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"17069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"17070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"17071": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"17072": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"17073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"17074": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"17075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"17076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"17077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"17078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"17079": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "orderEditQueryKeys"
		},
		"17080": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"17081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"17082": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"17083": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"17084": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17085": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17086": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17088": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17089": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17090": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17091": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17092": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17093": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17094": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17095": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17096": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"17097": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"17098": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17099": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17100": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"17101": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"17102": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17103": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17104": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "orderKeys"
		},
		"17105": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17106": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object.cart"
		},
		"17107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"17108": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"17109": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"17110": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"17111": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"17112": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17113": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17114": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"17115": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17116": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17117": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"17118": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17119": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17120": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"17121": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17122": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17123": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"17124": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17125": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17126": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"17127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"17128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"17129": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "id"
		},
		"17130": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"17131": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17132": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17133": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17135": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17136": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17138": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17139": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17140": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17141": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17142": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17143": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"17144": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"17145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"17146": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"17147": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17148": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17149": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17150": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17151": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17152": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17153": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17154": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17155": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17157": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17158": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17159": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"17160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"17161": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "query"
		},
		"17162": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"17163": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17164": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17165": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17166": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17167": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17169": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17170": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17172": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17173": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17175": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17176": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"17178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"17179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17180": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"17181": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"17182": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"17183": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"17184": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"17185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"17186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17187": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"17188": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"17189": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"17190": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"17191": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "paymentCollectionQueryKeys"
		},
		"17192": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"17193": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"17194": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"17195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"17196": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17197": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17198": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17200": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17201": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17203": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17204": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17206": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17207": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"17209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"17210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"17213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"17214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"17217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"17218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"17221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"17222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17224": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"17225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"17226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "storeProductCategoryKeys"
		},
		"17229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"17230": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"17231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"17232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"17233": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17234": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17236": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17237": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17238": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17239": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17240": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17242": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17243": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17244": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17245": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17246": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17248": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17249": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17250": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17251": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17252": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17254": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17255": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17256": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17257": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17258": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"17260": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"17261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"17262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"17263": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"17264": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17265": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17266": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17268": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17269": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17271": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17272": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17274": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17275": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "productTagKeys"
		},
		"17277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"17278": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"17279": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"17280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"17281": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17282": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"17284": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17285": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17286": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17287": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"17288": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"17290": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17291": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17292": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17293": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"17294": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"17296": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17297": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17298": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17299": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"17300": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"17302": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17303": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17304": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17305": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"17306": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "productTypeKeys"
		},
		"17308": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"17309": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"17310": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"17311": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"17312": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17313": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"17315": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17316": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17317": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17318": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"17319": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17320": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"17321": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17322": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17323": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17324": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"17325": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17326": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"17327": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17328": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17329": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17330": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"17331": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17332": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"17333": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17334": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17335": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17336": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"17337": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17338": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "productKeys"
		},
		"17339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"17340": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"17341": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "query"
		},
		"17342": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"17343": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17344": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17346": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17347": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17348": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17349": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17350": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17352": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17353": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17354": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17355": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17356": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17358": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17359": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17360": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17361": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17362": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17364": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17365": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17366": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17367": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17368": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17369": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"17370": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"17371": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "id"
		},
		"17372": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"17373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17374": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"17375": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17376": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17377": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"17378": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17379": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17380": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"17381": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"17383": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"17384": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"17386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"17387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"17388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17389": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17390": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17391": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17392": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"17393": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17395": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17396": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17397": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"17399": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17401": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17402": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17403": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"17405": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17407": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17408": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17409": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17410": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"17411": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17412": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"17413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"17414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "id"
		},
		"17415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"17416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17417": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"17418": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17420": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"17421": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17423": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"17424": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"17426": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"17427": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"17429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"17430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"17431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17432": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"17433": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17435": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"17436": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17437": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17438": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"17439": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17441": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"17442": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17443": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"17444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"17445": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"17446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"17447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17448": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"17449": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17451": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"17452": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17453": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17454": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"17455": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17456": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"17457": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"17458": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17459": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"17460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"17461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"17462": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"17463": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"17464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"17465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"17466": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17467": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17469": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17470": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17472": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17473": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17475": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17476": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17478": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17479": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"17481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"17482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "cartId"
		},
		"17483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"17484": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17485": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17486": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17488": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17489": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17490": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17491": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17492": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"17494": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"17495": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17496": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"17497": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"17498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "cartId"
		},
		"17499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"17500": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"17501": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"17502": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17503": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"17504": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"17505": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"17507": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"17508": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17509": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"17510": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"17511": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17512": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"17513": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"17514": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"17515": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "queryKeysFactory"
		},
		"17516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "queryKeysFactory"
		},
		"17517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "T"
		},
		"17518": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "TListQueryType"
		},
		"17519": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "TDetailQueryType"
		},
		"17520": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "globalKey"
		},
		"17521": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "useLocalStorage"
		},
		"17522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "useLocalStorage"
		},
		"17523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "key"
		},
		"17524": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "initialState"
		},
		"17525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"17526": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"17527": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "data"
		},
		"17528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"17529": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"17530": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "UseQueryOptionsWrapper"
		},
		"17531": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryFn"
		},
		"17532": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "E"
		},
		"17533": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryKey"
		},
		"17534": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "ProductVariant"
		},
		"17535": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "Cart"
		},
		"17536": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryKey"
		},
		"17537": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17538": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"17539": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"17540": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17541": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17542": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"17543": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17544": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17545": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17546": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17547": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"17548": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"17549": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17550": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17551": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"17552": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17553": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17554": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"17555": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TKey"
		},
		"17556": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TListQuery"
		},
		"17557": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TDetailQuery"
		}
	}
}