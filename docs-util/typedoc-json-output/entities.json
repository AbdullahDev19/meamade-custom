{
	"id": 9334,
	"name": "entities",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 9335,
			"name": "Address",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An address is used across the Medusa backend within other schemas and object types. For example, a customer's billing and shipping addresses both use the Address entity."
					}
				]
			},
			"children": [
				{
					"id": 9336,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9337,
							"name": "new Address",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An address is used across the Medusa backend within other schemas and object types. For example, a customer's billing and shipping addresses both use the Address entity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9335,
								"name": "Address",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9355,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the address"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9356,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9357,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9354,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9338,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the customer this address belongs to"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9339,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available if the relation `customer` is expanded."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9589,
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9340,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company name"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9341,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9342,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9343,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9344,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9345,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9346,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9347,
					"name": "country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A country object."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9555,
								"name": "Country",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9348,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9349,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9350,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9351,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9352,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9353,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9336
					]
				},
				{
					"title": "Properties",
					"children": [
						9355,
						9356,
						9357,
						9354,
						9338,
						9339,
						9340,
						9341,
						9342,
						9343,
						9344,
						9345,
						9346,
						9347,
						9348,
						9349,
						9350,
						9351
					]
				},
				{
					"title": "Methods",
					"children": [
						9352
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9358,
			"name": "AnalyticsConfig",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 9359,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9360,
							"name": "new AnalyticsConfig",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 9358,
								"name": "AnalyticsConfig",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9367,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9368,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9369,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9366,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9361,
					"name": "user_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9362,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9363,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9364,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9365,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9359
					]
				},
				{
					"title": "Properties",
					"children": [
						9367,
						9368,
						9369,
						9366,
						9361,
						9362,
						9363
					]
				},
				{
					"title": "Methods",
					"children": [
						9364
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9370,
			"name": "BatchJob",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Batch Job indicates an asynchronus task stored in the Medusa backend. Its status determines whether it has been executed or not."
					}
				]
			},
			"children": [
				{
					"id": 9371,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9372,
							"name": "new BatchJob",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Batch Job indicates an asynchronus task stored in the Medusa backend. Its status determines whether it has been executed or not."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9370,
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9401,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the batch job."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9402,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9403,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was last updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9400,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9373,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of batch job."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9374,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user that created the batch job."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9375,
					"name": "created_by_user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the user that created the batch job."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10887,
						"name": "User",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9376,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The context of the batch job, the type of the batch job determines what the context should contain."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9377,
					"name": "result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of the batch job."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 9378,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 9379,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9380,
											"name": "advancement_count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9381,
											"name": "progress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9382,
											"name": "errors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
																"qualifiedName": "BatchJobResultError"
															},
															"name": "BatchJobResultError",
															"package": "@medusajs/medusa"
														}
													]
												}
											}
										},
										{
											"id": 9383,
											"name": "stat_descriptors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
														"qualifiedName": "BatchJobResultStatDescriptor"
													},
													"name": "BatchJobResultStatDescriptor",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 9384,
											"name": "file_key",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9385,
											"name": "file_size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												9379,
												9380,
												9381,
												9382,
												9383,
												9384,
												9385
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9386,
					"name": "dry_run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify if the job must apply the modifications or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 9387,
					"name": "pre_processed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date from which the job has been pre-processed."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9388,
					"name": "processing_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the job is processing at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9389,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date when the confirmation has been done."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9390,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date of the completion."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9391,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date of the concellation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9392,
					"name": "failed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date when the job failed."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9393,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the batch job."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
							"qualifiedName": "BatchJobStatus"
						},
						"name": "BatchJobStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "created"
				},
				{
					"id": 9394,
					"name": "loadStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9395,
							"name": "loadStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9396,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9397,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9398,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9399,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Batch Job indicates an asynchronus task stored in the Medusa backend. Its status determines whether it has been executed or not."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9370,
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9371
					]
				},
				{
					"title": "Properties",
					"children": [
						9401,
						9402,
						9403,
						9400,
						9373,
						9374,
						9375,
						9376,
						9377,
						9386,
						9387,
						9388,
						9389,
						9390,
						9391,
						9392,
						9393
					]
				},
				{
					"title": "Methods",
					"children": [
						9394,
						9396,
						9398
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9404,
			"name": "CartType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 9405,
					"name": "DEFAULT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "default"
					}
				},
				{
					"id": 9406,
					"name": "SWAP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "swap"
					}
				},
				{
					"id": 9407,
					"name": "DRAFT_ORDER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft_order"
					}
				},
				{
					"id": 9408,
					"name": "PAYMENT_LINK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "payment_link"
					}
				},
				{
					"id": 9409,
					"name": "CLAIM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "claim"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9405,
						9406,
						9407,
						9408,
						9409
					]
				}
			]
		},
		{
			"id": 9410,
			"name": "Cart",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
					}
				]
			},
			"children": [
				{
					"id": 9411,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9412,
							"name": "new Cart",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9410,
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9459,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9460,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9461,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9458,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9413,
					"name": "object",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"type": {
						"type": "literal",
						"value": "cart"
					},
					"defaultValue": "\"cart\""
				},
				{
					"id": 9414,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the cart"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9415,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The billing address's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9416,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the billing address associated with the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9417,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping address's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9418,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping address associated with the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9335,
								"name": "Address",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9419,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items added to the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9420,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9421,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region associated with the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9422,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of details of all discounts applied to the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9623,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9423,
					"name": "gift_cards",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of details of all gift cards applied to the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9807,
							"name": "GiftCard",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9424,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9425,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the customer the cart belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9589,
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9426,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the selected payment session in the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10255,
								"name": "PaymentSession",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9427,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of all payment sessions created on the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10255,
							"name": "PaymentSession",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9428,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's ID if available"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9429,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payment associated with the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10190,
						"name": "Payment",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9430,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping methods added to the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10661,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9431,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9404,
						"name": "CartType",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "default"
				},
				{
					"id": 9432,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the cart was completed."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9433,
					"name": "payment_authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the payment was authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9434,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of a cart in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9435,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The context of the cart which can include info like IP or user agent."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9436,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9437,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel ID the cart is associated with."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9438,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the sales channel associated with the cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10631,
						"name": "SalesChannel",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9439,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channels."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10631,
							"name": "SalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9440,
					"name": "shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of shipping"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9441,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount rounded"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9442,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9443,
					"name": "item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of items with taxes"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9444,
					"name": "shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of shipping with taxes"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9445,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of tax"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9446,
					"name": "refunded_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount refunded if the order associated with this cart is returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9447,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9448,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the cart"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9449,
					"name": "refundable_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that can be refunded"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9450,
					"name": "gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of gift cards"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9451,
					"name": "gift_card_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of gift cards with taxes"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9452,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9453,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9454,
					"name": "beforeUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9455,
							"name": "beforeUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9456,
					"name": "afterLoad",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9457,
							"name": "afterLoad",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9411
					]
				},
				{
					"title": "Properties",
					"children": [
						9459,
						9460,
						9461,
						9458,
						9413,
						9414,
						9415,
						9416,
						9417,
						9418,
						9419,
						9420,
						9421,
						9422,
						9423,
						9424,
						9425,
						9426,
						9427,
						9428,
						9429,
						9430,
						9431,
						9432,
						9433,
						9434,
						9435,
						9436,
						9437,
						9438,
						9439,
						9440,
						9441,
						9442,
						9443,
						9444,
						9445,
						9446,
						9447,
						9448,
						9449,
						9450,
						9451
					]
				},
				{
					"title": "Methods",
					"children": [
						9452,
						9454,
						9456
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9462,
			"name": "ClaimImage",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an image attached to a claim."
					}
				]
			},
			"children": [
				{
					"id": 9463,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9464,
							"name": "new ClaimImage",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of an image attached to a claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9462,
								"name": "ClaimImage",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9472,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim image's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9473,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9474,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9471,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9465,
					"name": "claim_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the claim item associated with the image"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9466,
					"name": "claim_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim item this image is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9480,
						"name": "ClaimItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9467,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the image"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9468,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9469,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9470,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9463
					]
				},
				{
					"title": "Properties",
					"children": [
						9472,
						9473,
						9474,
						9471,
						9465,
						9466,
						9467,
						9468
					]
				},
				{
					"title": "Methods",
					"children": [
						9469
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9475,
			"name": "ClaimReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 9476,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 9477,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 9478,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 9479,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9476,
						9477,
						9478,
						9479
					]
				}
			]
		},
		{
			"id": 9480,
			"name": "ClaimItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A claim item is an item created as part of a claim. It references an item in the order that should be exchanged or refunded."
					}
				]
			},
			"children": [
				{
					"id": 9481,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9482,
							"name": "new ClaimItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A claim item is an item created as part of a claim. It references an item in the order that should be exchanged or refunded."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9480,
								"name": "ClaimItem",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9498,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim item's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9499,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9500,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9497,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9483,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim images that are attached to the claim item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9462,
							"name": "ClaimImage",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9484,
					"name": "claim_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the claim this item is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9485,
					"name": "claim_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim this item belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9518,
						"name": "ClaimOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9486,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item that the claim item refers to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9487,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line item in the original order that this claim item refers to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9488,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant that is claimed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9489,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product variant to potentially replace the item in the original order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10445,
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9490,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the claim"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9475,
						"name": "ClaimReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9491,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note about the claim, for additional information"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9492,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the item that is being claimed; must be less than or equal to the amount purchased in the original order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9493,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User defined tags for easy filtering and grouping."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9544,
							"name": "ClaimTag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9494,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9495,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9496,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9481
					]
				},
				{
					"title": "Properties",
					"children": [
						9498,
						9499,
						9500,
						9497,
						9483,
						9484,
						9485,
						9486,
						9487,
						9488,
						9489,
						9490,
						9491,
						9492,
						9493,
						9494
					]
				},
				{
					"title": "Methods",
					"children": [
						9495
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9501,
			"name": "ClaimType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The claim's type."
					}
				]
			},
			"children": [
				{
					"id": 9502,
					"name": "REFUND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim refunds an amount to the customer."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "refund"
					}
				},
				{
					"id": 9503,
					"name": "REPLACE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim replaces the returned item with a new one."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "replace"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9502,
						9503
					]
				}
			]
		},
		{
			"id": 9504,
			"name": "ClaimPaymentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The claim's payment status"
					}
				]
			},
			"children": [
				{
					"id": 9505,
					"name": "NA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment status isn't set, which is typically used when the claim's type is "
							},
							{
								"kind": "code",
								"text": "`replace`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "na"
					}
				},
				{
					"id": 9506,
					"name": "NOT_REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment isn't refunded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_refunded"
					}
				},
				{
					"id": 9507,
					"name": "REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is refunded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "refunded"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9505,
						9506,
						9507
					]
				}
			]
		},
		{
			"id": 9508,
			"name": "ClaimFulfillmentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The claim's fulfillment status."
					}
				]
			},
			"children": [
				{
					"id": 9509,
					"name": "NOT_FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's replacement items are not fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_fulfilled"
					}
				},
				{
					"id": 9510,
					"name": "PARTIALLY_FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the claim's replacement items, but not all, are fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_fulfilled"
					}
				},
				{
					"id": 9511,
					"name": "FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's replacement items are fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "fulfilled"
					}
				},
				{
					"id": 9512,
					"name": "PARTIALLY_SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the claim's replacement items, but not all, are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_shipped"
					}
				},
				{
					"id": 9513,
					"name": "SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's replacement items are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "shipped"
					}
				},
				{
					"id": 9514,
					"name": "PARTIALLY_RETURNED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the claim's items, but not all, are returned."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_returned"
					}
				},
				{
					"id": 9515,
					"name": "RETURNED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's items are returned."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "returned"
					}
				},
				{
					"id": 9516,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's fulfillments are canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 9517,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's fulfillment requires action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9509,
						9510,
						9511,
						9512,
						9513,
						9514,
						9515,
						9516,
						9517
					]
				}
			]
		},
		{
			"id": 9518,
			"name": "ClaimOrder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Claim represents a group of faulty or missing items. It consists of claim items that refer to items in the original order that should be replaced or refunded. It also includes details related to shipping and fulfillment."
					}
				]
			},
			"children": [
				{
					"id": 9519,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9520,
							"name": "new ClaimOrder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Claim represents a group of faulty or missing items. It consists of claim items that refer to items in the original order that should be replaced or refunded. It also includes details related to shipping and fulfillment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9518,
								"name": "ClaimOrder",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9543,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9521,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the claim's payment"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9504,
						"name": "ClaimPaymentStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "na"
				},
				{
					"id": 9522,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's fulfillment status"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9508,
						"name": "ClaimFulfillmentStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "not_fulfilled"
				},
				{
					"id": 9523,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the items that should be replaced or refunded."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9480,
							"name": "ClaimItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9524,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the new items to be shipped when the claim's type is `replace`"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9525,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's type"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9501,
						"name": "ClaimType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9526,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the claim comes from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9527,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that this claim was created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9528,
					"name": "return_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the return associated with the claim if the claim's type is `replace`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10576,
						"name": "Return",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9529,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the address that the new items should be shipped to"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9530,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the address that new items should be shipped to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9531,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping methods that the claim order will be shipped with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10661,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9532,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillments of the new items to be shipped"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9768,
							"name": "Fulfillment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9533,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that will be refunded in conjunction with the claim"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9534,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the claim was canceled."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9535,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9536,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9537,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9538,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag for describing whether or not notifications related to this should be send."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9539,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9540,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the cart associated with the claim in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9541,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9542,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9519
					]
				},
				{
					"title": "Properties",
					"children": [
						9543,
						9521,
						9522,
						9523,
						9524,
						9525,
						9526,
						9527,
						9528,
						9529,
						9530,
						9531,
						9532,
						9533,
						9534,
						9535,
						9536,
						9537,
						9538,
						9539,
						9540
					]
				},
				{
					"title": "Methods",
					"children": [
						9541
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9544,
			"name": "ClaimTag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Claim Tags are user defined tags that can be assigned to claim items for easy filtering and grouping."
					}
				]
			},
			"children": [
				{
					"id": 9545,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9546,
							"name": "new ClaimTag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Claim Tags are user defined tags that can be assigned to claim items for easy filtering and grouping."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9544,
								"name": "ClaimTag",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9552,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim tag's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9553,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9554,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9551,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9547,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the claim tag holds"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9548,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9549,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9550,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9545
					]
				},
				{
					"title": "Properties",
					"children": [
						9552,
						9553,
						9554,
						9551,
						9547,
						9548
					]
				},
				{
					"title": "Methods",
					"children": [
						9549
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9555,
			"name": "Country",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Country details"
					}
				]
			},
			"children": [
				{
					"id": 9556,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9557,
							"name": "new Country",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Country details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9555,
								"name": "Country",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9558,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9559,
					"name": "iso_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9560,
					"name": "iso_3",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9561,
					"name": "num_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numerical ISO code for the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9562,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The normalized country name in upper case."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9563,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country name appropriate for display."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9564,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region ID this country is associated with."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9565,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region the country is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9556
					]
				},
				{
					"title": "Properties",
					"children": [
						9558,
						9559,
						9560,
						9561,
						9562,
						9563,
						9564,
						9565
					]
				}
			]
		},
		{
			"id": 9566,
			"name": "Currency",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Currency"
					}
				]
			},
			"children": [
				{
					"id": 9567,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9568,
							"name": "new Currency",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9566,
								"name": "Currency",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9569,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO code for the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9570,
					"name": "symbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol used to indicate the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9571,
					"name": "symbol_native",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The native symbol used to indicate the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9572,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The written name of the currency"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9573,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the currency prices include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9567
					]
				},
				{
					"title": "Properties",
					"children": [
						9569,
						9570,
						9571,
						9572,
						9573
					]
				}
			]
		},
		{
			"id": 9574,
			"name": "CustomShippingOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
					}
				]
			},
			"children": [
				{
					"id": 9575,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9576,
							"name": "new CustomShippingOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9574,
								"name": "CustomShippingOption",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9586,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom shipping option's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9587,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9588,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9585,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9577,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price set that will override the shipping option's original price"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9578,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option that the custom shipping option overrides"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9579,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the overridden shipping options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10703,
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9580,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Cart that the custom shipping option is attached to"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9581,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart this shipping option belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9582,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9583,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9584,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9575
					]
				},
				{
					"title": "Properties",
					"children": [
						9586,
						9587,
						9588,
						9585,
						9577,
						9578,
						9579,
						9580,
						9581,
						9582
					]
				},
				{
					"title": "Methods",
					"children": [
						9583
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9610,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 9611,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9612,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9610,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9620,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer group's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9621,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9622,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9619,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9613,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9614,
					"name": "customers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the customers that belong to the customer group."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9589,
							"name": "Customer",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9615,
					"name": "price_lists",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price lists that are associated with the customer group."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10273,
							"name": "PriceList",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9616,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9617,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9618,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9611
					]
				},
				{
					"title": "Properties",
					"children": [
						9620,
						9621,
						9622,
						9619,
						9613,
						9614,
						9615,
						9616
					]
				},
				{
					"title": "Methods",
					"children": [
						9617
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9589,
			"name": "Customer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer can make purchases in your store and manage their profile."
					}
				]
			},
			"children": [
				{
					"id": 9590,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9591,
							"name": "new Customer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer can make purchases in your store and manage their profile."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9589,
								"name": "Customer",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9607,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9608,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9609,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9606,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9592,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9593,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9594,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9595,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's billing address ID"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9596,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the billing address associated with the customer."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9597,
					"name": "shipping_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping addresses associated with the customer."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9335,
							"name": "Address",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9598,
					"name": "password_hash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9599,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9600,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer has an account or not"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9601,
					"name": "orders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the orders this customer placed."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10061,
							"name": "Order",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9602,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups the customer belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9610,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9603,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9604,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9605,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9590
					]
				},
				{
					"title": "Properties",
					"children": [
						9607,
						9608,
						9609,
						9606,
						9592,
						9593,
						9594,
						9595,
						9596,
						9597,
						9598,
						9599,
						9600,
						9601,
						9602,
						9603
					]
				},
				{
					"title": "Methods",
					"children": [
						9604
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9674,
			"name": "DiscountConditionCustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Associates a discount condition with a customer group"
					}
				]
			},
			"children": [
				{
					"id": 9675,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9676,
							"name": "new DiscountConditionCustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Associates a discount condition with a customer group"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9674,
								"name": "DiscountConditionCustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9677,
					"name": "customer_group_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Tag"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9678,
					"name": "condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Discount Condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9679,
					"name": "customer_group",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available if the relation `customer_group` is expanded."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9610,
						"name": "CustomerGroup",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9680,
					"name": "discount_condition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available if the relation `discount_condition` is expanded."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9655,
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9681,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9682,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9683,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9675
					]
				},
				{
					"title": "Properties",
					"children": [
						9677,
						9678,
						9679,
						9680,
						9681,
						9682,
						9683
					]
				}
			]
		},
		{
			"id": 9694,
			"name": "DiscountConditionProductCollection",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a discount condition and a product collection"
					}
				]
			},
			"children": [
				{
					"id": 9695,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9696,
							"name": "new DiscountConditionProductCollection",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a discount condition and a product collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9694,
								"name": "DiscountConditionProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9697,
					"name": "product_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9698,
					"name": "condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Discount Condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9699,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10361,
						"name": "ProductCollection",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9700,
					"name": "discount_condition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount condition."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9655,
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9701,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9702,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9703,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9695
					]
				},
				{
					"title": "Properties",
					"children": [
						9697,
						9698,
						9699,
						9700,
						9701,
						9702,
						9703
					]
				}
			]
		},
		{
			"id": 9704,
			"name": "DiscountConditionProductTag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a discount condition and a product tag"
					}
				]
			},
			"children": [
				{
					"id": 9705,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9706,
							"name": "new DiscountConditionProductTag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a discount condition and a product tag"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9704,
								"name": "DiscountConditionProductTag",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9707,
					"name": "product_tag_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Tag"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9708,
					"name": "condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Discount Condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9709,
					"name": "product_tag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product tag."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10403,
						"name": "ProductTag",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9710,
					"name": "discount_condition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount condition."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9655,
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9711,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9712,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9713,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9705
					]
				},
				{
					"title": "Properties",
					"children": [
						9707,
						9708,
						9709,
						9710,
						9711,
						9712,
						9713
					]
				}
			]
		},
		{
			"id": 9714,
			"name": "DiscountConditionProductType",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a discount condition and a product type"
					}
				]
			},
			"children": [
				{
					"id": 9715,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9716,
							"name": "new DiscountConditionProductType",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a discount condition and a product type"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9714,
								"name": "DiscountConditionProductType",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9717,
					"name": "product_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Tag"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9718,
					"name": "condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Discount Condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9719,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10424,
						"name": "ProductType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9720,
					"name": "discount_condition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount condition."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9655,
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9721,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9722,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9723,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9715
					]
				},
				{
					"title": "Properties",
					"children": [
						9717,
						9718,
						9719,
						9720,
						9721,
						9722,
						9723
					]
				}
			]
		},
		{
			"id": 9684,
			"name": "DiscountConditionProduct",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a discount condition and a product"
					}
				]
			},
			"children": [
				{
					"id": 9685,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9686,
							"name": "new DiscountConditionProduct",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a discount condition and a product"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9684,
								"name": "DiscountConditionProduct",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9687,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Tag"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9688,
					"name": "condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Discount Condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9689,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10296,
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9690,
					"name": "discount_condition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount condition."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9655,
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9691,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9692,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9693,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9685
					]
				},
				{
					"title": "Properties",
					"children": [
						9687,
						9688,
						9689,
						9690,
						9691,
						9692,
						9693
					]
				}
			]
		},
		{
			"id": 9646,
			"name": "DiscountConditionType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The discount condition's type."
					}
				]
			},
			"children": [
				{
					"id": 9647,
					"name": "PRODUCTS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition is used for products."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "products"
					}
				},
				{
					"id": 9648,
					"name": "PRODUCT_TYPES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition is used for product types."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "product_types"
					}
				},
				{
					"id": 9649,
					"name": "PRODUCT_COLLECTIONS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition is used for product collections."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "product_collections"
					}
				},
				{
					"id": 9650,
					"name": "PRODUCT_TAGS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition is used for product tags."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "product_tags"
					}
				},
				{
					"id": 9651,
					"name": "CUSTOMER_GROUPS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition is used for customer groups."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9647,
						9648,
						9649,
						9650,
						9651
					]
				}
			]
		},
		{
			"id": 9652,
			"name": "DiscountConditionOperator",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible operators used for a discount condition."
					}
				]
			},
			"children": [
				{
					"id": 9653,
					"name": "IN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discountable resources are within the specified resources."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "in"
					}
				},
				{
					"id": 9654,
					"name": "NOT_IN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discountable resources are everything but the specified resources."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_in"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9653,
						9654
					]
				}
			]
		},
		{
			"id": 9655,
			"name": "DiscountCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Holds rule conditions for when a discount is applicable"
					}
				]
			},
			"children": [
				{
					"id": 9656,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9657,
							"name": "new DiscountCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds rule conditions for when a discount is applicable"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9655,
								"name": "DiscountCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9671,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9672,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9673,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9670,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9658,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the condition. The type affects the available resources associated with the condition. For example, if the type is `products`, that means the `products` relation will hold the products associated with this condition and other relations will be empty."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9646,
						"name": "DiscountConditionType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9659,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the condition. `in` indicates that discountable resources are within the specified resources. `not_in` indicates that discountable resources are everything but the specified resources."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9652,
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9660,
					"name": "discount_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the discount rule associated with the condition"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9661,
					"name": "discount_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount rule associated with the condition."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9731,
						"name": "DiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9662,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "products associated with this condition if `type` is `products`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9663,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product types associated with this condition if `type` is `product_types`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10424,
							"name": "ProductType",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9664,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product tags associated with this condition if `type` is `product_tags`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10403,
							"name": "ProductTag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9665,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product collections associated with this condition if `type` is `product_collections`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10361,
							"name": "ProductCollection",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9666,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer groups associated with this condition if `type` is `customer_groups`."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9610,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9667,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9668,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9669,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9656
					]
				},
				{
					"title": "Properties",
					"children": [
						9671,
						9672,
						9673,
						9670,
						9658,
						9659,
						9660,
						9661,
						9662,
						9663,
						9664,
						9665,
						9666,
						9667
					]
				},
				{
					"title": "Methods",
					"children": [
						9668
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9724,
			"name": "DiscountRuleType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible types of discount rules."
					}
				]
			},
			"children": [
				{
					"id": 9725,
					"name": "FIXED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discounts that reduce the price by a fixed amount."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "fixed"
					}
				},
				{
					"id": 9726,
					"name": "PERCENTAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discounts that reduce the price by a percentage reduction."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "percentage"
					}
				},
				{
					"id": 9727,
					"name": "FREE_SHIPPING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discounts that sets the shipping price to "
							},
							{
								"kind": "code",
								"text": "`0`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "free_shipping"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9725,
						9726,
						9727
					]
				}
			]
		},
		{
			"id": 9728,
			"name": "AllocationType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The scope that the discount should apply to."
					}
				]
			},
			"children": [
				{
					"id": 9729,
					"name": "TOTAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount should be applied to the checkout total."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "total"
					}
				},
				{
					"id": 9730,
					"name": "ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount should be applied to applicable items in the cart."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "item"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9729,
						9730
					]
				}
			]
		},
		{
			"id": 9731,
			"name": "DiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount rule defines how a Discount is calculated when applied to a Cart."
					}
				]
			},
			"children": [
				{
					"id": 9732,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9733,
							"name": "new DiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount rule defines how a Discount is calculated when applied to a Cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9731,
								"name": "DiscountRule",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9743,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9744,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9745,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9742,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9734,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A short description of the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9735,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Discount, can be `fixed` for discounts that reduce the price by a fixed amount, `percentage` for percentage reductions or `free_shipping` for shipping vouchers."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9724,
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9736,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the discount represents; this will depend on the type of the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9737,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The scope that the discount should apply to."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9728,
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9738,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount conditions associated with the rule. They can be used to limit when the discount can be used."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9655,
							"name": "DiscountCondition",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9739,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9740,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9741,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9732
					]
				},
				{
					"title": "Properties",
					"children": [
						9743,
						9744,
						9745,
						9742,
						9734,
						9735,
						9736,
						9737,
						9738,
						9739
					]
				},
				{
					"title": "Methods",
					"children": [
						9740
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9623,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 9624,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9625,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9623,
								"name": "Discount",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9643,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9644,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9645,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9642,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9626,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code for the discount - this will be used by the customer to apply the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9627,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if multiple instances of the discount can be generated. I.e. for newsletter discounts"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9628,
					"name": "rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the discount rule that defines how the discount will be applied to a cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9629,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount rule that defines how the discount will be applied to a cart.."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9731,
						"name": "DiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9630,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Discount has been disabled. Disabled discounts cannot be applied to carts"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9631,
					"name": "parent_discount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Discount that the discount was created from. This will always be a dynamic discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9632,
					"name": "parent_discount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the parent discount that this discount was created from."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9623,
						"name": "Discount",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9633,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The time at which the discount can be used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9634,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The time at which the discount can no longer be used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9635,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9636,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the regions in which the Discount can be used."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10547,
							"name": "Region",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9637,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times that a discount can be used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9638,
					"name": "usage_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of times a discount has been used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": 0
				},
				{
					"id": 9639,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9640,
					"name": "upperCaseCodeAndTrim",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9641,
							"name": "upperCaseCodeAndTrim",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9624
					]
				},
				{
					"title": "Properties",
					"children": [
						9643,
						9644,
						9645,
						9642,
						9626,
						9627,
						9628,
						9629,
						9630,
						9631,
						9632,
						9633,
						9634,
						9635,
						9636,
						9637,
						9638,
						9639
					]
				},
				{
					"title": "Methods",
					"children": [
						9640
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9746,
			"name": "DraftOrderStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The draft order's status."
					}
				]
			},
			"children": [
				{
					"id": 9747,
					"name": "OPEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order is open."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "open"
					}
				},
				{
					"id": 9748,
					"name": "COMPLETED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order is completed, and an order has been created from it."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "completed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						9747,
						9748
					]
				}
			]
		},
		{
			"id": 9749,
			"name": "DraftOrder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A draft order is created by an admin without direct involvement of the customer. Once its payment is marked as captured, it is transformed into an order."
					}
				]
			},
			"children": [
				{
					"id": 9750,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9751,
							"name": "new DraftOrder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A draft order is created by an admin without direct involvement of the customer. Once its payment is marked as captured, it is transformed into an order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9749,
								"name": "DraftOrder",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 9765,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 9766,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 9767,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 9752,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the draft order. It's changed to `completed` when it's transformed to an order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9746,
						"name": "DraftOrderStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "open"
				},
				{
					"id": 9753,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order's display ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9754,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart associated with the draft order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9755,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart associated with the draft order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9756,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order created from the draft order when its payment is captured."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9757,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order created from the draft order when its payment is captured."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9758,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the draft order was canceled at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9759,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the draft order was completed at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9760,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to send the customer notifications regarding order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9761,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9762,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the cart associated with the draft order in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9763,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9764,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9750
					]
				},
				{
					"title": "Properties",
					"children": [
						9765,
						9766,
						9767,
						9752,
						9753,
						9754,
						9755,
						9756,
						9757,
						9758,
						9759,
						9760,
						9761,
						9762
					]
				},
				{
					"title": "Methods",
					"children": [
						9763
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9794,
			"name": "FulfillmentItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a Line Item and a Fulfillment."
					}
				]
			},
			"children": [
				{
					"id": 9795,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9796,
							"name": "new FulfillmentItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a Line Item and a Fulfillment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9794,
								"name": "FulfillmentItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9797,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment that the Fulfillment Item belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9798,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that the Fulfillment Item references."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9799,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillment."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9768,
						"name": "Fulfillment",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9800,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9801,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item that is included in the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9795
					]
				},
				{
					"title": "Properties",
					"children": [
						9797,
						9798,
						9799,
						9800,
						9801
					]
				}
			]
		},
		{
			"id": 9802,
			"name": "FulfillmentProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A fulfillment provider represents a fulfillment service installed in the Medusa backend, either through a plugin or backend customizations. It holds the fulfillment service's installation status."
					}
				]
			},
			"children": [
				{
					"id": 9803,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9804,
							"name": "new FulfillmentProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A fulfillment provider represents a fulfillment service installed in the Medusa backend, either through a plugin or backend customizations. It holds the fulfillment service's installation status."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9802,
								"name": "FulfillmentProvider",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9805,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment provider as given by the fulfillment service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9806,
					"name": "is_installed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the fulfillment service is installed in the current version. If a fulfillment service is no longer installed, the `is_installed` attribute is set to `false`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9803
					]
				},
				{
					"title": "Properties",
					"children": [
						9805,
						9806
					]
				}
			]
		},
		{
			"id": 9768,
			"name": "Fulfillment",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
					}
				]
			},
			"children": [
				{
					"id": 9769,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9770,
							"name": "new Fulfillment",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9768,
								"name": "Fulfillment",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 9791,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 9792,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 9793,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 9771,
					"name": "claim_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Claim that the Fulfillment belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9772,
					"name": "claim_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim that the fulfillment may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9518,
						"name": "ClaimOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9773,
					"name": "swap_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Swap that the Fulfillment belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9774,
					"name": "swap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swap that the fulfillment may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10814,
						"name": "Swap",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9775,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order that the Fulfillment belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9776,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the fulfillment may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9777,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag for describing whether or not notifications related to this should be sent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9778,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider responsible for handling the fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9779,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location the fulfillment will be shipped from"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9780,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillment provider responsible for handling the fulfillment."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9802,
						"name": "FulfillmentProvider",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9781,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Fulfillment Items in the Fulfillment. These hold information about how many of each Line Item has been fulfilled."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9794,
							"name": "FulfillmentItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9782,
					"name": "tracking_links",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Tracking Links that can be used to track the status of the Fulfillment. These will usually be provided by the Fulfillment Provider."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10868,
							"name": "TrackingLink",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9783,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers that can be used to track the status of the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9784,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This contains all the data necessary for the Fulfillment provider to handle the fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9785,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Fulfillment was shipped."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9786,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Fulfillment was canceled."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9787,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9788,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the fulfillment in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9789,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9790,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9769
					]
				},
				{
					"title": "Properties",
					"children": [
						9791,
						9792,
						9793,
						9771,
						9772,
						9773,
						9774,
						9775,
						9776,
						9777,
						9778,
						9779,
						9780,
						9781,
						9782,
						9783,
						9784,
						9785,
						9786,
						9787,
						9788
					]
				},
				{
					"title": "Methods",
					"children": [
						9789
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9827,
			"name": "GiftCardTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gift Card Transactions are created once a Customer uses a Gift Card to pay for their Order."
					}
				]
			},
			"children": [
				{
					"id": 9828,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9829,
							"name": "new GiftCardTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift Card Transactions are created once a Customer uses a Gift Card to pay for their Order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9827,
								"name": "GiftCardTransaction",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9830,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card transaction's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9831,
					"name": "gift_card_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Gift Card that was used in the transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9832,
					"name": "gift_card",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the gift card associated used in this transaction."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9807,
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9833,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the gift card was used for payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9834,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the gift card was used for payment."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9835,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that was used from the Gift Card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9836,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9837,
					"name": "is_taxable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the transaction is taxable or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9838,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate of the transaction"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9839,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9840,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9828
					]
				},
				{
					"title": "Properties",
					"children": [
						9830,
						9831,
						9832,
						9833,
						9834,
						9835,
						9836,
						9837,
						9838
					]
				},
				{
					"title": "Methods",
					"children": [
						9839
					]
				}
			]
		},
		{
			"id": 9807,
			"name": "GiftCard",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
					}
				]
			},
			"children": [
				{
					"id": 9808,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9809,
							"name": "new GiftCard",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9807,
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9824,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9825,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9826,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9823,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9810,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique code that identifies the Gift Card. This is used by the Customer to redeem the value of the Gift Card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9811,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the Gift Card represents."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9812,
					"name": "balance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The remaining value on the Gift Card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9813,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region this gift card is available in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9814,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region this gift card is available in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9815,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the gift card was purchased in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9816,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the gift card was purchased in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9817,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card has been disabled. Disabled Gift Cards cannot be applied to carts."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9818,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The time at which the Gift Card can no longer be used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9819,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card's tax rate that will be applied on calculating totals"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9820,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9821,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9822,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9808
					]
				},
				{
					"title": "Properties",
					"children": [
						9824,
						9825,
						9826,
						9823,
						9810,
						9811,
						9812,
						9813,
						9814,
						9815,
						9816,
						9817,
						9818,
						9819,
						9820
					]
				},
				{
					"title": "Methods",
					"children": [
						9821
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9841,
			"name": "IdempotencyKey",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Idempotency Key is used to continue a process in case of any failure that might occur."
					}
				]
			},
			"children": [
				{
					"id": 9842,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9843,
							"name": "new IdempotencyKey",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Idempotency Key is used to continue a process in case of any failure that might occur."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9841,
								"name": "IdempotencyKey",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9844,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempotency key's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9845,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique randomly generated key used to determine the state of a process."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9846,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date which the idempotency key was locked."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9847,
					"name": "locked_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date which the idempotency key was locked."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9848,
					"name": "request_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The method of the request"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9849,
					"name": "request_params",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The parameters passed to the request"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9850,
					"name": "request_path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The request's path"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9851,
					"name": "response_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The response's code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9852,
					"name": "response_body",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The response's body"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9853,
					"name": "recovery_point",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Where to continue from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "started"
				},
				{
					"id": 9854,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9855,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9842
					]
				},
				{
					"title": "Properties",
					"children": [
						9844,
						9845,
						9846,
						9847,
						9848,
						9849,
						9850,
						9851,
						9852,
						9853
					]
				},
				{
					"title": "Methods",
					"children": [
						9854
					]
				}
			]
		},
		{
			"id": 9856,
			"name": "Image",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
					}
				]
			},
			"children": [
				{
					"id": 9857,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9858,
							"name": "new Image",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9856,
								"name": "Image",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9864,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The image's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9865,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9866,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9863,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9859,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL at which the image file can be found."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9860,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9861,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9862,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9857
					]
				},
				{
					"title": "Properties",
					"children": [
						9864,
						9865,
						9866,
						9863,
						9859,
						9860
					]
				},
				{
					"title": "Methods",
					"children": [
						9861
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9867,
			"name": "Invite",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An invite is created when an admin user invites a new user to join the store's team. Once the invite is accepted, it's deleted."
					}
				]
			},
			"children": [
				{
					"id": 9868,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9869,
							"name": "new Invite",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invite is created when an admin user invites a new user to join the store's team. Once the invite is accepted, it's deleted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9867,
								"name": "Invite",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9879,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9880,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9881,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9878,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9870,
					"name": "user_email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the user being invited."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9871,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's role. These roles don't change the privileges of the user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10883,
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "member"
				},
				{
					"id": 9872,
					"name": "accepted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the invite was accepted or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9873,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The token used to accept the invite."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9874,
					"name": "expires_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the invite expires at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9875,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9876,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9877,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9868
					]
				},
				{
					"title": "Properties",
					"children": [
						9879,
						9880,
						9881,
						9878,
						9870,
						9871,
						9872,
						9873,
						9874,
						9875
					]
				},
				{
					"title": "Methods",
					"children": [
						9876
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9934,
			"name": "LineItemAdjustment",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Line Item Adjustment includes details on discounts applied on a line item."
					}
				]
			},
			"children": [
				{
					"id": 9935,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9936,
							"name": "new LineItemAdjustment",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Line Item Adjustment includes details on discounts applied on a line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9934,
								"name": "LineItemAdjustment",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 9937,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Item Adjustment's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9938,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9939,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9940,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item's adjustment description"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9941,
					"name": "discount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discount associated with the adjustment."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9623,
						"name": "Discount",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9942,
					"name": "discount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the discount associated with the adjustment"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9943,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustment amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9944,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9945,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9946,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9935
					]
				},
				{
					"title": "Properties",
					"children": [
						9937,
						9938,
						9939,
						9940,
						9941,
						9942,
						9943,
						9944
					]
				},
				{
					"title": "Methods",
					"children": [
						9945
					]
				}
			]
		},
		{
			"id": 9947,
			"name": "LineItemTaxLine",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Line Item Tax Line represents the taxes applied on a line item."
					}
				]
			},
			"children": [
				{
					"id": 9948,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9949,
							"name": "new LineItemTaxLine",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Line Item Tax Line represents the taxes applied on a line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9947,
								"name": "LineItemTaxLine",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "TaxLine.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.constructor"
					}
				},
				{
					"id": 9958,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item tax line's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.id"
					}
				},
				{
					"id": 9959,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.created_at"
					}
				},
				{
					"id": 9960,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.updated_at"
					}
				},
				{
					"id": 9950,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9951,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9952,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9953,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9954,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge tax by"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.rate"
					}
				},
				{
					"id": 9955,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A human friendly name for the tax"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.name"
					}
				},
				{
					"id": 9956,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A code to identify the tax type by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.code"
					}
				},
				{
					"id": 9957,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9948
					]
				},
				{
					"title": "Properties",
					"children": [
						9958,
						9959,
						9960,
						9950,
						9951,
						9954,
						9955,
						9956,
						9957
					]
				},
				{
					"title": "Methods",
					"children": [
						9952
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
						"qualifiedName": "TaxLine"
					},
					"name": "TaxLine",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9882,
			"name": "LineItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Line Items are created when a product is added to a Cart. When Line Items are purchased they will get copied to the resulting order, swap, or claim, and can eventually be referenced in Fulfillments and Returns. Line items may also be used for order edits."
					}
				]
			},
			"children": [
				{
					"id": 9883,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9884,
							"name": "new LineItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Line Items are created when a product is added to a Cart. When Line Items are purchased they will get copied to the resulting order, swap, or claim, and can eventually be referenced in Fulfillments and Returns. Line items may also be used for order edits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9882,
								"name": "LineItem",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 9931,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 9932,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 9933,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 9885,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart that the line item may belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9886,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart that the line item may belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9887,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the line item may belongs to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9888,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the line item may belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9889,
					"name": "swap_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the swap that the line item may belong to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9890,
					"name": "swap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swap that the line item may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10814,
						"name": "Swap",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9891,
					"name": "claim_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the claim that the line item may belong to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9892,
					"name": "claim_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim that the line item may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9518,
						"name": "ClaimOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9893,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the item's tax lines."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9947,
							"name": "LineItemTaxLine",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9894,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the item's adjustments, which are available when a discount is applied on the item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9934,
							"name": "LineItemAdjustment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9895,
					"name": "original_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the original line item. This is useful if the line item belongs to a resource that references an order, such as a return or an order edit."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9896,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order edit that the item may belong to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9897,
					"name": "order_edit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order edit."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10134,
								"name": "OrderEdit",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9898,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9899,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A more detailed description of the contents of the Line Item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9900,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A URL string to a small image of the contents of the Line Item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9901,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Is the item being returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9902,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Line Item is a Gift Card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9903,
					"name": "should_merge",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if new Line Items with the same variant should be merged or added as an additional Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 9904,
					"name": "allow_discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Line Item should be included when doing discount calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 9905,
					"name": "has_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Line Item has fulfillment associated with it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 9906,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of one unit of the content in the Line Item. This should be in the currency defined by the Cart/Order/Swap/Claim that the Line Item belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9907,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Product Variant contained in the Line Item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9908,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product variant that this item was created from."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10445,
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9909,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9910,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the content in the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9911,
					"name": "fulfilled_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item that has been fulfilled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9912,
					"name": "returned_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item that has been returned."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9913,
					"name": "shipped_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item that has been shipped."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9914,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9915,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if the line item unit_price include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 9916,
					"name": "refundable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that can be refunded from the given Line Item. Takes taxes and discounts into consideration."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9917,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9918,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of tax of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9919,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9920,
					"name": "original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original total amount of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9921,
					"name": "original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original tax total amount of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9922,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount of the line item rounded"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9923,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9924,
					"name": "gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the gift card of the line item"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9925,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9926,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9927,
					"name": "beforeUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9928,
							"name": "beforeUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9929,
					"name": "afterUpdateOrLoad",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9930,
							"name": "afterUpdateOrLoad",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9883
					]
				},
				{
					"title": "Properties",
					"children": [
						9931,
						9932,
						9933,
						9885,
						9886,
						9887,
						9888,
						9889,
						9890,
						9891,
						9892,
						9893,
						9894,
						9895,
						9896,
						9897,
						9898,
						9899,
						9900,
						9901,
						9902,
						9903,
						9904,
						9905,
						9906,
						9907,
						9908,
						9909,
						9910,
						9911,
						9912,
						9913,
						9914,
						9915,
						9916,
						9917,
						9918,
						9919,
						9920,
						9921,
						9922,
						9923,
						9924
					]
				},
				{
					"title": "Methods",
					"children": [
						9925,
						9927,
						9929
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9961,
			"name": "MoneyAmount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Money Amount represent a price amount, for example, a product variant's price or a price in a price list. Each Money Amount either has a Currency or Region associated with it to indicate the pricing in a given Currency or, for fully region-based pricing, the given price in a specific Region. If region-based pricing is used, the amount will be in the currency defined for the Region."
					}
				]
			},
			"children": [
				{
					"id": 9962,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9963,
							"name": "new MoneyAmount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Money Amount represent a price amount, for example, a product variant's price or a price in a price list. Each Money Amount either has a Currency or Region associated with it to indicate the pricing in a given Currency or, for fully region-based pricing, the given price in a specific Region. If region-based pricing is used, the amount will be in the currency defined for the Region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9961,
								"name": "MoneyAmount",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9983,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The money amount's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9984,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 9985,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9982,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9964,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character currency code that the money amount may belong to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9965,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the currency that the money amount may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9966,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount in the smallest currecny unit (e.g. cents 100 cents to charge $1) that the Product Variant will cost."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9967,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity that the Money Amount applies to. If this value is not set, the Money Amount applies to all quantities."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9968,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity that the Money Amount applies to. If this value is not set, the Money Amount applies to all quantities."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9969,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list that the money amount may belong to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9970,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the price list that the money amount may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10273,
								"name": "PriceList",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 9971,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10445,
							"name": "ProductVariant",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 9972,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product variant that the money amount may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10445,
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9973,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant contained in the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9974,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's ID"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9975,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region that the money amount may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9976,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9977,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				},
				{
					"id": 9978,
					"name": "beforeUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9979,
							"name": "beforeUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9980,
					"name": "afterLoad",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9981,
							"name": "afterLoad",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9962
					]
				},
				{
					"title": "Properties",
					"children": [
						9983,
						9984,
						9985,
						9982,
						9964,
						9965,
						9966,
						9967,
						9968,
						9969,
						9970,
						9971,
						9972,
						9973,
						9974,
						9975
					]
				},
				{
					"title": "Methods",
					"children": [
						9976,
						9978,
						9980
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 9986,
			"name": "Note",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Note is an element that can be used in association with different resources to allow admin users to describe additional information. For example, they can be used to add additional information about orders."
					}
				]
			},
			"children": [
				{
					"id": 9987,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9988,
							"name": "new Note",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Note is an element that can be used in association with different resources to allow admin users to describe additional information. For example, they can be used to add additional information about orders."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 9986,
								"name": "Note",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 9998,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The note's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 9999,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10000,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 9997,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 9989,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The contents of the note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9990,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of resource that the Note refers to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9991,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource that the Note refers to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9992,
					"name": "author_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the user that created the note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9993,
					"name": "author",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the user that created the note."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10887,
						"name": "User",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 9994,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9995,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 9996,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						9987
					]
				},
				{
					"title": "Properties",
					"children": [
						9998,
						9999,
						10000,
						9997,
						9989,
						9990,
						9991,
						9992,
						9993,
						9994
					]
				},
				{
					"title": "Methods",
					"children": [
						9995
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10001,
			"name": "NotificationProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A notification provider represents a notification service installed in the Medusa backend, either through a plugin or backend customizations. It holds the notification service's installation status."
					}
				]
			},
			"children": [
				{
					"id": 10002,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10003,
							"name": "new NotificationProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A notification provider represents a notification service installed in the Medusa backend, either through a plugin or backend customizations. It holds the notification service's installation status."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10001,
								"name": "NotificationProvider",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10004,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the notification provider as given by the notification service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10005,
					"name": "is_installed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the notification service is installed in the current version. If a notification service is no longer installed, the `is_installed` attribute is set to `false`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10002
					]
				},
				{
					"title": "Properties",
					"children": [
						10004,
						10005
					]
				}
			]
		},
		{
			"id": 10006,
			"name": "Notification",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A notification is an alert sent, typically to customers, using the installed Notification Provider as a reaction to internal events such as `order.placed`. Notifications can be resent."
					}
				]
			},
			"children": [
				{
					"id": 10007,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10008,
							"name": "new Notification",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A notification is an alert sent, typically to customers, using the installed Notification Provider as a reaction to internal events such as `order.placed`. Notifications can be resent."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10006,
								"name": "Notification",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10023,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The notification's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10024,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10025,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10009,
					"name": "event_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the event that the notification was sent for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10010,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of resource that the Notification refers to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10011,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource that the Notification refers to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10012,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer that this notification was sent to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10013,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the customer that this notification was sent to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9589,
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10014,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address that the Notification was sent to. This will usually be an email address, but can represent other addresses such as a chat bot user ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10015,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data that the Notification was sent with. This contains all the data necessary for the Notification Provider to initiate a resend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10016,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The notification's parent ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10017,
					"name": "parent_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the parent notification."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10006,
						"name": "Notification",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10018,
					"name": "resends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of all resends of the notification."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10006,
							"name": "Notification",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10019,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the notification provider used to send the notification."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10020,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The notification provider used to send the notification."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10001,
						"name": "NotificationProvider",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10021,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10022,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10007
					]
				},
				{
					"title": "Properties",
					"children": [
						10023,
						10024,
						10025,
						10009,
						10010,
						10011,
						10012,
						10013,
						10014,
						10015,
						10016,
						10017,
						10018,
						10019,
						10020
					]
				},
				{
					"title": "Methods",
					"children": [
						10021
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10026,
			"name": "Oauth",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 10027,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10028,
							"name": "new Oauth",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 10026,
								"name": "Oauth",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10029,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10030,
					"name": "display_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10031,
					"name": "application_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10032,
					"name": "install_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10033,
					"name": "uninstall_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10034,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10035,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10036,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10027
					]
				},
				{
					"title": "Properties",
					"children": [
						10029,
						10030,
						10031,
						10032,
						10033,
						10034
					]
				},
				{
					"title": "Methods",
					"children": [
						10035
					]
				}
			]
		},
		{
			"id": 10128,
			"name": "OrderEditStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit's status."
					}
				]
			},
			"children": [
				{
					"id": 10129,
					"name": "CONFIRMED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit is confirmed."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "confirmed"
					}
				},
				{
					"id": 10130,
					"name": "DECLINED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit is declined."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "declined"
					}
				},
				{
					"id": 10131,
					"name": "REQUESTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit is requested."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requested"
					}
				},
				{
					"id": 10132,
					"name": "CREATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit is created."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "created"
					}
				},
				{
					"id": 10133,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10129,
						10130,
						10131,
						10132,
						10133
					]
				}
			]
		},
		{
			"id": 10134,
			"name": "OrderEdit",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Order edit allows modifying items in an order, such as adding, updating, or deleting items from the original order. Once the order edit is confirmed, the changes are reflected on the original order."
					}
				]
			},
			"children": [
				{
					"id": 10135,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10136,
							"name": "new OrderEdit",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit allows modifying items in an order, such as adding, updating, or deleting items from the original order. Once the order edit is confirmed, the changes are reflected on the original order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10134,
								"name": "OrderEdit",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10167,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order edit's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10168,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10169,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10137,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that is edited"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10138,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that this order edit was created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10139,
					"name": "changes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of all the changes on the original order's line items."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10174,
							"name": "OrderItemChange",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10140,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with additional details about the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10141,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user or customer who created the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10142,
					"name": "requested_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user or customer who requested the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10143,
					"name": "requested_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the edit was requested."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10144,
					"name": "confirmed_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user or customer who confirmed the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10145,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the edit was confirmed."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10146,
					"name": "declined_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user or customer who declined the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10147,
					"name": "declined_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note why  the order edit is declined."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10148,
					"name": "declined_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the edit was declined."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10149,
					"name": "canceled_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user or customer who cancelled the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10150,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the edit was cancelled."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10151,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cloned items from the original order with the new changes. Once the order edit is confirmed, these line items are associated with the original order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10152,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10153,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payment collection used to authorize additional payment if necessary."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10222,
						"name": "PaymentCollection",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10154,
					"name": "shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the shipping amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10155,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10156,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of tax"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10157,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the edited order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10158,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of subtotal"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10159,
					"name": "gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the gift card amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10160,
					"name": "gift_card_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the gift card tax amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10161,
					"name": "difference_due",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The difference between the total amount of the order and total amount of edited order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10162,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the order edit."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10128,
						"name": "OrderEditStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10163,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10164,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10165,
					"name": "loadStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 10166,
							"name": "loadStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10135
					]
				},
				{
					"title": "Properties",
					"children": [
						10167,
						10168,
						10169,
						10137,
						10138,
						10139,
						10140,
						10141,
						10142,
						10143,
						10144,
						10145,
						10146,
						10147,
						10148,
						10149,
						10150,
						10151,
						10152,
						10153,
						10154,
						10155,
						10156,
						10157,
						10158,
						10159,
						10160,
						10161,
						10162
					]
				},
				{
					"title": "Methods",
					"children": [
						10163,
						10165
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10170,
			"name": "OrderEditItemChangeType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of the order edit item change."
					}
				]
			},
			"children": [
				{
					"id": 10171,
					"name": "ITEM_ADD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new item to be added to the original order."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "item_add"
					}
				},
				{
					"id": 10172,
					"name": "ITEM_REMOVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An existing item to be removed from the original order."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "item_remove"
					}
				},
				{
					"id": 10173,
					"name": "ITEM_UPDATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An existing item to be updated in the original order."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "item_update"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10171,
						10172,
						10173
					]
				}
			]
		},
		{
			"id": 10174,
			"name": "OrderItemChange",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An order item change is a change made within an order edit to an order's items. These changes are not reflected on the original order until the order edit is confirmed."
					}
				]
			},
			"children": [
				{
					"id": 10175,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10176,
							"name": "new OrderItemChange",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An order item change is a change made within an order edit to an order's items. These changes are not reflected on the original order until the order edit is confirmed."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10174,
								"name": "OrderItemChange",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10187,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order item change's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10188,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10189,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10186,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10177,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order item change's status"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10170,
						"name": "OrderEditItemChangeType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10178,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order edit"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10179,
					"name": "order_edit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order edit the item change is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10134,
						"name": "OrderEdit",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10180,
					"name": "original_line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the original line item in the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10181,
					"name": "original_line_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original line item this item change references. This is used if the item change updates or deletes the original item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10182,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cloned line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10183,
					"name": "line_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the resulting line item after the item change. This line item is then used in the original order once the order edit is confirmed."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10184,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10185,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10175
					]
				},
				{
					"title": "Properties",
					"children": [
						10187,
						10188,
						10189,
						10186,
						10177,
						10178,
						10179,
						10180,
						10181,
						10182,
						10183
					]
				},
				{
					"title": "Methods",
					"children": [
						10184
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10037,
			"name": "OrderStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's status."
					}
				]
			},
			"children": [
				{
					"id": 10038,
					"name": "PENDING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order is pending."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 10039,
					"name": "COMPLETED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order is completed, meaning that\nthe items have been fulfilled and the payment\nhas been captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "completed"
					}
				},
				{
					"id": 10040,
					"name": "ARCHIVED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order is archived."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "archived"
					}
				},
				{
					"id": 10041,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 10042,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order requires action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10038,
						10039,
						10040,
						10041,
						10042
					]
				}
			]
		},
		{
			"id": 10043,
			"name": "FulfillmentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's fulfillment status."
					}
				]
			},
			"children": [
				{
					"id": 10044,
					"name": "NOT_FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's items are not fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_fulfilled"
					}
				},
				{
					"id": 10045,
					"name": "PARTIALLY_FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the order's items, but not all, are fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_fulfilled"
					}
				},
				{
					"id": 10046,
					"name": "FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's items are fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "fulfilled"
					}
				},
				{
					"id": 10047,
					"name": "PARTIALLY_SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the order's items, but not all, are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_shipped"
					}
				},
				{
					"id": 10048,
					"name": "SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's items are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "shipped"
					}
				},
				{
					"id": 10049,
					"name": "PARTIALLY_RETURNED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the order's items, but not all, are returned."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_returned"
					}
				},
				{
					"id": 10050,
					"name": "RETURNED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's items are returned."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "returned"
					}
				},
				{
					"id": 10051,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's fulfillments are canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 10052,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's fulfillment requires action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10044,
						10045,
						10046,
						10047,
						10048,
						10049,
						10050,
						10051,
						10052
					]
				}
			]
		},
		{
			"id": 10053,
			"name": "PaymentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's payment status."
					}
				]
			},
			"children": [
				{
					"id": 10054,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment is not paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 10055,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment is awaiting capturing."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 10056,
					"name": "CAPTURED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment is captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "captured"
					}
				},
				{
					"id": 10057,
					"name": "PARTIALLY_REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the order's payment amount is refunded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_refunded"
					}
				},
				{
					"id": 10058,
					"name": "REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment amount is refunded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "refunded"
					}
				},
				{
					"id": 10059,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 10060,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment requires action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10054,
						10055,
						10056,
						10057,
						10058,
						10059,
						10060
					]
				}
			]
		},
		{
			"id": 10061,
			"name": "Order",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
					}
				]
			},
			"children": [
				{
					"id": 10062,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10063,
							"name": "new Order",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10061,
								"name": "Order",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10125,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10126,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10127,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10064,
					"name": "object",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"type": {
						"type": "literal",
						"value": "order"
					},
					"defaultValue": "\"order\""
				},
				{
					"id": 10065,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's status"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10037,
						"name": "OrderStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "pending"
				},
				{
					"id": 10066,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's fulfillment status"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10043,
						"name": "FulfillmentStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "not_fulfilled"
				},
				{
					"id": 10067,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's payment status"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10053,
						"name": "PaymentStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "not_paid"
				},
				{
					"id": 10068,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's display ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10069,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10070,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart associated with the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10071,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10072,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the customer associated with the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9589,
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10073,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10074,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the billing address associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10075,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the billing address associated with the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10076,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping address associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10077,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping address associated with the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10078,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region this order was created in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10079,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region this order was created in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10080,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character currency code that is used in the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10081,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the currency used in the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10082,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's tax rate"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10083,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the discounts applied on the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9623,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10084,
					"name": "gift_cards",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the gift card used in the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9807,
							"name": "GiftCard",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10085,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping methods used in the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10661,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10086,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payments used in the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10190,
							"name": "Payment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10087,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillments created for the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9768,
							"name": "Fulfillment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10088,
					"name": "returns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the returns created for the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10576,
							"name": "Return",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10089,
					"name": "claims",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claims created for the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9518,
							"name": "ClaimOrder",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10090,
					"name": "refunds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the refunds created for the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10530,
							"name": "Refund",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10091,
					"name": "swaps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swaps created for the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10814,
							"name": "Swap",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10092,
					"name": "draft_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the draft order this order was created from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10093,
					"name": "draft_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the draft order this order was created from."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9749,
						"name": "DraftOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10094,
					"name": "edits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order edits done on the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10134,
							"name": "OrderEdit",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10095,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line items that belong to the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10096,
					"name": "gift_card_transactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card transactions made in the order."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9827,
							"name": "GiftCardTransaction",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10097,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the order was canceled on."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10098,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10099,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag for describing whether or not notifications related to this should be send."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10100,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the processing of the order in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10101,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an external order."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10102,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel this order belongs to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10103,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the sales channel this order belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10631,
						"name": "SalesChannel",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10104,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channels."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10631,
							"name": "SalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10105,
					"name": "shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of shipping"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10106,
					"name": "shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total applied on shipping"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10107,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount rounded"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10108,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10109,
					"name": "item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total applied on items"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10110,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of tax"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10111,
					"name": "refunded_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount refunded if the order is returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10112,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10113,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10114,
					"name": "paid_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount paid"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10115,
					"name": "refundable_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that can be refunded"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10116,
					"name": "gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of gift cards"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10117,
					"name": "gift_card_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of gift cards with taxes"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10118,
					"name": "returnable_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line items that are returnable as part of the order, swaps, or claims"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10119,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10120,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10121,
					"name": "beforeUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10122,
							"name": "beforeUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10123,
					"name": "afterLoad",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10124,
							"name": "afterLoad",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10062
					]
				},
				{
					"title": "Properties",
					"children": [
						10125,
						10126,
						10127,
						10064,
						10065,
						10066,
						10067,
						10068,
						10069,
						10070,
						10071,
						10072,
						10073,
						10074,
						10075,
						10076,
						10077,
						10078,
						10079,
						10080,
						10081,
						10082,
						10083,
						10084,
						10085,
						10086,
						10087,
						10088,
						10089,
						10090,
						10091,
						10092,
						10093,
						10094,
						10095,
						10096,
						10097,
						10098,
						10099,
						10100,
						10101,
						10102,
						10103,
						10104,
						10105,
						10106,
						10107,
						10108,
						10109,
						10110,
						10111,
						10112,
						10113,
						10114,
						10115,
						10116,
						10117,
						10118
					]
				},
				{
					"title": "Methods",
					"children": [
						10119,
						10121,
						10123
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10214,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's status."
					}
				]
			},
			"children": [
				{
					"id": 10215,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection isn't paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 10216,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is awaiting payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 10217,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment colleciton is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 10218,
					"name": "PARTIALLY_AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the payments in the payment collection are authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_authorized"
					}
				},
				{
					"id": 10219,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10215,
						10216,
						10217,
						10218,
						10219
					]
				}
			]
		},
		{
			"id": 10220,
			"name": "PaymentCollectionType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's type."
					}
				]
			},
			"children": [
				{
					"id": 10221,
					"name": "ORDER_EDIT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is used for an order edit."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "order_edit"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10221
					]
				}
			]
		},
		{
			"id": 10222,
			"name": "PaymentCollection",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A payment collection allows grouping and managing a list of payments at one. This can be helpful when making additional payment for order edits or integrating installment payments."
					}
				]
			},
			"children": [
				{
					"id": 10223,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10224,
							"name": "new PaymentCollection",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A payment collection allows grouping and managing a list of payments at one. This can be helpful when making additional payment for order edits or integrating installment payments."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10222,
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10241,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10242,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10243,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10240,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10225,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the payment collection"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10221,
						"name": "ORDER_EDIT",
						"package": "@medusajs/medusa",
						"qualifiedName": "PaymentCollectionType.ORDER_EDIT"
					}
				},
				{
					"id": 10226,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the payment collection"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10214,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10227,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description of the payment collection"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10228,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10229,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Authorized amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10230,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region this payment collection is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10231,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region this payment collection is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10232,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The three character ISO code for the currency this payment collection is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10233,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the currency this payment collection is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10234,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payment sessions created as part of the payment collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10255,
							"name": "PaymentSession",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10235,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payments created as part of the payment collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10190,
							"name": "Payment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10236,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10237,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the user that created the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10238,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10239,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10223
					]
				},
				{
					"title": "Properties",
					"children": [
						10241,
						10242,
						10243,
						10240,
						10225,
						10226,
						10227,
						10228,
						10229,
						10230,
						10231,
						10232,
						10233,
						10234,
						10235,
						10236,
						10237
					]
				},
				{
					"title": "Methods",
					"children": [
						10238
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10244,
			"name": "PaymentProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A payment provider represents a payment service installed in the Medusa backend, either through a plugin or backend customizations. It holds the payment service's installation status."
					}
				]
			},
			"children": [
				{
					"id": 10245,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10246,
							"name": "new PaymentProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A payment provider represents a payment service installed in the Medusa backend, either through a plugin or backend customizations. It holds the payment service's installation status."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10244,
								"name": "PaymentProvider",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10247,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider as given by the payment service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10248,
					"name": "is_installed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the payment service is installed in the current version. If a payment service is no longer installed, the `is_installed` attribute is set to `false`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10245
					]
				},
				{
					"title": "Properties",
					"children": [
						10247,
						10248
					]
				}
			]
		},
		{
			"id": 10249,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a payment session."
					}
				]
			},
			"children": [
				{
					"id": 10250,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 10251,
					"name": "PENDING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is pending."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 10252,
					"name": "REQUIRES_MORE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment requires an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_more"
					}
				},
				{
					"id": 10253,
					"name": "ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error occurred while processing the payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 10254,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10250,
						10251,
						10252,
						10253,
						10254
					]
				}
			]
		},
		{
			"id": 10255,
			"name": "PaymentSession",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Payment Session is created when a Customer initilizes the checkout flow, and can be used to hold the state of a payment flow. Each Payment Session is controlled by a Payment Provider, which is responsible for the communication with external payment services. Authorized Payment Sessions will eventually get promoted to Payments to indicate that they are authorized for payment processing such as capture or refund. Payment sessions can also be used as part of payment collections."
					}
				]
			},
			"children": [
				{
					"id": 10256,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10257,
							"name": "new PaymentSession",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Payment Session is created when a Customer initilizes the checkout flow, and can be used to hold the state of a payment flow. Each Payment Session is controlled by a Payment Provider, which is responsible for the communication with external payment services. Authorized Payment Sessions will eventually get promoted to Payments to indicate that they are authorized for payment processing such as capture or refund. Payment sessions can also be used as part of payment collections."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10255,
								"name": "PaymentSession",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10270,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10271,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10272,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10258,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart that the payment session was created for."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10259,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart that the payment session was created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10260,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider that is responsible for the Payment Session"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10261,
					"name": "is_selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Payment Session has been selected as the method that will be used to complete the purchase."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 10262,
					"name": "is_initiated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if a communication with the third party provider has been initiated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10263,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the status of the Payment Session. Will default to `pending`, and will eventually become `authorized`. Payment Sessions may have the status of `requires_more` to indicate that further actions are to be completed by the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10264,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data required for the Payment Provider to identify, modify and process the Payment Session. Typically this will be an object that holds an id to the external payment session, but can be an empty object if the Payment Provider doesn't hold any state."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10265,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of a cart in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10266,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that the Payment Session has been authorized for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10267,
					"name": "payment_authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Payment Session was authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10268,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10269,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10256
					]
				},
				{
					"title": "Properties",
					"children": [
						10270,
						10271,
						10272,
						10258,
						10259,
						10260,
						10261,
						10262,
						10263,
						10264,
						10265,
						10266,
						10267
					]
				},
				{
					"title": "Methods",
					"children": [
						10268
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10190,
			"name": "Payment",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A payment is originally created from a payment session. Once a payment session is authorized, the payment is created to represent the authorized amount with a given payment method. Payments can be captured, canceled or refunded. Payments can be made towards orders, swaps, order edits, or other resources."
					}
				]
			},
			"children": [
				{
					"id": 10191,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10192,
							"name": "new Payment",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A payment is originally created from a payment session. Once a payment session is authorized, the payment is created to represent the authorized amount with a given payment method. Payments can be captured, canceled or refunded. Payments can be made towards orders, swaps, order edits, or other resources."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10190,
								"name": "Payment",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10211,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10212,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10213,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10193,
					"name": "swap_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the swap that this payment was potentially created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10194,
					"name": "swap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swap that this payment was potentially created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10814,
						"name": "Swap",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10195,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart that the payment session was potentially created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10196,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart that the payment session was potentially created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10197,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the payment session was potentially created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10198,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the payment session was potentially created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10199,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that the Payment has been authorized for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10200,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10201,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the currency of the payment."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10202,
					"name": "amount_refunded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original Payment amount that has been refunded back to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": 0
				},
				{
					"id": 10203,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Payment Provider that is responsible for the Payment"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10204,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data required for the Payment Provider to identify, modify and process the Payment. Typically this will be an object that holds an id to the external payment session, but can be an empty object if the Payment Provider doesn't hold any state."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10205,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Payment was captured."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10206,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Payment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10207,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10208,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of a payment in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10209,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10210,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10191
					]
				},
				{
					"title": "Properties",
					"children": [
						10211,
						10212,
						10213,
						10193,
						10194,
						10195,
						10196,
						10197,
						10198,
						10199,
						10200,
						10201,
						10202,
						10203,
						10204,
						10205,
						10206,
						10207,
						10208
					]
				},
				{
					"title": "Methods",
					"children": [
						10209
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10273,
			"name": "PriceList",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Price List represents a set of prices that override the default price for one or more product variants."
					}
				]
			},
			"children": [
				{
					"id": 10274,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10275,
							"name": "new PriceList",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Price List represents a set of prices that override the default price for one or more product variants."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10273,
								"name": "PriceList",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10288,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10289,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10290,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10287,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10276,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10277,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10278,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of Price List. This can be one of either `sale` or `override`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
							"qualifiedName": "PriceListType"
						},
						"name": "PriceListType",
						"package": "@medusajs/utils"
					},
					"defaultValue": "sale"
				},
				{
					"id": 10279,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
							"qualifiedName": "PriceListStatus"
						},
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					},
					"defaultValue": "draft"
				},
				{
					"id": 10280,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10281,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List stops being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10282,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the customer groups that the Price List can apply to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9610,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10283,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to the price list, represented as a Money Amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9961,
							"name": "MoneyAmount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10284,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the price list prices include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10285,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10286,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10274
					]
				},
				{
					"title": "Properties",
					"children": [
						10288,
						10289,
						10290,
						10287,
						10276,
						10277,
						10278,
						10279,
						10280,
						10281,
						10282,
						10283,
						10284
					]
				},
				{
					"title": "Methods",
					"children": [
						10285
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10340,
			"name": "ProductCategory",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category can be used to categorize products into a hierarchy of categories."
					}
				]
			},
			"children": [
				{
					"id": 10358,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10359,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10341,
					"name": "productCategoryProductJoinTable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"product_category_product\""
				},
				{
					"id": 10342,
					"name": "treeRelations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 10343,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10344,
							"name": "new ProductCategory",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A product category can be used to categorize products into a hierarchy of categories."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10340,
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10360,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10345,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10346,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": ""
				},
				{
					"id": 10347,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique string that identifies the Product Category - can for example be used in slug structures."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10348,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category visible/hidden in the store front"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Boolean"
						},
						"name": "Boolean",
						"package": "typescript"
					},
					"defaultValue": false
				},
				{
					"id": 10349,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category an internal category for admins"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Boolean"
						},
						"name": "Boolean",
						"package": "typescript"
					},
					"defaultValue": false
				},
				{
					"id": 10350,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the parent of this category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10340,
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 10351,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent category."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": null
				},
				{
					"id": 10352,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the category's children."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10340,
							"name": "ProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10353,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An integer that depicts the rank of category in a tree node"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": 0
				},
				{
					"id": 10354,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10355,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the products that belong to this category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10356,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10357,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10343
					]
				},
				{
					"title": "Properties",
					"children": [
						10358,
						10359,
						10341,
						10342,
						10360,
						10345,
						10346,
						10347,
						10348,
						10349,
						10350,
						10351,
						10352,
						10353,
						10354,
						10355
					]
				},
				{
					"title": "Methods",
					"children": [
						10356
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10361,
			"name": "ProductCollection",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Collection allows grouping together products for promotional purposes. For example, an admin can create a Summer collection, add products to it, and showcase it on the storefront."
					}
				]
			},
			"children": [
				{
					"id": 10362,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10363,
							"name": "new ProductCollection",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Collection allows grouping together products for promotional purposes. For example, an admin can create a Summer collection, add products to it, and showcase it on the storefront."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10361,
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10371,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10372,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10373,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10370,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10364,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title that the Product Collection is identified by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10365,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique string that identifies the Product Collection - can for example be used in slug structures."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10366,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the products that belong to this product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10367,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10368,
					"name": "createHandleIfNotProvided",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10369,
							"name": "createHandleIfNotProvided",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10362
					]
				},
				{
					"title": "Properties",
					"children": [
						10371,
						10372,
						10373,
						10370,
						10364,
						10365,
						10366,
						10367
					]
				},
				{
					"title": "Methods",
					"children": [
						10368
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10388,
			"name": "ProductOptionValue",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An option value is one of the possible values of a Product Option. Product Variants specify a unique combination of product option values."
					}
				]
			},
			"children": [
				{
					"id": 10389,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10390,
							"name": "new ProductOptionValue",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An option value is one of the possible values of a Product Option. Product Variants specify a unique combination of product option values."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10388,
								"name": "ProductOptionValue",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10400,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option value's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10401,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10402,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10399,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10391,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the Product Variant has defined for the specific Product Option (e.g. if the Product Option is \"Size\" this value could be `Small`, `Medium` or `Large`)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10392,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option that the Product Option Value belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10393,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product option that the Product Option Value belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10374,
						"name": "ProductOption",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10394,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant that uses this product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10395,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product variant that uses this product option value."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10445,
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10396,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10397,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10398,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10389
					]
				},
				{
					"title": "Properties",
					"children": [
						10400,
						10401,
						10402,
						10399,
						10391,
						10392,
						10393,
						10394,
						10395,
						10396
					]
				},
				{
					"title": "Methods",
					"children": [
						10397
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10374,
			"name": "ProductOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Option defines properties that may vary between different variants of a Product. Common Product Options are \"Size\" and \"Color\". Admins are free to create any product options."
					}
				]
			},
			"children": [
				{
					"id": 10375,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10376,
							"name": "new ProductOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Option defines properties that may vary between different variants of a Product. Common Product Options are \"Size\" and \"Color\". Admins are free to create any product options."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10374,
								"name": "ProductOption",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10385,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10386,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10387,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10384,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10377,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title that the Product Option is defined by (e.g. `Size`)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10378,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the values of the product option."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10388,
							"name": "ProductOptionValue",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10379,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product that this product option belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10380,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product that this product option belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10296,
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10381,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10382,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10383,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10375
					]
				},
				{
					"title": "Properties",
					"children": [
						10385,
						10386,
						10387,
						10384,
						10377,
						10378,
						10379,
						10380,
						10381
					]
				},
				{
					"title": "Methods",
					"children": [
						10382
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10403,
			"name": "ProductTag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Tag can be added to Products for easy filtering and grouping."
					}
				]
			},
			"children": [
				{
					"id": 10404,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10405,
							"name": "new ProductTag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Tag can be added to Products for easy filtering and grouping."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10403,
								"name": "ProductTag",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10411,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tag's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10412,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10413,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10410,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10406,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the Product Tag represents"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10407,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10408,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10409,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10404
					]
				},
				{
					"title": "Properties",
					"children": [
						10411,
						10412,
						10413,
						10410,
						10406,
						10407
					]
				},
				{
					"title": "Methods",
					"children": [
						10408
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10414,
			"name": "ProductTaxRate",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a tax rate and a product to indicate that the product is taxed in a way different than the default."
					}
				]
			},
			"children": [
				{
					"id": 10415,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10416,
							"name": "new ProductTaxRate",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a tax rate and a product to indicate that the product is taxed in a way different than the default."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10414,
								"name": "ProductTaxRate",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10417,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10418,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Tax Rate"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10419,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10296,
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10420,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10848,
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10421,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10422,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10423,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10415
					]
				},
				{
					"title": "Properties",
					"children": [
						10417,
						10418,
						10419,
						10420,
						10421,
						10422,
						10423
					]
				}
			]
		},
		{
			"id": 10435,
			"name": "ProductTypeTaxRate",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a tax rate and a product type to indicate that the product type is taxed in a different way than the default."
					}
				]
			},
			"children": [
				{
					"id": 10436,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10437,
							"name": "new ProductTypeTaxRate",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a tax rate and a product type to indicate that the product type is taxed in a different way than the default."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10435,
								"name": "ProductTypeTaxRate",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10438,
					"name": "product_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product type"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10439,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Tax Rate"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10440,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10424,
						"name": "ProductType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10441,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10848,
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10442,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10443,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10444,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10436
					]
				},
				{
					"title": "Properties",
					"children": [
						10438,
						10439,
						10440,
						10441,
						10442,
						10443,
						10444
					]
				}
			]
		},
		{
			"id": 10424,
			"name": "ProductType",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Type can be added to Products for filtering and reporting purposes."
					}
				]
			},
			"children": [
				{
					"id": 10425,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10426,
							"name": "new ProductType",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Type can be added to Products for filtering and reporting purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10424,
								"name": "ProductType",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10432,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10433,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10434,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10431,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10427,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value that the Product Type represents."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10428,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10429,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10430,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10425
					]
				},
				{
					"title": "Properties",
					"children": [
						10432,
						10433,
						10434,
						10431,
						10427,
						10428
					]
				},
				{
					"title": "Methods",
					"children": [
						10429
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10478,
			"name": "ProductVariantInventoryItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Variant Inventory Item links variants with inventory items and denotes the required quantity of the variant."
					}
				]
			},
			"children": [
				{
					"id": 10479,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10480,
							"name": "new ProductVariantInventoryItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Variant Inventory Item links variants with inventory items and denotes the required quantity of the variant."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10478,
								"name": "ProductVariantInventoryItem",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10488,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant inventory item's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10489,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10490,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10487,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10481,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the inventory item"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10482,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10483,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product variant."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10445,
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10484,
					"name": "required_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of an inventory item required for the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": 1
				},
				{
					"id": 10485,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10486,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10479
					]
				},
				{
					"title": "Properties",
					"children": [
						10488,
						10489,
						10490,
						10487,
						10481,
						10482,
						10483,
						10484
					]
				},
				{
					"title": "Methods",
					"children": [
						10485
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10491,
			"name": "ProductVariantMoneyAmount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 10492,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10493,
							"name": "new ProductVariantMoneyAmount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 10491,
								"name": "ProductVariantMoneyAmount",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10499,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10500,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10501,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10498,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10494,
					"name": "money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10495,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10496,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10497,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10492
					]
				},
				{
					"title": "Properties",
					"children": [
						10499,
						10500,
						10501,
						10498,
						10494,
						10495
					]
				},
				{
					"title": "Methods",
					"children": [
						10496
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10445,
			"name": "ProductVariant",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Product Variant represents a Product with a specific set of Product Option configurations. The maximum number of Product Variants that a Product can have is given by the number of available Product Option combinations. A product must at least have one product variant."
					}
				]
			},
			"children": [
				{
					"id": 10446,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10447,
							"name": "new ProductVariant",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Product Variant represents a Product with a specific set of Product Option configurations. The maximum number of Product Variants that a Product can have is given by the number of available Product Option combinations. A product must at least have one product variant."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10445,
								"name": "ProductVariant",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10475,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10476,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10477,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10474,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10448,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A title that can be displayed for easy identification of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10449,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product that the product variant belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10450,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product that the product variant belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10296,
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10451,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the prices of the Product Variant, each represented as a Money Amount. Each Money Amount represents a price in a given currency or a specific Region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9961,
							"name": "MoneyAmount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10452,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique stock keeping unit used to identify the Product Variant. This will usually be a unique identifer for the item that is to be shipped, and can be referenced across multiple systems."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10453,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic field for a GTIN number that can be used to identify the Product Variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10454,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An EAN barcode number that can be used to identify the Product Variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10455,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A UPC barcode number that can be used to identify the Product Variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10456,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of this variant"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"defaultValue": 0
				},
				{
					"id": 10457,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current quantity of the item that is stocked."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10458,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product Variant should be purchasable when `inventory_quantity` is 0."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10459,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should manage inventory for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 10460,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product Variant. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10461,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Product Variant was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10462,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Product Variant. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10463,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Product Variant is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10464,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10465,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10466,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10467,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10468,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product options that this product variant defines values for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10388,
							"name": "ProductOptionValue",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10469,
					"name": "inventory_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details inventory items of the product variant."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10478,
							"name": "ProductVariantInventoryItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10470,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10471,
					"name": "purchasable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Only used with the inventory modules.\nA boolean value indicating whether the Product Variant is purchasable.\nA variant is purchasable if:\n  - inventory is not managed\n  - it has no inventory items\n  - it is in stock\n  - it is backorderable.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10472,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10473,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10446
					]
				},
				{
					"title": "Properties",
					"children": [
						10475,
						10476,
						10477,
						10474,
						10448,
						10449,
						10450,
						10451,
						10452,
						10453,
						10454,
						10455,
						10456,
						10457,
						10458,
						10459,
						10460,
						10461,
						10462,
						10463,
						10464,
						10465,
						10466,
						10467,
						10468,
						10469,
						10470,
						10471
					]
				},
				{
					"title": "Methods",
					"children": [
						10472
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10291,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a product."
					}
				]
			},
			"children": [
				{
					"id": 10292,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product is a draft. It's not viewable by customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				},
				{
					"id": 10293,
					"name": "PROPOSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product is proposed, but not yet published."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "proposed"
					}
				},
				{
					"id": 10294,
					"name": "PUBLISHED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product is published."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "published"
					}
				},
				{
					"id": 10295,
					"name": "REJECTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product is rejected. It's not viewable by customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "rejected"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10292,
						10293,
						10294,
						10295
					]
				}
			]
		},
		{
			"id": 10296,
			"name": "Product",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product is a saleable item that holds general information such as name or description. It must include at least one Product Variant, where each product variant defines different options to purchase the product with (for example, different sizes or colors). The prices and inventory of the product are defined on the variant level."
					}
				]
			},
			"children": [
				{
					"id": 10297,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10298,
							"name": "new Product",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A product is a saleable item that holds general information such as name or description. It must include at least one Product Variant, where each product variant defines different options to purchase the product with (for example, different sizes or colors). The prices and inventory of the product are defined on the variant level."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10296,
								"name": "Product",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10337,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10338,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10339,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10336,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10299,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A title that can be displayed for easy identification of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10300,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional subtitle that can be used to further specify the Product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10301,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A short description of the Product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10302,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the Product (e.g. for slug structure)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10303,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product represents a Gift Card. Products that represent Gift Cards will automatically generate a redeemable Gift Card code once they are purchased."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10304,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10291,
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "draft"
				},
				{
					"id": 10305,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product's images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9856,
							"name": "Image",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10306,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A URL to an image file that can be used to identify the Product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10307,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the Product Options that are defined for the Product. The product's variants will have a unique combination of values of the product's options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10374,
							"name": "ProductOption",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10308,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the Product Variants that belong to the Product. Each will have a unique combination of values of the product's options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10445,
							"name": "ProductVariant",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10309,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product categories that this product belongs to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10340,
							"name": "ProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10310,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile that the product belongs to. The shipping profile has a set of defined shipping options that can be used to fulfill the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10311,
					"name": "profile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping profile that the product belongs to. The shipping profile has a set of defined shipping options that can be used to fulfill the product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10745,
						"name": "ShippingProfile",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10312,
					"name": "profiles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available if the relation `profiles` is expanded."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10745,
							"name": "ShippingProfile",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10313,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10314,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10315,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10316,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product Variant. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10317,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product Variant. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10318,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Product Variant was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10319,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Product Variant. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10320,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Product Variant is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10321,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection that the product belongs to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10322,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product collection that the product belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10361,
						"name": "ProductCollection",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10323,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type that the product belongs to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10324,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product type that the product belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10424,
						"name": "ProductType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10325,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product tags used in this product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10403,
							"name": "ProductTag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10326,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product can be discounted. Discounts will not apply to Line Items of this Product when this flag is set to `false`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 10327,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The external ID of the product"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10328,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10329,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the sales channels this product is available in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10631,
							"name": "SalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10330,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10331,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10332,
					"name": "beforeUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10333,
							"name": "beforeUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10334,
					"name": "afterLoad",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10335,
							"name": "afterLoad",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10297
					]
				},
				{
					"title": "Properties",
					"children": [
						10337,
						10338,
						10339,
						10336,
						10299,
						10300,
						10301,
						10302,
						10303,
						10304,
						10305,
						10306,
						10307,
						10308,
						10309,
						10310,
						10311,
						10312,
						10313,
						10314,
						10315,
						10316,
						10317,
						10318,
						10319,
						10320,
						10321,
						10322,
						10323,
						10324,
						10325,
						10326,
						10327,
						10328,
						10329
					]
				},
				{
					"title": "Methods",
					"children": [
						10330,
						10332,
						10334
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10514,
			"name": "PublishableApiKeySalesChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between the Publishable API keys and Sales Channels"
					}
				]
			},
			"children": [
				{
					"id": 10515,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10516,
							"name": "new PublishableApiKeySalesChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between the Publishable API keys and Sales Channels"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10514,
								"name": "PublishableApiKeySalesChannel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10522,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10523,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10517,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The relation's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10518,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10519,
					"name": "publishable_key_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The publishable API key's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10520,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10521,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10515
					]
				},
				{
					"title": "Properties",
					"children": [
						10522,
						10523,
						10517,
						10518,
						10519
					]
				},
				{
					"title": "Methods",
					"children": [
						10520
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10502,
			"name": "PublishableApiKey",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Publishable API key defines scopes that resources are available in. Then, it can be used in request to infer the resources without having to directly pass them. For example, a publishable API key can be associated with one or more sales channels. Then, when the publishable API key is passed in the header of a request, it is inferred what sales channel is being used without having to pass the sales channel as a query or body parameter of the request. Publishable API keys can only be used with sales channels, at the moment."
					}
				]
			},
			"children": [
				{
					"id": 10503,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10504,
							"name": "new PublishableApiKey",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Publishable API key defines scopes that resources are available in. Then, it can be used in request to infer the resources without having to directly pass them. For example, a publishable API key can be associated with one or more sales channels. Then, when the publishable API key is passed in the header of a request, it is inferred what sales channel is being used without having to pass the sales channel as a query or body parameter of the request. Publishable API keys can only be used with sales channels, at the moment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10502,
								"name": "PublishableApiKey",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10511,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The key's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10512,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10513,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10505,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user that created the key."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10506,
					"name": "revoked_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user that revoked the key."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10507,
					"name": "revoked_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the key was revoked."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10508,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The key's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10509,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10510,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10503
					]
				},
				{
					"title": "Properties",
					"children": [
						10511,
						10512,
						10513,
						10505,
						10506,
						10507,
						10508
					]
				},
				{
					"title": "Methods",
					"children": [
						10509
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10524,
			"name": "RefundReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reason of the refund."
					}
				]
			},
			"children": [
				{
					"id": 10525,
					"name": "DISCOUNT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund is applied as a discount."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "discount"
					}
				},
				{
					"id": 10526,
					"name": "RETURN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund is applied because of a created return."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "return"
					}
				},
				{
					"id": 10527,
					"name": "SWAP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund is applied because of a created swap."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "swap"
					}
				},
				{
					"id": 10528,
					"name": "CLAIM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund is applied because of a created claim."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "claim"
					}
				},
				{
					"id": 10529,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund is created for a custom reason."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10525,
						10526,
						10527,
						10528,
						10529
					]
				}
			]
		},
		{
			"id": 10530,
			"name": "Refund",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A refund represents an amount of money transfered back to the customer for a given reason. Refunds may occur in relation to Returns, Swaps and Claims, but can also be initiated by an admin for an order."
					}
				]
			},
			"children": [
				{
					"id": 10531,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10532,
							"name": "new Refund",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A refund represents an amount of money transfered back to the customer for a given reason. Refunds may occur in relation to Returns, Swaps and Claims, but can also be initiated by an admin for an order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10530,
								"name": "Refund",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10544,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refund's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10545,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10546,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10533,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order this refund was created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10534,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's ID, if available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10535,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order this refund was created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10536,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payment associated with the refund."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10190,
						"name": "Payment",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10537,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that has be refunded to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10538,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note explaining why the amount was refunded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10539,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason given for the Refund, will automatically be set when processed as part of a Swap, Claim or Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10540,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10541,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the refund in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10542,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10543,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10531
					]
				},
				{
					"title": "Properties",
					"children": [
						10544,
						10545,
						10546,
						10533,
						10534,
						10535,
						10536,
						10537,
						10538,
						10539,
						10540,
						10541
					]
				},
				{
					"title": "Methods",
					"children": [
						10542
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10547,
			"name": "Region",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A region holds settings specific to a geographical location, including the currency, tax rates, and fulfillment and payment providers. A Region can consist of multiple countries to accomodate common shopping settings across countries."
					}
				]
			},
			"children": [
				{
					"id": 10548,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10549,
							"name": "new Region",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A region holds settings specific to a geographical location, including the currency, tax rates, and fulfillment and payment providers. A Region can consist of multiple countries to accomodate common shopping settings across countries."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10547,
								"name": "Region",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10568,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10569,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10570,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10567,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10550,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the region as displayed to the customer. If the Region only has one country it is recommended to write the country name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10551,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The three character currency code used in the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10552,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the currency used in the region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10553,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate that should be charged on purchases in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10554,
					"name": "tax_rates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the tax rates used in the region, aside from the default rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10848,
									"name": "TaxRate",
									"package": "@medusajs/medusa"
								}
							}
						]
					}
				},
				{
					"id": 10555,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code used on purchases in the Region. This may be used by other systems for accounting purposes."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10556,
					"name": "gift_cards_taxable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the gift cards are taxable or not in this region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 10557,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes should be automated in this region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 10558,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the countries included in this region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9555,
							"name": "Country",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10559,
					"name": "tax_provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used in this region"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10560,
					"name": "tax_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the tax provider used in the region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10843,
						"name": "TaxProvider",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10561,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the payment providers that can be used to process payments in the region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10244,
							"name": "PaymentProvider",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10562,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillment providers that can be used to fulfill items of orders and similar resources in the region."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9802,
							"name": "FulfillmentProvider",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10563,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10564,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the prices for the region include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10565,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10566,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10548
					]
				},
				{
					"title": "Properties",
					"children": [
						10568,
						10569,
						10570,
						10567,
						10550,
						10551,
						10552,
						10553,
						10554,
						10555,
						10556,
						10557,
						10558,
						10559,
						10560,
						10561,
						10562,
						10563,
						10564
					]
				},
				{
					"title": "Methods",
					"children": [
						10565
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10600,
			"name": "ReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
					}
				]
			},
			"children": [
				{
					"id": 10601,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10602,
							"name": "new ReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10600,
								"name": "ReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10603,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return that the Return Item belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10604,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that the Return Item references."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10605,
					"name": "return_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of the Return that the Return Item belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10576,
						"name": "Return",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10606,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the line item in the original order to be returned."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9882,
						"name": "LineItem",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10607,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item to be returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10608,
					"name": "is_requested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Return Item was requested initially or received unexpectedly in the warehouse."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				},
				{
					"id": 10609,
					"name": "requested_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that was originally requested to be returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10610,
					"name": "received_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that was received in the warehouse."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10611,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reason for returning the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10612,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reason for returning the item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10615,
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10613,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with additional details about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10614,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10601
					]
				},
				{
					"title": "Properties",
					"children": [
						10603,
						10604,
						10605,
						10606,
						10607,
						10608,
						10609,
						10610,
						10611,
						10612,
						10613,
						10614
					]
				}
			]
		},
		{
			"id": 10615,
			"name": "ReturnReason",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Return Reason is a value defined by an admin. It can be used on Return Items in order to indicate why a Line Item was returned."
					}
				]
			},
			"children": [
				{
					"id": 10616,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10617,
							"name": "new ReturnReason",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Return Reason is a value defined by an admin. It can be used on Return Items in order to indicate why a Line Item was returned."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10615,
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10628,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return reason's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10629,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10630,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10627,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10618,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to identify the reason by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10619,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A text that can be displayed to the Customer as a reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10620,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10621,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent reason."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10622,
					"name": "parent_return_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the parent reason."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10615,
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 10623,
					"name": "return_reason_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the child reasons."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10615,
							"name": "ReturnReason",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10624,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10625,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10626,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10616
					]
				},
				{
					"title": "Properties",
					"children": [
						10628,
						10629,
						10630,
						10627,
						10618,
						10619,
						10620,
						10621,
						10622,
						10623,
						10624
					]
				},
				{
					"title": "Methods",
					"children": [
						10625
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10571,
			"name": "ReturnStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's status."
					}
				]
			},
			"children": [
				{
					"id": 10572,
					"name": "REQUESTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return is requested."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requested"
					}
				},
				{
					"id": 10573,
					"name": "RECEIVED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return is received."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "received"
					}
				},
				{
					"id": 10574,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return is awaiting action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				},
				{
					"id": 10575,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10572,
						10573,
						10574,
						10575
					]
				}
			]
		},
		{
			"id": 10576,
			"name": "Return",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Return holds information about Line Items that a Customer wishes to send back, along with how the items will be returned. Returns can also be used as part of a Swap or a Claim."
					}
				]
			},
			"children": [
				{
					"id": 10577,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10578,
							"name": "new Return",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Return holds information about Line Items that a Customer wishes to send back, along with how the items will be returned. Returns can also be used as part of a Swap or a Claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10576,
								"name": "Return",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10597,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10598,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10599,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10579,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Status of the Return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10571,
						"name": "ReturnStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "requested"
				},
				{
					"id": 10580,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the items that the customer is returning."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10600,
							"name": "ReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10581,
					"name": "swap_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the swap that the return may belong to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10582,
					"name": "swap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swap that the return may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10814,
						"name": "Swap",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10583,
					"name": "claim_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the claim that the return may belong to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10584,
					"name": "claim_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim that the return may belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9518,
						"name": "ClaimOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10585,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the return was created for."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10586,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the return was created for."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10587,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the Shipping Method that will be used to send the Return back. Can be null if the Customer will handle the return shipment themselves."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10661,
						"name": "ShippingMethod",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10588,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location the return will be added back."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10589,
					"name": "shipping_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data about the return shipment as provided by the Fulfilment Provider that handles the return shipment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10590,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount that should be refunded as a result of the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10591,
					"name": "received_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the return was received."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10592,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When set to true, no notification will be sent related to this return."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 10593,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10594,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the return in case of failure."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10595,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10596,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10577
					]
				},
				{
					"title": "Properties",
					"children": [
						10597,
						10598,
						10599,
						10579,
						10580,
						10581,
						10582,
						10583,
						10584,
						10585,
						10586,
						10587,
						10588,
						10589,
						10590,
						10591,
						10592,
						10593,
						10594
					]
				},
				{
					"title": "Methods",
					"children": [
						10595
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10649,
			"name": "SalesChannelLocation",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the association between a sales channel and a stock locations."
					}
				]
			},
			"children": [
				{
					"id": 10650,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10651,
							"name": "new SalesChannelLocation",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the association between a sales channel and a stock locations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10649,
								"name": "SalesChannelLocation",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10658,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Sales Channel Stock Location's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10659,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10660,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10657,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10652,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10653,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Location Stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10654,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the sales channel the location is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10631,
						"name": "SalesChannel",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10655,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10656,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10650
					]
				},
				{
					"title": "Properties",
					"children": [
						10658,
						10659,
						10660,
						10657,
						10652,
						10653,
						10654
					]
				},
				{
					"title": "Methods",
					"children": [
						10655
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10631,
			"name": "SalesChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Sales Channel is a method a business offers its products for purchase for the customers. For example, a Webshop can be a sales channel, and a mobile app can be another."
					}
				]
			},
			"children": [
				{
					"id": 10632,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10633,
							"name": "new SalesChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Sales Channel is a method a business offers its products for purchase for the customers. For example, a Webshop can be a sales channel, and a mobile app can be another."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10631,
								"name": "SalesChannel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10646,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sales channel's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10647,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10648,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10645,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10634,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10635,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10636,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify if the sales channel is enabled or disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10637,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10638,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10639,
					"name": "carts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated carts."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9410,
							"name": "Cart",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10640,
					"name": "orders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated orders."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "medusa_v2",
										"tag": "@featureFlag"
									}
								]
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10061,
							"name": "Order",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10641,
					"name": "publishableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated publishable API keys."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10502,
							"name": "PublishableApiKey",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10642,
					"name": "locations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the stock locations related to the sales channel."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10649,
							"name": "SalesChannelLocation",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10643,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10644,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10632
					]
				},
				{
					"title": "Properties",
					"children": [
						10646,
						10647,
						10648,
						10645,
						10634,
						10635,
						10636,
						10637,
						10638,
						10639,
						10640,
						10641,
						10642
					]
				},
				{
					"title": "Methods",
					"children": [
						10643
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10686,
			"name": "ShippingMethodTaxLine",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method Tax Line represents the taxes applied on a shipping method in a cart."
					}
				]
			},
			"children": [
				{
					"id": 10687,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10688,
							"name": "new ShippingMethodTaxLine",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method Tax Line represents the taxes applied on a shipping method in a cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10686,
								"name": "ShippingMethodTaxLine",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "TaxLine.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.constructor"
					}
				},
				{
					"id": 10697,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item tax line's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.id"
					}
				},
				{
					"id": 10698,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.created_at"
					}
				},
				{
					"id": 10699,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.updated_at"
					}
				},
				{
					"id": 10689,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10690,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the associated shipping method."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10661,
						"name": "ShippingMethod",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10691,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10692,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10693,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge tax by"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.rate"
					}
				},
				{
					"id": 10694,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A human friendly name for the tax"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.name"
					}
				},
				{
					"id": 10695,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A code to identify the tax type by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.code"
					}
				},
				{
					"id": 10696,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TaxLine.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10687
					]
				},
				{
					"title": "Properties",
					"children": [
						10697,
						10698,
						10699,
						10689,
						10690,
						10693,
						10694,
						10695,
						10696
					]
				},
				{
					"title": "Methods",
					"children": [
						10691
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
						"qualifiedName": "TaxLine"
					},
					"name": "TaxLine",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10661,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 10662,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10663,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10661,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10664,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10665,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option that the Shipping Method is built from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10666,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the shipping method is used in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10667,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the shipping method is used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10668,
					"name": "claim_order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the claim that the shipping method is used in."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10669,
					"name": "claim_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the claim that the shipping method is used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9518,
						"name": "ClaimOrder",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10670,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart that the shipping method is used in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10671,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart that the shipping method is used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10672,
					"name": "swap_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the swap that the shipping method is used in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10673,
					"name": "swap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the swap that the shipping method is used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10814,
						"name": "Swap",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10674,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the return that the shipping method is used in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10675,
					"name": "return_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the return that the shipping method is used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10576,
						"name": "Return",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10676,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping option the method was created from."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10703,
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10677,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the tax lines applied on the shipping method."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10686,
							"name": "ShippingMethodTaxLine",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10678,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Method. The currency of the price is defined by the Region that the Order that the Shipping Method belongs to is a part of."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10679,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional data that the Fulfillment Provider needs to fulfill the shipment. This is used in combination with the Shipping Options data, and may contain information such as a drop point id."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10680,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the shipping method price include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10681,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the shipping"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10682,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the shipping"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10683,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of tax"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10684,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10685,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10662
					]
				},
				{
					"title": "Properties",
					"children": [
						10664,
						10665,
						10666,
						10667,
						10668,
						10669,
						10670,
						10671,
						10672,
						10673,
						10674,
						10675,
						10676,
						10677,
						10678,
						10679,
						10680,
						10681,
						10682,
						10683
					]
				},
				{
					"title": "Methods",
					"children": [
						10684
					]
				}
			]
		},
		{
			"id": 10727,
			"name": "RequirementType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of shipping option requirement."
					}
				]
			},
			"children": [
				{
					"id": 10728,
					"name": "MIN_SUBTOTAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option can only be applied if the subtotal is greater than the requirement's amount."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "min_subtotal"
					}
				},
				{
					"id": 10729,
					"name": "MAX_SUBTOTAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option can only be applied if the subtotal is less than the requirement's amont."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "max_subtotal"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10728,
						10729
					]
				}
			]
		},
		{
			"id": 10730,
			"name": "ShippingOptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shipping option requirement defines conditions that a Cart must satisfy for the Shipping Option to be available for usage in the Cart."
					}
				]
			},
			"children": [
				{
					"id": 10731,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10732,
							"name": "new ShippingOptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A shipping option requirement defines conditions that a Cart must satisfy for the Shipping Option to be available for usage in the Cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10730,
								"name": "ShippingOptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10733,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option requirement's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10734,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option that the requirements belong to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10735,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping option that the requirements belong to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10703,
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10736,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement, this defines how the value will be compared to the Cart's total. `min_subtotal` requirements define the minimum subtotal that is needed for the Shipping Option to be available, while the `max_subtotal` defines the maximum subtotal that the Cart can have for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10727,
						"name": "RequirementType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10737,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare the Cart subtotal to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10738,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10739,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10740,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10731
					]
				},
				{
					"title": "Properties",
					"children": [
						10733,
						10734,
						10735,
						10736,
						10737,
						10738
					]
				},
				{
					"title": "Methods",
					"children": [
						10739
					]
				}
			]
		},
		{
			"id": 10700,
			"name": "ShippingOptionPriceType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of the shipping option price."
					}
				]
			},
			"children": [
				{
					"id": 10701,
					"name": "FLAT_RATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option's price is a flat rate."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "flat_rate"
					}
				},
				{
					"id": 10702,
					"name": "CALCULATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option's price is calculated. In this case, the "
							},
							{
								"kind": "code",
								"text": "`amount`"
							},
							{
								"kind": "text",
								"text": " field is typically "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "calculated"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10701,
						10702
					]
				}
			]
		},
		{
			"id": 10703,
			"name": "ShippingOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Option represents a way in which an Order or Return can be shipped. Shipping Options have an associated Fulfillment Provider that will be used when the fulfillment of an Order is initiated. Shipping Options themselves cannot be added to Carts, but serve as a template for Shipping Methods. This distinction makes it possible to customize individual Shipping Methods with additional information."
					}
				]
			},
			"children": [
				{
					"id": 10704,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10705,
							"name": "new ShippingOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Option represents a way in which an Order or Return can be shipped. Shipping Options have an associated Fulfillment Provider that will be used when the fulfillment of an Order is initiated. Shipping Options themselves cannot be added to Carts, but serve as a template for Shipping Methods. This distinction makes it possible to customize individual Shipping Methods with additional information."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10703,
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10724,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10725,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10726,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10723,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10706,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name given to the Shipping Option - this may be displayed to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10707,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region this shipping option can be used in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10708,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region this shipping option can be used in."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10709,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Profile that the shipping option belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10710,
					"name": "profile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping profile that the shipping option belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10745,
						"name": "ShippingProfile",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10711,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment provider that will be used to later to process the shipping method created from this shipping option and its fulfillments."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10712,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillment provider that will be used to later to process the shipping method created from this shipping option and its fulfillments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9802,
						"name": "FulfillmentProvider",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10713,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of pricing calculation that is used when creatin Shipping Methods from the Shipping Option. Can be `flat_rate` for fixed prices or `calculated` if the Fulfillment Provider can provide price calulations."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10700,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10714,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for shipping when the Shipping Option price type is `flat_rate`."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10715,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Shipping Option can be used for Return shipments."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10716,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Shipping Option usage is restricted to admin users."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10717,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the requirements that must be satisfied for the Shipping Option to be available for usage in a Cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10730,
							"name": "ShippingOptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10718,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data needed for the Fulfillment Provider to identify the Shipping Option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10719,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10720,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the shipping option price include tax"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10721,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10722,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10704
					]
				},
				{
					"title": "Properties",
					"children": [
						10724,
						10725,
						10726,
						10723,
						10706,
						10707,
						10708,
						10709,
						10710,
						10711,
						10712,
						10713,
						10714,
						10715,
						10716,
						10717,
						10718,
						10719,
						10720
					]
				},
				{
					"title": "Methods",
					"children": [
						10721
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10741,
			"name": "ShippingProfileType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile's type."
					}
				]
			},
			"children": [
				{
					"id": 10742,
					"name": "DEFAULT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default profile used to ship item."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "default"
					}
				},
				{
					"id": 10743,
					"name": "GIFT_CARD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The profile used to ship gift cards."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "gift_card"
					}
				},
				{
					"id": 10744,
					"name": "CUSTOM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The profile used to ship custom items."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "custom"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10742,
						10743,
						10744
					]
				}
			]
		},
		{
			"id": 10745,
			"name": "ShippingProfile",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Profile has a set of defined Shipping Options that can be used to fulfill a given set of Products. For example, gift cards are shipped differently than physical products, so a shipping profile with the type `gift_card` groups together the shipping options that can only be used for gift cards."
					}
				]
			},
			"children": [
				{
					"id": 10746,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10747,
							"name": "new ShippingProfile",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Profile has a set of defined Shipping Options that can be used to fulfill a given set of Products. For example, gift cards are shipped differently than physical products, so a shipping profile with the type `gift_card` groups together the shipping options that can only be used for gift cards."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10745,
								"name": "ShippingProfile",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10756,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping profile's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10757,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10758,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10755,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10748,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name given to the Shipping profile - this may be displayed to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10749,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile, may be `default`, `gift_card` or `custom`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10741,
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10750,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the products that the Shipping Profile defines Shipping Options for. Available if the relation `products` is expanded."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10751,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping options that can be used to create shipping methods for the Products in the Shipping Profile."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10703,
							"name": "ShippingOption",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10752,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10753,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10754,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10746
					]
				},
				{
					"title": "Properties",
					"children": [
						10756,
						10757,
						10758,
						10755,
						10748,
						10749,
						10750,
						10751,
						10752
					]
				},
				{
					"title": "Methods",
					"children": [
						10753
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10759,
			"name": "ShippingTaxRate",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This represents the tax rates applied on a shipping option."
					}
				]
			},
			"children": [
				{
					"id": 10760,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10761,
							"name": "new ShippingTaxRate",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents the tax rates applied on a shipping option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10759,
								"name": "ShippingTaxRate",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10762,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10763,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10764,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping option."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10703,
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10765,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the associated tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10848,
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10766,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10767,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10768,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10760
					]
				},
				{
					"title": "Properties",
					"children": [
						10762,
						10763,
						10764,
						10765,
						10766,
						10767,
						10768
					]
				}
			]
		},
		{
			"id": 10769,
			"name": "StagedJob",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A staged job resource"
					}
				]
			},
			"children": [
				{
					"id": 10770,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10771,
							"name": "new StagedJob",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A staged job resource"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10769,
								"name": "StagedJob",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10772,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The staged job's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10773,
					"name": "event_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the event"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10774,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data necessary for the job"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10775,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10776,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10777,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10770
					]
				},
				{
					"title": "Properties",
					"children": [
						10772,
						10773,
						10774,
						10775
					]
				},
				{
					"title": "Methods",
					"children": [
						10776
					]
				}
			]
		},
		{
			"id": 10778,
			"name": "Store",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A store holds the main settings of the commerce shop. By default, only one store is created and used within the Medusa backend. It holds settings related to the name of the store, available currencies, and more."
					}
				]
			},
			"children": [
				{
					"id": 10779,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10780,
							"name": "new Store",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A store holds the main settings of the commerce shop. By default, only one store is created and used within the Medusa backend. It holds settings related to the name of the store, available currencies, and more."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10778,
								"name": "Store",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10794,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The store's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10795,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10796,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10781,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Store - this may be displayed to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "Medusa Store"
				},
				{
					"id": 10782,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The three character currency code that is the default of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10783,
					"name": "default_currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the store's default currency."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9566,
						"name": "Currency",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "usd"
				},
				{
					"id": 10784,
					"name": "currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the enabled currencies in the store."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9566,
							"name": "Currency",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10785,
					"name": "swap_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template to generate Swap links from. Use {{cart_id}} to include the Swap's `cart_id` in the link."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10786,
					"name": "payment_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template to generate Payment links from. Use {{cart_id}} to include the payment's `cart_id` in the link."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10787,
					"name": "invite_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template to generate Invite links from"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10788,
					"name": "default_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The location ID the store is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10789,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10790,
					"name": "default_sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the store's default sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10791,
					"name": "default_sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the store's default sales channel."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10631,
						"name": "SalesChannel",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10792,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10793,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10779
					]
				},
				{
					"title": "Properties",
					"children": [
						10794,
						10795,
						10796,
						10781,
						10782,
						10783,
						10784,
						10785,
						10786,
						10787,
						10788,
						10789,
						10790,
						10791
					]
				},
				{
					"title": "Methods",
					"children": [
						10792
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10797,
			"name": "SwapFulfillmentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's fulfillment status."
					}
				]
			},
			"children": [
				{
					"id": 10798,
					"name": "NOT_FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's items aren't fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_fulfilled"
					}
				},
				{
					"id": 10799,
					"name": "FULFILLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's items are fulfilled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "fulfilled"
					}
				},
				{
					"id": 10800,
					"name": "SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's items are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "shipped"
					}
				},
				{
					"id": 10801,
					"name": "PARTIALLY_SHIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the swap's items are shipped."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_shipped"
					}
				},
				{
					"id": 10802,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's fulfillments are canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 10803,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's fulfillments require an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10798,
						10799,
						10800,
						10801,
						10802,
						10803
					]
				}
			]
		},
		{
			"id": 10804,
			"name": "SwapPaymentStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's payment status."
					}
				]
			},
			"children": [
				{
					"id": 10805,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's additional payment isn't paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 10806,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap is additional awaiting payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 10807,
					"name": "CAPTURED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's additional payment is captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "captured"
					}
				},
				{
					"id": 10808,
					"name": "CONFIRMED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's additional payment is confirmed."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "confirmed"
					}
				},
				{
					"id": 10809,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's additional payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 10810,
					"name": "DIFFERENCE_REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The negative difference amount between the returned item(s) and the new one(s) has been refuneded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "difference_refunded"
					}
				},
				{
					"id": 10811,
					"name": "PARTIALLY_REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the negative difference amount between the returned item(s) and the new one(s) has been refuneded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_refunded"
					}
				},
				{
					"id": 10812,
					"name": "REFUNDED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount in the associated order has been refunded."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "refunded"
					}
				},
				{
					"id": 10813,
					"name": "REQUIRES_ACTION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's payment requires an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_action"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10805,
						10806,
						10807,
						10808,
						10809,
						10810,
						10811,
						10812,
						10813
					]
				}
			]
		},
		{
			"id": 10814,
			"name": "Swap",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A swap can be created when a Customer wishes to exchange Products that they have purchased with different Products. It consists of a Return of previously purchased Products and a Fulfillment of new Products. It also includes information on any additional payment or refund required based on the difference between the exchanged products."
					}
				]
			},
			"children": [
				{
					"id": 10815,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10816,
							"name": "new Swap",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A swap can be created when a Customer wishes to exchange Products that they have purchased with different Products. It consists of a Return of previously purchased Products and a Fulfillment of new Products. It also includes information on any additional payment or refund required based on the difference between the exchanged products."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10814,
								"name": "Swap",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10840,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The swap's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10841,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10842,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10839,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10817,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Fulfillment of the Swap."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10797,
						"name": "SwapFulfillmentStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10818,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Payment of the Swap. The payment may either refer to the refund of an amount or the authorization of a new amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10804,
						"name": "SwapPaymentStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10819,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order that the swap belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10820,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the order that the swap belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10061,
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10821,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the new products to send to the customer, represented as line items."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9882,
							"name": "LineItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10822,
					"name": "return_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the return that belongs to the swap, which holds the details on the items being returned."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10576,
						"name": "Return",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10823,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillments that are used to send the new items to the customer."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9768,
							"name": "Fulfillment",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10824,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the additional payment authorized by the customer when `difference_due` is positive."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10190,
						"name": "Payment",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10825,
					"name": "difference_due",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The difference amount between the order’s original total and the new total imposed by the swap. If its value is negative, a refund must be issues to the customer. If it's positive, additional payment must be authorized by the customer. Otherwise, no payment processing is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10826,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to send the new Line Items to - in most cases this will be the same as the shipping address on the Order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10827,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping address that the new items should be sent to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9335,
						"name": "Address",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10828,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping methods used to fulfill the additional items purchased."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10661,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10829,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart that the customer uses to complete the swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10830,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the cart that the customer uses to complete the swap."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9410,
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10831,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Swap was confirmed by the Customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10832,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the Swap was canceled."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10833,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true, no notification will be sent related to this swap"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10834,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, swaps can be completed with items out of stock"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": false
				},
				{
					"id": 10835,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of the swap in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10836,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10837,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10838,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10815
					]
				},
				{
					"title": "Properties",
					"children": [
						10840,
						10841,
						10842,
						10839,
						10817,
						10818,
						10819,
						10820,
						10821,
						10822,
						10823,
						10824,
						10825,
						10826,
						10827,
						10828,
						10829,
						10830,
						10831,
						10832,
						10833,
						10834,
						10835,
						10836
					]
				},
				{
					"title": "Methods",
					"children": [
						10837
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10843,
			"name": "TaxProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A tax provider represents a tax service installed in the Medusa backend, either through a plugin or backend customizations. It holds the tax service's installation status."
					}
				]
			},
			"children": [
				{
					"id": 10844,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10845,
							"name": "new TaxProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A tax provider represents a tax service installed in the Medusa backend, either through a plugin or backend customizations. It holds the tax service's installation status."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10843,
								"name": "TaxProvider",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 10846,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider as given by the tax service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10847,
					"name": "is_installed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax service is installed in the current version. If a tax service is no longer installed, the `is_installed` attribute is set to `false`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10844
					]
				},
				{
					"title": "Properties",
					"children": [
						10846,
						10847
					]
				}
			]
		},
		{
			"id": 10848,
			"name": "TaxRate",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Tax Rate can be used to define a custom rate to charge on specified products, product types, and shipping options within a given region."
					}
				]
			},
			"children": [
				{
					"id": 10849,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10850,
							"name": "new TaxRate",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Tax Rate can be used to define a custom rate to charge on specified products, product types, and shipping options within a given region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10848,
								"name": "TaxRate",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "BaseEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.constructor"
					}
				},
				{
					"id": 10865,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.id"
					}
				},
				{
					"id": 10866,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.created_at"
					}
				},
				{
					"id": 10867,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "BaseEntity.updated_at"
					}
				},
				{
					"id": 10851,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10852,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A code to identify the tax type by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10853,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A human friendly name for the tax"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10854,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region that the rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10855,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the region that the rate belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 10547,
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10856,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10857,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the products that belong to this tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10296,
							"name": "Product",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10858,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the product types that belong to this tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10424,
							"name": "ProductType",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10859,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the shipping options that belong to this tax rate."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10703,
							"name": "ShippingOption",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 10860,
					"name": "product_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of products"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10861,
					"name": "product_type_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of product types"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10862,
					"name": "shipping_option_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of shipping options"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10863,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10864,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10849
					]
				},
				{
					"title": "Properties",
					"children": [
						10865,
						10866,
						10867,
						10851,
						10852,
						10853,
						10854,
						10855,
						10856,
						10857,
						10858,
						10859,
						10860,
						10861,
						10862
					]
				},
				{
					"title": "Methods",
					"children": [
						10863
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
						"qualifiedName": "BaseEntity"
					},
					"name": "BaseEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10868,
			"name": "TrackingLink",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A tracking link holds information about tracking numbers for a Fulfillment. Tracking Links can optionally contain a URL that can be visited to see the status of the shipment. Typically, the tracking link is provided from the third-party service integrated through the used fulfillment provider."
					}
				]
			},
			"children": [
				{
					"id": 10869,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10870,
							"name": "new TrackingLink",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A tracking link holds information about tracking numbers for a Fulfillment. Tracking Links can optionally contain a URL that can be visited to see the status of the shipment. Typically, the tracking link is provided from the third-party service integrated through the used fulfillment provider."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10868,
								"name": "TrackingLink",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10880,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking link's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10881,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10882,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10879,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10871,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL at which the status of the shipment can be tracked."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10872,
					"name": "tracking_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking number given by the shipping carrier."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10873,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment that the tracking link belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10874,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the fulfillment that the tracking link belongs to."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9768,
						"name": "Fulfillment",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 10875,
					"name": "idempotency_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Randomly generated key used to continue the completion of a process in case of failure."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10876,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10877,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10878,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10869
					]
				},
				{
					"title": "Properties",
					"children": [
						10880,
						10881,
						10882,
						10879,
						10871,
						10872,
						10873,
						10874,
						10875,
						10876
					]
				},
				{
					"title": "Methods",
					"children": [
						10877
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 10883,
			"name": "UserRoles",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's role. These roles don't change the user's capabilities or provide access-control features."
					}
				]
			},
			"children": [
				{
					"id": 10884,
					"name": "ADMIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user is an admin."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "admin"
					}
				},
				{
					"id": 10885,
					"name": "MEMBER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user is a team member."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "member"
					}
				},
				{
					"id": 10886,
					"name": "DEVELOPER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user is a developer."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "developer"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						10884,
						10885,
						10886
					]
				}
			]
		},
		{
			"id": 10887,
			"name": "User",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A User is an administrator who can manage store settings and data."
					}
				]
			},
			"children": [
				{
					"id": 10888,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 10889,
							"name": "new User",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A User is an administrator who can manage store settings and data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 10887,
								"name": "User",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SoftDeletableEntity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.constructor"
					}
				},
				{
					"id": 10900,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.id"
					}
				},
				{
					"id": 10901,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.created_at"
					}
				},
				{
					"id": 10902,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.updated_at"
					}
				},
				{
					"id": 10899,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone at which the resource was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SoftDeletableEntity.deleted_at"
					}
				},
				{
					"id": 10890,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's role. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10883,
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "member"
				},
				{
					"id": 10891,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the User"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10892,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10893,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10894,
					"name": "password_hash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10895,
					"name": "api_token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An API token associated with the user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10896,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10897,
					"name": "beforeInsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"signatures": [
						{
							"id": 10898,
							"name": "beforeInsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10888
					]
				},
				{
					"title": "Properties",
					"children": [
						10900,
						10901,
						10902,
						10899,
						10890,
						10891,
						10892,
						10893,
						10894,
						10895,
						10896
					]
				},
				{
					"title": "Methods",
					"children": [
						10897
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
						"qualifiedName": "SoftDeletableEntity"
					},
					"name": "SoftDeletableEntity",
					"package": "@medusajs/medusa"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				9404,
				9475,
				9501,
				9504,
				9508,
				9646,
				9652,
				9724,
				9728,
				9746,
				10128,
				10170,
				10037,
				10043,
				10053,
				10214,
				10220,
				10249,
				10291,
				10524,
				10571,
				10727,
				10700,
				10741,
				10797,
				10804,
				10883
			]
		},
		{
			"title": "Classes",
			"children": [
				9335,
				9358,
				9370,
				9410,
				9462,
				9480,
				9518,
				9544,
				9555,
				9566,
				9574,
				9610,
				9589,
				9674,
				9694,
				9704,
				9714,
				9684,
				9655,
				9731,
				9623,
				9749,
				9794,
				9802,
				9768,
				9827,
				9807,
				9841,
				9856,
				9867,
				9934,
				9947,
				9882,
				9961,
				9986,
				10001,
				10006,
				10026,
				10134,
				10174,
				10061,
				10222,
				10244,
				10255,
				10190,
				10273,
				10340,
				10361,
				10388,
				10374,
				10403,
				10414,
				10435,
				10424,
				10478,
				10491,
				10445,
				10296,
				10514,
				10502,
				10530,
				10547,
				10600,
				10615,
				10576,
				10649,
				10631,
				10686,
				10661,
				10730,
				10703,
				10745,
				10759,
				10769,
				10778,
				10814,
				10843,
				10848,
				10868,
				10887
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"9334": {
			"sourceFileName": "../../../packages/medusa/src/models/index.ts",
			"qualifiedName": ""
		},
		"9335": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address"
		},
		"9338": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.customer_id"
		},
		"9339": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.customer"
		},
		"9340": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.company"
		},
		"9341": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.first_name"
		},
		"9342": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.last_name"
		},
		"9343": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.address_1"
		},
		"9344": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.address_2"
		},
		"9345": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.city"
		},
		"9346": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.country_code"
		},
		"9347": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.country"
		},
		"9348": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.province"
		},
		"9349": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.postal_code"
		},
		"9350": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.phone"
		},
		"9351": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.metadata"
		},
		"9352": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.beforeInsert"
		},
		"9353": {
			"sourceFileName": "../../../packages/medusa/src/models/address.ts",
			"qualifiedName": "Address.beforeInsert"
		},
		"9354": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9355": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9356": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9357": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9358": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig"
		},
		"9361": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig.user_id"
		},
		"9362": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig.opt_out"
		},
		"9363": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig.anonymize"
		},
		"9364": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig.beforeInsert"
		},
		"9365": {
			"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
			"qualifiedName": "AnalyticsConfig.beforeInsert"
		},
		"9366": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9367": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9368": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9369": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9370": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob"
		},
		"9373": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.type"
		},
		"9374": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.created_by"
		},
		"9375": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.created_by_user"
		},
		"9376": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.context"
		},
		"9377": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.result"
		},
		"9378": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type"
		},
		"9379": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.count"
		},
		"9380": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.advancement_count"
		},
		"9381": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.progress"
		},
		"9382": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.errors"
		},
		"9383": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.stat_descriptors"
		},
		"9384": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.file_key"
		},
		"9385": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "__type.file_size"
		},
		"9386": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.dry_run"
		},
		"9387": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.pre_processed_at"
		},
		"9388": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.processing_at"
		},
		"9389": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.confirmed_at"
		},
		"9390": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.completed_at"
		},
		"9391": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.canceled_at"
		},
		"9392": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.failed_at"
		},
		"9393": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.status"
		},
		"9394": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.loadStatus"
		},
		"9395": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.loadStatus"
		},
		"9396": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.beforeInsert"
		},
		"9397": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.beforeInsert"
		},
		"9398": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.toJSON"
		},
		"9399": {
			"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
			"qualifiedName": "BatchJob.toJSON"
		},
		"9400": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9401": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9402": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9403": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9404": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType"
		},
		"9405": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType.DEFAULT"
		},
		"9406": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType.SWAP"
		},
		"9407": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType.DRAFT_ORDER"
		},
		"9408": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType.PAYMENT_LINK"
		},
		"9409": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "CartType.CLAIM"
		},
		"9410": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart"
		},
		"9413": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.object"
		},
		"9414": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.email"
		},
		"9415": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.billing_address_id"
		},
		"9416": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.billing_address"
		},
		"9417": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.shipping_address_id"
		},
		"9418": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.shipping_address"
		},
		"9419": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.items"
		},
		"9420": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.region_id"
		},
		"9421": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.region"
		},
		"9422": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.discounts"
		},
		"9423": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.gift_cards"
		},
		"9424": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.customer_id"
		},
		"9425": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.customer"
		},
		"9426": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.payment_session"
		},
		"9427": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.payment_sessions"
		},
		"9428": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.payment_id"
		},
		"9429": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.payment"
		},
		"9430": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.shipping_methods"
		},
		"9431": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.type"
		},
		"9432": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.completed_at"
		},
		"9433": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.payment_authorized_at"
		},
		"9434": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.idempotency_key"
		},
		"9435": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.context"
		},
		"9436": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.metadata"
		},
		"9437": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.sales_channel_id"
		},
		"9438": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.sales_channel"
		},
		"9439": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.sales_channels"
		},
		"9440": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.shipping_total"
		},
		"9441": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.discount_total"
		},
		"9442": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.raw_discount_total"
		},
		"9443": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.item_tax_total"
		},
		"9444": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.shipping_tax_total"
		},
		"9445": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.tax_total"
		},
		"9446": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.refunded_total"
		},
		"9447": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.total"
		},
		"9448": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.subtotal"
		},
		"9449": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.refundable_amount"
		},
		"9450": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.gift_card_total"
		},
		"9451": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.gift_card_tax_total"
		},
		"9452": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.beforeInsert"
		},
		"9453": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.beforeInsert"
		},
		"9454": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.beforeUpdate"
		},
		"9455": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.beforeUpdate"
		},
		"9456": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.afterLoad"
		},
		"9457": {
			"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
			"qualifiedName": "Cart.afterLoad"
		},
		"9458": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9459": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9460": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9461": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9462": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage"
		},
		"9465": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.claim_item_id"
		},
		"9466": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.claim_item"
		},
		"9467": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.url"
		},
		"9468": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.metadata"
		},
		"9469": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.beforeInsert"
		},
		"9470": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-image.ts",
			"qualifiedName": "ClaimImage.beforeInsert"
		},
		"9471": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9472": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9473": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9474": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9475": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimReason"
		},
		"9476": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"9477": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"9478": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"9479": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"9480": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem"
		},
		"9483": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.images"
		},
		"9484": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.claim_order_id"
		},
		"9485": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.claim_order"
		},
		"9486": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.item_id"
		},
		"9487": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.item"
		},
		"9488": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.variant_id"
		},
		"9489": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.variant"
		},
		"9490": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.reason"
		},
		"9491": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.note"
		},
		"9492": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.quantity"
		},
		"9493": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.tags"
		},
		"9494": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.metadata"
		},
		"9495": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.beforeInsert"
		},
		"9496": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
			"qualifiedName": "ClaimItem.beforeInsert"
		},
		"9497": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9498": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9499": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9500": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9501": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimType"
		},
		"9502": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimType.REFUND"
		},
		"9503": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimType.REPLACE"
		},
		"9504": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimPaymentStatus"
		},
		"9505": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimPaymentStatus.NA"
		},
		"9506": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimPaymentStatus.NOT_REFUNDED"
		},
		"9507": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimPaymentStatus.REFUNDED"
		},
		"9508": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus"
		},
		"9509": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.NOT_FULFILLED"
		},
		"9510": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.PARTIALLY_FULFILLED"
		},
		"9511": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.FULFILLED"
		},
		"9512": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.PARTIALLY_SHIPPED"
		},
		"9513": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.SHIPPED"
		},
		"9514": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.PARTIALLY_RETURNED"
		},
		"9515": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.RETURNED"
		},
		"9516": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.CANCELED"
		},
		"9517": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimFulfillmentStatus.REQUIRES_ACTION"
		},
		"9518": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder"
		},
		"9521": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.payment_status"
		},
		"9522": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.fulfillment_status"
		},
		"9523": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.claim_items"
		},
		"9524": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.additional_items"
		},
		"9525": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.type"
		},
		"9526": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.order_id"
		},
		"9527": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.order"
		},
		"9528": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.return_order"
		},
		"9529": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.shipping_address_id"
		},
		"9530": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.shipping_address"
		},
		"9531": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.shipping_methods"
		},
		"9532": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.fulfillments"
		},
		"9533": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.refund_amount"
		},
		"9534": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.canceled_at"
		},
		"9535": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.created_at"
		},
		"9536": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.updated_at"
		},
		"9537": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.deleted_at"
		},
		"9538": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.no_notification"
		},
		"9539": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.metadata"
		},
		"9540": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.idempotency_key"
		},
		"9541": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.beforeInsert"
		},
		"9542": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-order.ts",
			"qualifiedName": "ClaimOrder.beforeInsert"
		},
		"9543": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9544": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-tag.ts",
			"qualifiedName": "ClaimTag"
		},
		"9547": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-tag.ts",
			"qualifiedName": "ClaimTag.value"
		},
		"9548": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-tag.ts",
			"qualifiedName": "ClaimTag.metadata"
		},
		"9549": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-tag.ts",
			"qualifiedName": "ClaimTag.beforeInsert"
		},
		"9550": {
			"sourceFileName": "../../../packages/medusa/src/models/claim-tag.ts",
			"qualifiedName": "ClaimTag.beforeInsert"
		},
		"9551": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9552": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9553": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9554": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9555": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country"
		},
		"9558": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.id"
		},
		"9559": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.iso_2"
		},
		"9560": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.iso_3"
		},
		"9561": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.num_code"
		},
		"9562": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.name"
		},
		"9563": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.display_name"
		},
		"9564": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.region_id"
		},
		"9565": {
			"sourceFileName": "../../../packages/medusa/src/models/country.ts",
			"qualifiedName": "Country.region"
		},
		"9566": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency"
		},
		"9569": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency.code"
		},
		"9570": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency.symbol"
		},
		"9571": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency.symbol_native"
		},
		"9572": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency.name"
		},
		"9573": {
			"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
			"qualifiedName": "Currency.includes_tax"
		},
		"9574": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption"
		},
		"9577": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.price"
		},
		"9578": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.shipping_option_id"
		},
		"9579": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.shipping_option"
		},
		"9580": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.cart_id"
		},
		"9581": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.cart"
		},
		"9582": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.metadata"
		},
		"9583": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.beforeInsert"
		},
		"9584": {
			"sourceFileName": "../../../packages/medusa/src/models/custom-shipping-option.ts",
			"qualifiedName": "CustomShippingOption.beforeInsert"
		},
		"9585": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9586": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9587": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9588": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9589": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer"
		},
		"9592": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.email"
		},
		"9593": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.first_name"
		},
		"9594": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.last_name"
		},
		"9595": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.billing_address_id"
		},
		"9596": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.billing_address"
		},
		"9597": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.shipping_addresses"
		},
		"9598": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.password_hash"
		},
		"9599": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.phone"
		},
		"9600": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.has_account"
		},
		"9601": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.orders"
		},
		"9602": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.groups"
		},
		"9603": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.metadata"
		},
		"9604": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.beforeInsert"
		},
		"9605": {
			"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
			"qualifiedName": "Customer.beforeInsert"
		},
		"9606": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9607": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9608": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9609": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9610": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"9613": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.name"
		},
		"9614": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.customers"
		},
		"9615": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.price_lists"
		},
		"9616": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.metadata"
		},
		"9617": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.beforeInsert"
		},
		"9618": {
			"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
			"qualifiedName": "CustomerGroup.beforeInsert"
		},
		"9619": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9620": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9621": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9622": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9623": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount"
		},
		"9626": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.code"
		},
		"9627": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.is_dynamic"
		},
		"9628": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.rule_id"
		},
		"9629": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.rule"
		},
		"9630": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.is_disabled"
		},
		"9631": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.parent_discount_id"
		},
		"9632": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.parent_discount"
		},
		"9633": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.starts_at"
		},
		"9634": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.ends_at"
		},
		"9635": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.valid_duration"
		},
		"9636": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.regions"
		},
		"9637": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.usage_limit"
		},
		"9638": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.usage_count"
		},
		"9639": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.metadata"
		},
		"9640": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.upperCaseCodeAndTrim"
		},
		"9641": {
			"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
			"qualifiedName": "Discount.upperCaseCodeAndTrim"
		},
		"9642": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9643": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9644": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9645": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9646": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType"
		},
		"9647": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType.PRODUCTS"
		},
		"9648": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType.PRODUCT_TYPES"
		},
		"9649": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType.PRODUCT_COLLECTIONS"
		},
		"9650": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType.PRODUCT_TAGS"
		},
		"9651": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionType.CUSTOMER_GROUPS"
		},
		"9652": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionOperator"
		},
		"9653": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionOperator.IN"
		},
		"9654": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountConditionOperator.NOT_IN"
		},
		"9655": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition"
		},
		"9658": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.type"
		},
		"9659": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.operator"
		},
		"9660": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.discount_rule_id"
		},
		"9661": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.discount_rule"
		},
		"9662": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.products"
		},
		"9663": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.product_types"
		},
		"9664": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.product_tags"
		},
		"9665": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.product_collections"
		},
		"9666": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.customer_groups"
		},
		"9667": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.metadata"
		},
		"9668": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.beforeInsert"
		},
		"9669": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
			"qualifiedName": "DiscountCondition.beforeInsert"
		},
		"9670": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9671": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9672": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9673": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9674": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup"
		},
		"9677": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.customer_group_id"
		},
		"9678": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.condition_id"
		},
		"9679": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.customer_group"
		},
		"9680": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.discount_condition"
		},
		"9681": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.created_at"
		},
		"9682": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.updated_at"
		},
		"9683": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-customer-group.ts",
			"qualifiedName": "DiscountConditionCustomerGroup.metadata"
		},
		"9684": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct"
		},
		"9687": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.product_id"
		},
		"9688": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.condition_id"
		},
		"9689": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.product"
		},
		"9690": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.discount_condition"
		},
		"9691": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.created_at"
		},
		"9692": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.updated_at"
		},
		"9693": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product.ts",
			"qualifiedName": "DiscountConditionProduct.metadata"
		},
		"9694": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection"
		},
		"9697": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.product_collection_id"
		},
		"9698": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.condition_id"
		},
		"9699": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.product_collection"
		},
		"9700": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.discount_condition"
		},
		"9701": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.created_at"
		},
		"9702": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.updated_at"
		},
		"9703": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-collection.ts",
			"qualifiedName": "DiscountConditionProductCollection.metadata"
		},
		"9704": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag"
		},
		"9707": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.product_tag_id"
		},
		"9708": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.condition_id"
		},
		"9709": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.product_tag"
		},
		"9710": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.discount_condition"
		},
		"9711": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.created_at"
		},
		"9712": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.updated_at"
		},
		"9713": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-tag.ts",
			"qualifiedName": "DiscountConditionProductTag.metadata"
		},
		"9714": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType"
		},
		"9717": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.product_type_id"
		},
		"9718": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.condition_id"
		},
		"9719": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.product_type"
		},
		"9720": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.discount_condition"
		},
		"9721": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.created_at"
		},
		"9722": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.updated_at"
		},
		"9723": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-condition-product-type.ts",
			"qualifiedName": "DiscountConditionProductType.metadata"
		},
		"9724": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRuleType"
		},
		"9725": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRuleType.FIXED"
		},
		"9726": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRuleType.PERCENTAGE"
		},
		"9727": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRuleType.FREE_SHIPPING"
		},
		"9728": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "AllocationType"
		},
		"9729": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "AllocationType.TOTAL"
		},
		"9730": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "AllocationType.ITEM"
		},
		"9731": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule"
		},
		"9734": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.description"
		},
		"9735": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.type"
		},
		"9736": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.value"
		},
		"9737": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.allocation"
		},
		"9738": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.conditions"
		},
		"9739": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.metadata"
		},
		"9740": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.beforeInsert"
		},
		"9741": {
			"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
			"qualifiedName": "DiscountRule.beforeInsert"
		},
		"9742": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9743": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9744": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9745": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9746": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrderStatus"
		},
		"9747": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrderStatus.OPEN"
		},
		"9748": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrderStatus.COMPLETED"
		},
		"9749": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"9752": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.status"
		},
		"9753": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.display_id"
		},
		"9754": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.cart_id"
		},
		"9755": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.cart"
		},
		"9756": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.order_id"
		},
		"9757": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.order"
		},
		"9758": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.canceled_at"
		},
		"9759": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.completed_at"
		},
		"9760": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.no_notification_order"
		},
		"9761": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.metadata"
		},
		"9762": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.idempotency_key"
		},
		"9763": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.beforeInsert"
		},
		"9764": {
			"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
			"qualifiedName": "DraftOrder.beforeInsert"
		},
		"9765": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9766": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9767": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9768": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"9771": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.claim_order_id"
		},
		"9772": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.claim_order"
		},
		"9773": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.swap_id"
		},
		"9774": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.swap"
		},
		"9775": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.order_id"
		},
		"9776": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.order"
		},
		"9777": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.no_notification"
		},
		"9778": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.provider_id"
		},
		"9779": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.location_id"
		},
		"9780": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.provider"
		},
		"9781": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.items"
		},
		"9782": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.tracking_links"
		},
		"9783": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.tracking_numbers"
		},
		"9784": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.data"
		},
		"9785": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.shipped_at"
		},
		"9786": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.canceled_at"
		},
		"9787": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.metadata"
		},
		"9788": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.idempotency_key"
		},
		"9789": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.beforeInsert"
		},
		"9790": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
			"qualifiedName": "Fulfillment.beforeInsert"
		},
		"9791": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9792": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9793": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9794": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem"
		},
		"9797": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem.fulfillment_id"
		},
		"9798": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem.item_id"
		},
		"9799": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem.fulfillment"
		},
		"9800": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem.item"
		},
		"9801": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItem.quantity"
		},
		"9802": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"9805": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.id"
		},
		"9806": {
			"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.is_installed"
		},
		"9807": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard"
		},
		"9810": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.code"
		},
		"9811": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.value"
		},
		"9812": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.balance"
		},
		"9813": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.region_id"
		},
		"9814": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.region"
		},
		"9815": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.order_id"
		},
		"9816": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.order"
		},
		"9817": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.is_disabled"
		},
		"9818": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.ends_at"
		},
		"9819": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.tax_rate"
		},
		"9820": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.metadata"
		},
		"9821": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.beforeInsert"
		},
		"9822": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
			"qualifiedName": "GiftCard.beforeInsert"
		},
		"9823": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9824": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9825": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9826": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9827": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction"
		},
		"9830": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.id"
		},
		"9831": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.gift_card_id"
		},
		"9832": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.gift_card"
		},
		"9833": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.order_id"
		},
		"9834": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.order"
		},
		"9835": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.amount"
		},
		"9836": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.created_at"
		},
		"9837": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.is_taxable"
		},
		"9838": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.tax_rate"
		},
		"9839": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.beforeInsert"
		},
		"9840": {
			"sourceFileName": "../../../packages/medusa/src/models/gift-card-transaction.ts",
			"qualifiedName": "GiftCardTransaction.beforeInsert"
		},
		"9841": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey"
		},
		"9844": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.id"
		},
		"9845": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.idempotency_key"
		},
		"9846": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.created_at"
		},
		"9847": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.locked_at"
		},
		"9848": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.request_method"
		},
		"9849": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.request_params"
		},
		"9850": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.request_path"
		},
		"9851": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.response_code"
		},
		"9852": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.response_body"
		},
		"9853": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.recovery_point"
		},
		"9854": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.beforeInsert"
		},
		"9855": {
			"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
			"qualifiedName": "IdempotencyKey.beforeInsert"
		},
		"9856": {
			"sourceFileName": "../../../packages/medusa/src/models/image.ts",
			"qualifiedName": "Image"
		},
		"9859": {
			"sourceFileName": "../../../packages/medusa/src/models/image.ts",
			"qualifiedName": "Image.url"
		},
		"9860": {
			"sourceFileName": "../../../packages/medusa/src/models/image.ts",
			"qualifiedName": "Image.metadata"
		},
		"9861": {
			"sourceFileName": "../../../packages/medusa/src/models/image.ts",
			"qualifiedName": "Image.beforeInsert"
		},
		"9862": {
			"sourceFileName": "../../../packages/medusa/src/models/image.ts",
			"qualifiedName": "Image.beforeInsert"
		},
		"9863": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9864": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9865": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9866": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9867": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite"
		},
		"9870": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.user_email"
		},
		"9871": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.role"
		},
		"9872": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.accepted"
		},
		"9873": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.token"
		},
		"9874": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.expires_at"
		},
		"9875": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.metadata"
		},
		"9876": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.beforeInsert"
		},
		"9877": {
			"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
			"qualifiedName": "Invite.beforeInsert"
		},
		"9878": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9879": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9880": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9881": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9882": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem"
		},
		"9885": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.cart_id"
		},
		"9886": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.cart"
		},
		"9887": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.order_id"
		},
		"9888": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.order"
		},
		"9889": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.swap_id"
		},
		"9890": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.swap"
		},
		"9891": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.claim_order_id"
		},
		"9892": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.claim_order"
		},
		"9893": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.tax_lines"
		},
		"9894": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.adjustments"
		},
		"9895": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.original_item_id"
		},
		"9896": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.order_edit_id"
		},
		"9897": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.order_edit"
		},
		"9898": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.title"
		},
		"9899": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.description"
		},
		"9900": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.thumbnail"
		},
		"9901": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.is_return"
		},
		"9902": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.is_giftcard"
		},
		"9903": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.should_merge"
		},
		"9904": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.allow_discounts"
		},
		"9905": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.has_shipping"
		},
		"9906": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.unit_price"
		},
		"9907": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.variant_id"
		},
		"9908": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.variant"
		},
		"9909": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.product_id"
		},
		"9910": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.quantity"
		},
		"9911": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.fulfilled_quantity"
		},
		"9912": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.returned_quantity"
		},
		"9913": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.shipped_quantity"
		},
		"9914": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.metadata"
		},
		"9915": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.includes_tax"
		},
		"9916": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.refundable"
		},
		"9917": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.subtotal"
		},
		"9918": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.tax_total"
		},
		"9919": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.total"
		},
		"9920": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.original_total"
		},
		"9921": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.original_tax_total"
		},
		"9922": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.discount_total"
		},
		"9923": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.raw_discount_total"
		},
		"9924": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.gift_card_total"
		},
		"9925": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.beforeInsert"
		},
		"9926": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.beforeInsert"
		},
		"9927": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.beforeUpdate"
		},
		"9928": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.beforeUpdate"
		},
		"9929": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.afterUpdateOrLoad"
		},
		"9930": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
			"qualifiedName": "LineItem.afterUpdateOrLoad"
		},
		"9931": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9932": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9933": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9934": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment"
		},
		"9937": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.id"
		},
		"9938": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.item_id"
		},
		"9939": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.item"
		},
		"9940": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.description"
		},
		"9941": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.discount"
		},
		"9942": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.discount_id"
		},
		"9943": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.amount"
		},
		"9944": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.metadata"
		},
		"9945": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.beforeInsert"
		},
		"9946": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-adjustment.ts",
			"qualifiedName": "LineItemAdjustment.beforeInsert"
		},
		"9947": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
			"qualifiedName": "LineItemTaxLine"
		},
		"9950": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
			"qualifiedName": "LineItemTaxLine.item_id"
		},
		"9951": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
			"qualifiedName": "LineItemTaxLine.item"
		},
		"9952": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
			"qualifiedName": "LineItemTaxLine.beforeInsert"
		},
		"9953": {
			"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
			"qualifiedName": "LineItemTaxLine.beforeInsert"
		},
		"9954": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.rate"
		},
		"9955": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.name"
		},
		"9956": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.code"
		},
		"9957": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.metadata"
		},
		"9958": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9959": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9960": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9961": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount"
		},
		"9964": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.currency_code"
		},
		"9965": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.currency"
		},
		"9966": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.amount"
		},
		"9967": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.min_quantity"
		},
		"9968": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.max_quantity"
		},
		"9969": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.price_list_id"
		},
		"9970": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.price_list"
		},
		"9971": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.variants"
		},
		"9972": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.variant"
		},
		"9973": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.variant_id"
		},
		"9974": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.region_id"
		},
		"9975": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.region"
		},
		"9976": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.beforeInsert"
		},
		"9977": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.beforeInsert"
		},
		"9978": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.beforeUpdate"
		},
		"9979": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.beforeUpdate"
		},
		"9980": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.afterLoad"
		},
		"9981": {
			"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
			"qualifiedName": "MoneyAmount.afterLoad"
		},
		"9982": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9983": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9984": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"9985": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"9986": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note"
		},
		"9989": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.value"
		},
		"9990": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.resource_type"
		},
		"9991": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.resource_id"
		},
		"9992": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.author_id"
		},
		"9993": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.author"
		},
		"9994": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.metadata"
		},
		"9995": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.beforeInsert"
		},
		"9996": {
			"sourceFileName": "../../../packages/medusa/src/models/note.ts",
			"qualifiedName": "Note.beforeInsert"
		},
		"9997": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"9998": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"9999": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10000": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10001": {
			"sourceFileName": "../../../packages/medusa/src/models/notification-provider.ts",
			"qualifiedName": "NotificationProvider"
		},
		"10004": {
			"sourceFileName": "../../../packages/medusa/src/models/notification-provider.ts",
			"qualifiedName": "NotificationProvider.id"
		},
		"10005": {
			"sourceFileName": "../../../packages/medusa/src/models/notification-provider.ts",
			"qualifiedName": "NotificationProvider.is_installed"
		},
		"10006": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification"
		},
		"10009": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.event_name"
		},
		"10010": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.resource_type"
		},
		"10011": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.resource_id"
		},
		"10012": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.customer_id"
		},
		"10013": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.customer"
		},
		"10014": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.to"
		},
		"10015": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.data"
		},
		"10016": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.parent_id"
		},
		"10017": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.parent_notification"
		},
		"10018": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.resends"
		},
		"10019": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.provider_id"
		},
		"10020": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.provider"
		},
		"10021": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.beforeInsert"
		},
		"10022": {
			"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
			"qualifiedName": "Notification.beforeInsert"
		},
		"10023": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10024": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10025": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10026": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth"
		},
		"10029": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.id"
		},
		"10030": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.display_name"
		},
		"10031": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.application_name"
		},
		"10032": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.install_url"
		},
		"10033": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.uninstall_url"
		},
		"10034": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.data"
		},
		"10035": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.beforeInsert"
		},
		"10036": {
			"sourceFileName": "../../../packages/medusa/src/models/oauth.ts",
			"qualifiedName": "Oauth.beforeInsert"
		},
		"10037": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus"
		},
		"10038": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus.PENDING"
		},
		"10039": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus.COMPLETED"
		},
		"10040": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus.ARCHIVED"
		},
		"10041": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus.CANCELED"
		},
		"10042": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "OrderStatus.REQUIRES_ACTION"
		},
		"10043": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus"
		},
		"10044": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.NOT_FULFILLED"
		},
		"10045": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.PARTIALLY_FULFILLED"
		},
		"10046": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.FULFILLED"
		},
		"10047": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.PARTIALLY_SHIPPED"
		},
		"10048": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.SHIPPED"
		},
		"10049": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.PARTIALLY_RETURNED"
		},
		"10050": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.RETURNED"
		},
		"10051": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.CANCELED"
		},
		"10052": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "FulfillmentStatus.REQUIRES_ACTION"
		},
		"10053": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus"
		},
		"10054": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.NOT_PAID"
		},
		"10055": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.AWAITING"
		},
		"10056": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.CAPTURED"
		},
		"10057": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.PARTIALLY_REFUNDED"
		},
		"10058": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.REFUNDED"
		},
		"10059": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.CANCELED"
		},
		"10060": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "PaymentStatus.REQUIRES_ACTION"
		},
		"10061": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order"
		},
		"10064": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.object"
		},
		"10065": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.status"
		},
		"10066": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.fulfillment_status"
		},
		"10067": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.payment_status"
		},
		"10068": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.display_id"
		},
		"10069": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.cart_id"
		},
		"10070": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.cart"
		},
		"10071": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.customer_id"
		},
		"10072": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.customer"
		},
		"10073": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.email"
		},
		"10074": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.billing_address_id"
		},
		"10075": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.billing_address"
		},
		"10076": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.shipping_address_id"
		},
		"10077": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.shipping_address"
		},
		"10078": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.region_id"
		},
		"10079": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.region"
		},
		"10080": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.currency_code"
		},
		"10081": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.currency"
		},
		"10082": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.tax_rate"
		},
		"10083": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.discounts"
		},
		"10084": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.gift_cards"
		},
		"10085": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.shipping_methods"
		},
		"10086": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.payments"
		},
		"10087": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.fulfillments"
		},
		"10088": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.returns"
		},
		"10089": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.claims"
		},
		"10090": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.refunds"
		},
		"10091": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.swaps"
		},
		"10092": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.draft_order_id"
		},
		"10093": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.draft_order"
		},
		"10094": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.edits"
		},
		"10095": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.items"
		},
		"10096": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.gift_card_transactions"
		},
		"10097": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.canceled_at"
		},
		"10098": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.metadata"
		},
		"10099": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.no_notification"
		},
		"10100": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.idempotency_key"
		},
		"10101": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.external_id"
		},
		"10102": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.sales_channel_id"
		},
		"10103": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.sales_channel"
		},
		"10104": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.sales_channels"
		},
		"10105": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.shipping_total"
		},
		"10106": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.shipping_tax_total"
		},
		"10107": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.discount_total"
		},
		"10108": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.raw_discount_total"
		},
		"10109": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.item_tax_total"
		},
		"10110": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.tax_total"
		},
		"10111": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.refunded_total"
		},
		"10112": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.total"
		},
		"10113": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.subtotal"
		},
		"10114": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.paid_total"
		},
		"10115": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.refundable_amount"
		},
		"10116": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.gift_card_total"
		},
		"10117": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.gift_card_tax_total"
		},
		"10118": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.returnable_items"
		},
		"10119": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.beforeInsert"
		},
		"10120": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.beforeInsert"
		},
		"10121": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.beforeUpdate"
		},
		"10122": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.beforeUpdate"
		},
		"10123": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.afterLoad"
		},
		"10124": {
			"sourceFileName": "../../../packages/medusa/src/models/order.ts",
			"qualifiedName": "Order.afterLoad"
		},
		"10125": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10126": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10127": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10128": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus"
		},
		"10129": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus.CONFIRMED"
		},
		"10130": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus.DECLINED"
		},
		"10131": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus.REQUESTED"
		},
		"10132": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus.CREATED"
		},
		"10133": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEditStatus.CANCELED"
		},
		"10134": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"10137": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.order_id"
		},
		"10138": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.order"
		},
		"10139": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.changes"
		},
		"10140": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.internal_note"
		},
		"10141": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.created_by"
		},
		"10142": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.requested_by"
		},
		"10143": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.requested_at"
		},
		"10144": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.confirmed_by"
		},
		"10145": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.confirmed_at"
		},
		"10146": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.declined_by"
		},
		"10147": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.declined_reason"
		},
		"10148": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.declined_at"
		},
		"10149": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.canceled_by"
		},
		"10150": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.canceled_at"
		},
		"10151": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.items"
		},
		"10152": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.payment_collection_id"
		},
		"10153": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.payment_collection"
		},
		"10154": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.shipping_total"
		},
		"10155": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.discount_total"
		},
		"10156": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.tax_total"
		},
		"10157": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.total"
		},
		"10158": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.subtotal"
		},
		"10159": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.gift_card_total"
		},
		"10160": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.gift_card_tax_total"
		},
		"10161": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.difference_due"
		},
		"10162": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.status"
		},
		"10163": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.beforeInsert"
		},
		"10164": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.beforeInsert"
		},
		"10165": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.loadStatus"
		},
		"10166": {
			"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
			"qualifiedName": "OrderEdit.loadStatus"
		},
		"10167": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10168": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10169": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10170": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderEditItemChangeType"
		},
		"10171": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderEditItemChangeType.ITEM_ADD"
		},
		"10172": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderEditItemChangeType.ITEM_REMOVE"
		},
		"10173": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderEditItemChangeType.ITEM_UPDATE"
		},
		"10174": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange"
		},
		"10177": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.type"
		},
		"10178": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.order_edit_id"
		},
		"10179": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.order_edit"
		},
		"10180": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.original_line_item_id"
		},
		"10181": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.original_line_item"
		},
		"10182": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.line_item_id"
		},
		"10183": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.line_item"
		},
		"10184": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.beforeInsert"
		},
		"10185": {
			"sourceFileName": "../../../packages/medusa/src/models/order-item-change.ts",
			"qualifiedName": "OrderItemChange.beforeInsert"
		},
		"10186": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10187": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10188": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10189": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10190": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment"
		},
		"10193": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.swap_id"
		},
		"10194": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.swap"
		},
		"10195": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.cart_id"
		},
		"10196": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.cart"
		},
		"10197": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.order_id"
		},
		"10198": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.order"
		},
		"10199": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.amount"
		},
		"10200": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.currency_code"
		},
		"10201": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.currency"
		},
		"10202": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.amount_refunded"
		},
		"10203": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.provider_id"
		},
		"10204": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.data"
		},
		"10205": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.captured_at"
		},
		"10206": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.canceled_at"
		},
		"10207": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.metadata"
		},
		"10208": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.idempotency_key"
		},
		"10209": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.beforeInsert"
		},
		"10210": {
			"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
			"qualifiedName": "Payment.beforeInsert"
		},
		"10211": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10212": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10213": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10214": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"10215": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.NOT_PAID"
		},
		"10216": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.AWAITING"
		},
		"10217": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.AUTHORIZED"
		},
		"10218": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.PARTIALLY_AUTHORIZED"
		},
		"10219": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.CANCELED"
		},
		"10220": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionType"
		},
		"10221": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollectionType.ORDER_EDIT"
		},
		"10222": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"10225": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.type"
		},
		"10226": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.status"
		},
		"10227": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.description"
		},
		"10228": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.amount"
		},
		"10229": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.authorized_amount"
		},
		"10230": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.region_id"
		},
		"10231": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.region"
		},
		"10232": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.currency_code"
		},
		"10233": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.currency"
		},
		"10234": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.payment_sessions"
		},
		"10235": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.payments"
		},
		"10236": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.metadata"
		},
		"10237": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.created_by"
		},
		"10238": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.beforeInsert"
		},
		"10239": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
			"qualifiedName": "PaymentCollection.beforeInsert"
		},
		"10240": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10241": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10242": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10243": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10244": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
			"qualifiedName": "PaymentProvider"
		},
		"10247": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
			"qualifiedName": "PaymentProvider.id"
		},
		"10248": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
			"qualifiedName": "PaymentProvider.is_installed"
		},
		"10249": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"10250": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.AUTHORIZED"
		},
		"10251": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.PENDING"
		},
		"10252": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.REQUIRES_MORE"
		},
		"10253": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.ERROR"
		},
		"10254": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.CANCELED"
		},
		"10255": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession"
		},
		"10258": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.cart_id"
		},
		"10259": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.cart"
		},
		"10260": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.provider_id"
		},
		"10261": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.is_selected"
		},
		"10262": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.is_initiated"
		},
		"10263": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.status"
		},
		"10264": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.data"
		},
		"10265": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.idempotency_key"
		},
		"10266": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.amount"
		},
		"10267": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.payment_authorized_at"
		},
		"10268": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.beforeInsert"
		},
		"10269": {
			"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
			"qualifiedName": "PaymentSession.beforeInsert"
		},
		"10270": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10271": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10272": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10273": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"10276": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.name"
		},
		"10277": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.description"
		},
		"10278": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.type"
		},
		"10279": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.status"
		},
		"10280": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.starts_at"
		},
		"10281": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.ends_at"
		},
		"10282": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.customer_groups"
		},
		"10283": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.prices"
		},
		"10284": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.includes_tax"
		},
		"10285": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.beforeInsert"
		},
		"10286": {
			"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
			"qualifiedName": "PriceList.beforeInsert"
		},
		"10287": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10288": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10289": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10290": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10291": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "ProductStatus"
		},
		"10292": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "ProductStatus.DRAFT"
		},
		"10293": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "ProductStatus.PROPOSED"
		},
		"10294": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "ProductStatus.PUBLISHED"
		},
		"10295": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "ProductStatus.REJECTED"
		},
		"10296": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product"
		},
		"10299": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.title"
		},
		"10300": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.subtitle"
		},
		"10301": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.description"
		},
		"10302": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.handle"
		},
		"10303": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.is_giftcard"
		},
		"10304": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.status"
		},
		"10305": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.images"
		},
		"10306": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.thumbnail"
		},
		"10307": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.options"
		},
		"10308": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.variants"
		},
		"10309": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.categories"
		},
		"10310": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.profile_id"
		},
		"10311": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.profile"
		},
		"10312": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.profiles"
		},
		"10313": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.weight"
		},
		"10314": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.length"
		},
		"10315": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.height"
		},
		"10316": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.width"
		},
		"10317": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.hs_code"
		},
		"10318": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.origin_country"
		},
		"10319": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.mid_code"
		},
		"10320": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.material"
		},
		"10321": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.collection_id"
		},
		"10322": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.collection"
		},
		"10323": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.type_id"
		},
		"10324": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.type"
		},
		"10325": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.tags"
		},
		"10326": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.discountable"
		},
		"10327": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.external_id"
		},
		"10328": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.metadata"
		},
		"10329": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.sales_channels"
		},
		"10330": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.beforeInsert"
		},
		"10331": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.beforeInsert"
		},
		"10332": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.beforeUpdate"
		},
		"10333": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.beforeUpdate"
		},
		"10334": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.afterLoad"
		},
		"10335": {
			"sourceFileName": "../../../packages/medusa/src/models/product.ts",
			"qualifiedName": "Product.afterLoad"
		},
		"10336": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10337": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10338": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10339": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10340": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"10341": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.productCategoryProductJoinTable"
		},
		"10342": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.treeRelations"
		},
		"10345": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.name"
		},
		"10346": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.description"
		},
		"10347": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.handle"
		},
		"10348": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.is_active"
		},
		"10349": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.is_internal"
		},
		"10350": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.parent_category"
		},
		"10351": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.parent_category_id"
		},
		"10352": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.category_children"
		},
		"10353": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.rank"
		},
		"10354": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.metadata"
		},
		"10355": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.products"
		},
		"10356": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.beforeInsert"
		},
		"10357": {
			"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
			"qualifiedName": "ProductCategory.beforeInsert"
		},
		"10358": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10359": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10360": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10361": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"10364": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.title"
		},
		"10365": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.handle"
		},
		"10366": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.products"
		},
		"10367": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.metadata"
		},
		"10368": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.createHandleIfNotProvided"
		},
		"10369": {
			"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
			"qualifiedName": "ProductCollection.createHandleIfNotProvided"
		},
		"10370": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10371": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10372": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10373": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10374": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption"
		},
		"10377": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.title"
		},
		"10378": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.values"
		},
		"10379": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.product_id"
		},
		"10380": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.product"
		},
		"10381": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.metadata"
		},
		"10382": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.beforeInsert"
		},
		"10383": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option.ts",
			"qualifiedName": "ProductOption.beforeInsert"
		},
		"10384": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10385": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10386": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10387": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10388": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue"
		},
		"10391": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.value"
		},
		"10392": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.option_id"
		},
		"10393": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.option"
		},
		"10394": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.variant_id"
		},
		"10395": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.variant"
		},
		"10396": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.metadata"
		},
		"10397": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.beforeInsert"
		},
		"10398": {
			"sourceFileName": "../../../packages/medusa/src/models/product-option-value.ts",
			"qualifiedName": "ProductOptionValue.beforeInsert"
		},
		"10399": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10400": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10401": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10402": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10403": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"10406": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
			"qualifiedName": "ProductTag.value"
		},
		"10407": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
			"qualifiedName": "ProductTag.metadata"
		},
		"10408": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
			"qualifiedName": "ProductTag.beforeInsert"
		},
		"10409": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
			"qualifiedName": "ProductTag.beforeInsert"
		},
		"10410": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10411": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10412": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10413": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10414": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate"
		},
		"10417": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.product_id"
		},
		"10418": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.rate_id"
		},
		"10419": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.product"
		},
		"10420": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.tax_rate"
		},
		"10421": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.created_at"
		},
		"10422": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.updated_at"
		},
		"10423": {
			"sourceFileName": "../../../packages/medusa/src/models/product-tax-rate.ts",
			"qualifiedName": "ProductTaxRate.metadata"
		},
		"10424": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"10427": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
			"qualifiedName": "ProductType.value"
		},
		"10428": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
			"qualifiedName": "ProductType.metadata"
		},
		"10429": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
			"qualifiedName": "ProductType.beforeInsert"
		},
		"10430": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
			"qualifiedName": "ProductType.beforeInsert"
		},
		"10431": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10432": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10433": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10434": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10435": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate"
		},
		"10438": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.product_type_id"
		},
		"10439": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.rate_id"
		},
		"10440": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.product_type"
		},
		"10441": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.tax_rate"
		},
		"10442": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.created_at"
		},
		"10443": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.updated_at"
		},
		"10444": {
			"sourceFileName": "../../../packages/medusa/src/models/product-type-tax-rate.ts",
			"qualifiedName": "ProductTypeTaxRate.metadata"
		},
		"10445": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"10448": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.title"
		},
		"10449": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.product_id"
		},
		"10450": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.product"
		},
		"10451": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.prices"
		},
		"10452": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.sku"
		},
		"10453": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.barcode"
		},
		"10454": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.ean"
		},
		"10455": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.upc"
		},
		"10456": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.variant_rank"
		},
		"10457": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.inventory_quantity"
		},
		"10458": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.allow_backorder"
		},
		"10459": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.manage_inventory"
		},
		"10460": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.hs_code"
		},
		"10461": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.origin_country"
		},
		"10462": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.mid_code"
		},
		"10463": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.material"
		},
		"10464": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.weight"
		},
		"10465": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.length"
		},
		"10466": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.height"
		},
		"10467": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.width"
		},
		"10468": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.options"
		},
		"10469": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.inventory_items"
		},
		"10470": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.metadata"
		},
		"10471": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.purchasable"
		},
		"10472": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.beforeInsert"
		},
		"10473": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
			"qualifiedName": "ProductVariant.beforeInsert"
		},
		"10474": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10475": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10476": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10477": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10478": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem"
		},
		"10481": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.inventory_item_id"
		},
		"10482": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.variant_id"
		},
		"10483": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.variant"
		},
		"10484": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.required_quantity"
		},
		"10485": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.beforeInsert"
		},
		"10486": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-inventory-item.ts",
			"qualifiedName": "ProductVariantInventoryItem.beforeInsert"
		},
		"10487": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10488": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10489": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10490": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10491": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-money-amount.ts",
			"qualifiedName": "ProductVariantMoneyAmount"
		},
		"10494": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-money-amount.ts",
			"qualifiedName": "ProductVariantMoneyAmount.money_amount_id"
		},
		"10495": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-money-amount.ts",
			"qualifiedName": "ProductVariantMoneyAmount.variant_id"
		},
		"10496": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-money-amount.ts",
			"qualifiedName": "ProductVariantMoneyAmount.beforeInsert"
		},
		"10497": {
			"sourceFileName": "../../../packages/medusa/src/models/product-variant-money-amount.ts",
			"qualifiedName": "ProductVariantMoneyAmount.beforeInsert"
		},
		"10498": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10499": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10500": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10501": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10502": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey"
		},
		"10505": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.created_by"
		},
		"10506": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.revoked_by"
		},
		"10507": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.revoked_at"
		},
		"10508": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.title"
		},
		"10509": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.beforeInsert"
		},
		"10510": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
			"qualifiedName": "PublishableApiKey.beforeInsert"
		},
		"10511": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10512": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10513": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10514": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel"
		},
		"10517": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel.id"
		},
		"10518": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel.sales_channel_id"
		},
		"10519": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel.publishable_key_id"
		},
		"10520": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel.beforeInsert"
		},
		"10521": {
			"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key-sales-channel.ts",
			"qualifiedName": "PublishableApiKeySalesChannel.beforeInsert"
		},
		"10522": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10523": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10524": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason"
		},
		"10525": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason.DISCOUNT"
		},
		"10526": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason.RETURN"
		},
		"10527": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason.SWAP"
		},
		"10528": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason.CLAIM"
		},
		"10529": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "RefundReason.OTHER"
		},
		"10530": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund"
		},
		"10533": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.order_id"
		},
		"10534": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.payment_id"
		},
		"10535": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.order"
		},
		"10536": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.payment"
		},
		"10537": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.amount"
		},
		"10538": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.note"
		},
		"10539": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.reason"
		},
		"10540": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.metadata"
		},
		"10541": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.idempotency_key"
		},
		"10542": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.beforeInsert"
		},
		"10543": {
			"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
			"qualifiedName": "Refund.beforeInsert"
		},
		"10544": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10545": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10546": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10547": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region"
		},
		"10550": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.name"
		},
		"10551": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.currency_code"
		},
		"10552": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.currency"
		},
		"10553": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.tax_rate"
		},
		"10554": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.tax_rates"
		},
		"10555": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.tax_code"
		},
		"10556": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.gift_cards_taxable"
		},
		"10557": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.automatic_taxes"
		},
		"10558": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.countries"
		},
		"10559": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.tax_provider_id"
		},
		"10560": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.tax_provider"
		},
		"10561": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.payment_providers"
		},
		"10562": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.fulfillment_providers"
		},
		"10563": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.metadata"
		},
		"10564": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.includes_tax"
		},
		"10565": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.beforeInsert"
		},
		"10566": {
			"sourceFileName": "../../../packages/medusa/src/models/region.ts",
			"qualifiedName": "Region.beforeInsert"
		},
		"10567": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10568": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10569": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10570": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10571": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "ReturnStatus"
		},
		"10572": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "ReturnStatus.REQUESTED"
		},
		"10573": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "ReturnStatus.RECEIVED"
		},
		"10574": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "ReturnStatus.REQUIRES_ACTION"
		},
		"10575": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "ReturnStatus.CANCELED"
		},
		"10576": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return"
		},
		"10579": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.status"
		},
		"10580": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.items"
		},
		"10581": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.swap_id"
		},
		"10582": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.swap"
		},
		"10583": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.claim_order_id"
		},
		"10584": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.claim_order"
		},
		"10585": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.order_id"
		},
		"10586": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.order"
		},
		"10587": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.shipping_method"
		},
		"10588": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.location_id"
		},
		"10589": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.shipping_data"
		},
		"10590": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.refund_amount"
		},
		"10591": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.received_at"
		},
		"10592": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.no_notification"
		},
		"10593": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.metadata"
		},
		"10594": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.idempotency_key"
		},
		"10595": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.beforeInsert"
		},
		"10596": {
			"sourceFileName": "../../../packages/medusa/src/models/return.ts",
			"qualifiedName": "Return.beforeInsert"
		},
		"10597": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10598": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10599": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10600": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem"
		},
		"10603": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.return_id"
		},
		"10604": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.item_id"
		},
		"10605": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.return_order"
		},
		"10606": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.item"
		},
		"10607": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.quantity"
		},
		"10608": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.is_requested"
		},
		"10609": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.requested_quantity"
		},
		"10610": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.received_quantity"
		},
		"10611": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.reason_id"
		},
		"10612": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.reason"
		},
		"10613": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.note"
		},
		"10614": {
			"sourceFileName": "../../../packages/medusa/src/models/return-item.ts",
			"qualifiedName": "ReturnItem.metadata"
		},
		"10615": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"10618": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.value"
		},
		"10619": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.label"
		},
		"10620": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.description"
		},
		"10621": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.parent_return_reason_id"
		},
		"10622": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.parent_return_reason"
		},
		"10623": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.return_reason_children"
		},
		"10624": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.metadata"
		},
		"10625": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.beforeInsert"
		},
		"10626": {
			"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
			"qualifiedName": "ReturnReason.beforeInsert"
		},
		"10627": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10628": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10629": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10630": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10631": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"10634": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.name"
		},
		"10635": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.description"
		},
		"10636": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.is_disabled"
		},
		"10637": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.metadata"
		},
		"10638": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.products"
		},
		"10639": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.carts"
		},
		"10640": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.orders"
		},
		"10641": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.publishableKeys"
		},
		"10642": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.locations"
		},
		"10643": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.beforeInsert"
		},
		"10644": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
			"qualifiedName": "SalesChannel.beforeInsert"
		},
		"10645": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10646": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10647": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10648": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10649": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation"
		},
		"10652": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation.sales_channel_id"
		},
		"10653": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation.location_id"
		},
		"10654": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation.sales_channel"
		},
		"10655": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation.beforeInsert"
		},
		"10656": {
			"sourceFileName": "../../../packages/medusa/src/models/sales-channel-location.ts",
			"qualifiedName": "SalesChannelLocation.beforeInsert"
		},
		"10657": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10658": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10659": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10660": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10661": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod"
		},
		"10664": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"10665": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.shipping_option_id"
		},
		"10666": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.order_id"
		},
		"10667": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.order"
		},
		"10668": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.claim_order_id"
		},
		"10669": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.claim_order"
		},
		"10670": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.cart_id"
		},
		"10671": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.cart"
		},
		"10672": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.swap_id"
		},
		"10673": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.swap"
		},
		"10674": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.return_id"
		},
		"10675": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.return_order"
		},
		"10676": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.shipping_option"
		},
		"10677": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.tax_lines"
		},
		"10678": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"10679": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"10680": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.includes_tax"
		},
		"10681": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.subtotal"
		},
		"10682": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.total"
		},
		"10683": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.tax_total"
		},
		"10684": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.beforeInsert"
		},
		"10685": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
			"qualifiedName": "ShippingMethod.beforeInsert"
		},
		"10686": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
			"qualifiedName": "ShippingMethodTaxLine"
		},
		"10689": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
			"qualifiedName": "ShippingMethodTaxLine.shipping_method_id"
		},
		"10690": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
			"qualifiedName": "ShippingMethodTaxLine.shipping_method"
		},
		"10691": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
			"qualifiedName": "ShippingMethodTaxLine.beforeInsert"
		},
		"10692": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
			"qualifiedName": "ShippingMethodTaxLine.beforeInsert"
		},
		"10693": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.rate"
		},
		"10694": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.name"
		},
		"10695": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.code"
		},
		"10696": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-line.ts",
			"qualifiedName": "TaxLine.metadata"
		},
		"10697": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10698": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10699": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10700": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"10701": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType.FLAT_RATE"
		},
		"10702": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType.CALCULATED"
		},
		"10703": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"10706": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.name"
		},
		"10707": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.region_id"
		},
		"10708": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.region"
		},
		"10709": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.profile_id"
		},
		"10710": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.profile"
		},
		"10711": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.provider_id"
		},
		"10712": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.provider"
		},
		"10713": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.price_type"
		},
		"10714": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.amount"
		},
		"10715": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.is_return"
		},
		"10716": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.admin_only"
		},
		"10717": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.requirements"
		},
		"10718": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.data"
		},
		"10719": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.metadata"
		},
		"10720": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.includes_tax"
		},
		"10721": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.beforeInsert"
		},
		"10722": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
			"qualifiedName": "ShippingOption.beforeInsert"
		},
		"10723": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10724": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10725": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10726": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10727": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "RequirementType"
		},
		"10728": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "RequirementType.MIN_SUBTOTAL"
		},
		"10729": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "RequirementType.MAX_SUBTOTAL"
		},
		"10730": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement"
		},
		"10733": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.id"
		},
		"10734": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.shipping_option_id"
		},
		"10735": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.shipping_option"
		},
		"10736": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.type"
		},
		"10737": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.amount"
		},
		"10738": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.deleted_at"
		},
		"10739": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.beforeInsert"
		},
		"10740": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
			"qualifiedName": "ShippingOptionRequirement.beforeInsert"
		},
		"10741": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfileType"
		},
		"10742": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfileType.DEFAULT"
		},
		"10743": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfileType.GIFT_CARD"
		},
		"10744": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfileType.CUSTOM"
		},
		"10745": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"10748": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.name"
		},
		"10749": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.type"
		},
		"10750": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.products"
		},
		"10751": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.shipping_options"
		},
		"10752": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.metadata"
		},
		"10753": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.beforeInsert"
		},
		"10754": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.beforeInsert"
		},
		"10755": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10756": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10757": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10758": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10759": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate"
		},
		"10762": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.shipping_option_id"
		},
		"10763": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.rate_id"
		},
		"10764": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.shipping_option"
		},
		"10765": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.tax_rate"
		},
		"10766": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.created_at"
		},
		"10767": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.updated_at"
		},
		"10768": {
			"sourceFileName": "../../../packages/medusa/src/models/shipping-tax-rate.ts",
			"qualifiedName": "ShippingTaxRate.metadata"
		},
		"10769": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob"
		},
		"10772": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.id"
		},
		"10773": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.event_name"
		},
		"10774": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.data"
		},
		"10775": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.options"
		},
		"10776": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.beforeInsert"
		},
		"10777": {
			"sourceFileName": "../../../packages/medusa/src/models/staged-job.ts",
			"qualifiedName": "StagedJob.beforeInsert"
		},
		"10778": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store"
		},
		"10781": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.name"
		},
		"10782": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.default_currency_code"
		},
		"10783": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.default_currency"
		},
		"10784": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.currencies"
		},
		"10785": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.swap_link_template"
		},
		"10786": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.payment_link_template"
		},
		"10787": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.invite_link_template"
		},
		"10788": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.default_location_id"
		},
		"10789": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.metadata"
		},
		"10790": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.default_sales_channel_id"
		},
		"10791": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.default_sales_channel"
		},
		"10792": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.beforeInsert"
		},
		"10793": {
			"sourceFileName": "../../../packages/medusa/src/models/store.ts",
			"qualifiedName": "Store.beforeInsert"
		},
		"10794": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10795": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10796": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10797": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus"
		},
		"10798": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.NOT_FULFILLED"
		},
		"10799": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.FULFILLED"
		},
		"10800": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.SHIPPED"
		},
		"10801": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.PARTIALLY_SHIPPED"
		},
		"10802": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.CANCELED"
		},
		"10803": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapFulfillmentStatus.REQUIRES_ACTION"
		},
		"10804": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus"
		},
		"10805": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.NOT_PAID"
		},
		"10806": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.AWAITING"
		},
		"10807": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.CAPTURED"
		},
		"10808": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.CONFIRMED"
		},
		"10809": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.CANCELED"
		},
		"10810": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.DIFFERENCE_REFUNDED"
		},
		"10811": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.PARTIALLY_REFUNDED"
		},
		"10812": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.REFUNDED"
		},
		"10813": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "SwapPaymentStatus.REQUIRES_ACTION"
		},
		"10814": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap"
		},
		"10817": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.fulfillment_status"
		},
		"10818": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.payment_status"
		},
		"10819": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.order_id"
		},
		"10820": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.order"
		},
		"10821": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.additional_items"
		},
		"10822": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.return_order"
		},
		"10823": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.fulfillments"
		},
		"10824": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.payment"
		},
		"10825": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.difference_due"
		},
		"10826": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.shipping_address_id"
		},
		"10827": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.shipping_address"
		},
		"10828": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.shipping_methods"
		},
		"10829": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.cart_id"
		},
		"10830": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.cart"
		},
		"10831": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.confirmed_at"
		},
		"10832": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.canceled_at"
		},
		"10833": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.no_notification"
		},
		"10834": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.allow_backorder"
		},
		"10835": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.idempotency_key"
		},
		"10836": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.metadata"
		},
		"10837": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.beforeInsert"
		},
		"10838": {
			"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
			"qualifiedName": "Swap.beforeInsert"
		},
		"10839": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10840": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10841": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10842": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10843": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
			"qualifiedName": "TaxProvider"
		},
		"10846": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
			"qualifiedName": "TaxProvider.id"
		},
		"10847": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
			"qualifiedName": "TaxProvider.is_installed"
		},
		"10848": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"10851": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.rate"
		},
		"10852": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.code"
		},
		"10853": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.name"
		},
		"10854": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.region_id"
		},
		"10855": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.region"
		},
		"10856": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.metadata"
		},
		"10857": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.products"
		},
		"10858": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.product_types"
		},
		"10859": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.shipping_options"
		},
		"10860": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.product_count"
		},
		"10861": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.product_type_count"
		},
		"10862": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.shipping_option_count"
		},
		"10863": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.beforeInsert"
		},
		"10864": {
			"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
			"qualifiedName": "TaxRate.beforeInsert"
		},
		"10865": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10866": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10867": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10868": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink"
		},
		"10871": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.url"
		},
		"10872": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.tracking_number"
		},
		"10873": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.fulfillment_id"
		},
		"10874": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.fulfillment"
		},
		"10875": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.idempotency_key"
		},
		"10876": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.metadata"
		},
		"10877": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.beforeInsert"
		},
		"10878": {
			"sourceFileName": "../../../packages/medusa/src/models/tracking-link.ts",
			"qualifiedName": "TrackingLink.beforeInsert"
		},
		"10879": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10880": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10881": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10882": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"10883": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "UserRoles"
		},
		"10884": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "UserRoles.ADMIN"
		},
		"10885": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "UserRoles.MEMBER"
		},
		"10886": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "UserRoles.DEVELOPER"
		},
		"10887": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User"
		},
		"10890": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.role"
		},
		"10891": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.email"
		},
		"10892": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.first_name"
		},
		"10893": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.last_name"
		},
		"10894": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.password_hash"
		},
		"10895": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.api_token"
		},
		"10896": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.metadata"
		},
		"10897": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.beforeInsert"
		},
		"10898": {
			"sourceFileName": "../../../packages/medusa/src/models/user.ts",
			"qualifiedName": "User.beforeInsert"
		},
		"10899": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/soft-deletable-entity.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"10900": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"10901": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"10902": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
			"qualifiedName": "BaseEntity.updated_at"
		}
	}
}